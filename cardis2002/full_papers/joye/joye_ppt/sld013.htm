
<!--  Presentation generated by Microsoft Internet Assistant for Macintosh PowerPoint 98 -->

<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html;charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft Internet Assistant for Macintosh PowerPoint 98">
 <TITLE>Protected division Method</TITLE> 
</HEAD>

<BODY     >

<CENTER>
<TABLE WIDTH=100%> 
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <A HREF="sld001.htm"><IMG SRC="first.gif" BORDER=0 ALT="First"></A>
         <A HREF="sld012.htm"><IMG SRC="prev.gif" BORDER=0 ALT="Previous"></A>
         <A HREF="sld014.htm"><IMG SRC="next.gif" BORDER=0 ALT="Next"></A>
         <A HREF="sld019.htm"><IMG SRC="last.gif" BORDER=0 ALT="Last"></A>
         <IMG SRC="space.gif" BORDER=0>
         <A HREF="index.htm"><IMG SRC="info.gif" BORDER=0 ALT="Index"></A>
         <A HREF="tsld013.htm"><IMG SRC="text.gif" BORDER=0 ALT="Text"></A>
     </TD> </TR>
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <IMG SRC="img013.jpg" usemap="#Objmap" WIDTH=640 HEIGHT=480 BORDER=0>
     </TD> </TR>
</TABLE>
<P>Slide 13 of 19</P>
</CENTER>

 <CENTER><Font size=4> <STRONG> Notes:  </FONT></STRONG><HR SIZE=3></CENTER><P> <UL>
Alpha contains the carry as before
</UL><UL>
Delta indicates the usage of variable Baddr or Caddr for the 2’s complement operation (gamma = 1 :  use Caddr, gamma=0 : use Baddr)
</UL><UL>
Alpha’ is the old value of Alpha (contains 0 if correction required)
</UL> </P> 
<!-- <UL></P>
<P><H2>Protected division Method</H2></P>
<P></UL></P>
<P><UL></P>
<P>___________________________________________
<BR>Input:     a =  ( 0, am-1 , …, a0 )  
<BR>		       b =  ( bn-1 , …, b0 )           A =  ( 0, am-1 , …, am-n+1 )
<BR>Output:  q = a div b   and   r = a mod b
<BR>___________________________________________
<BR>_’ _ 1; _ _ 1; _ _ 1; 
<BR>for j = 1  to (m – n + 1)   do
<BR>		 a     _ SHLm+1(a , 1)
<BR>		 _     _ carry ;    _ ___ _ _
<BR>		 daddr  _ baddr  + _ (caddr - baddr )
<BR>		 d     _  CPL2n (d) 
<BR>		 A     _  ADDn (A , b)
<BR>		 _     _ (_  _ _’ ) _ (_  _  carry) _ (_’ _ carry) 
<BR>		 _     _  _ _’  ;    _ _ _ _ _ ; _’ _ _ 
<BR>		 LSB(a) = _
<BR>end for
<BR>if (_ _) then b _ CPL2n (b)
<BR>if (_ _) then  c _ CPL2n (c)
<BR>if (_ _) then A _  ADDn (A , b)</UL></P>
<P><UL></P>
<P>/* Shift */</UL></P>
<P><UL></P>
<P>/* 2’s complement*/</UL></P>
<P><UL></P>
<P>/* Addition*/</UL></P>
<P><UL></P>
<P>/* Final Correction*/</UL></P>
<P>  -->
</Body>
</HTML>
