%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: readycardis.dvi
%%CreationDate: Wed Sep 25 12:37:52 2002
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMBX12 CMR12 CMTI12 CMR10 CMBX10 CMSY10 CMTI10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe -P pdf -G0 readycardis
%DVIPSParameters: dpi=8000, compressed
%DVIPSSource:  TeX output 2002.09.25:1237
%%BeginProcSet: tex.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 56 /eight put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
/UniqueXX 5000828 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3ffd20326947b1065649b533eb5e9e3
a88a87fe987918a687950b26f647d6e08bf14d983ed1d4a8ca1e2da8d985f944
2eb916f5b6ed0697ac7c33e1e36a3bf460d34ce45f1631871097cb04f18e3889
4cf4ac1538eb19481311d24fe3be7beaa4a3730e8b4831fe59d6d9ce2e46116b
629c7ba2f9ce3ecba2f43bc162a5a077ca1b2882a42afdcec3f4b75b5d63e0bc
8e5dc95257766d8ea467ad9cbaf47be60f797580cced6884b3a68f70c91f4fdf
80fd00ed9139e7f480dc3a76af72ad9b434187730bdfaefe4cbfe5c7edcaaf24
9204fd703011932e5a3c27be468b7dab69daa18dbbb6335ab8ddfdc607961c7c
02582763fa069d43563ba17704029945cf42fcb19cf78c51df0ec4d851086d43
c1ab38e865ef36865fff3a08b01cbcb070ba4893f7482dc7819ad03d337e520e
7d8cd83bb8ac7aff4df36751f4f12aaaea2b6d7260c09a26e987c904003e0723
7dbcc4a8e4e85cd3259f40d3caf55c742cbb40ad0db1044c20a4f122a63f7b81
1d945bfa69662189ce4d089464d2ead9f6ed60b581b04114d5d45e97be27a576
35154e9b8464f2a0df18da855eb51b8f64d3054b0b2e84621f025a0776d16fed
b988a43d2d64c32768dd106b9f541ae8e68ac0bb7399e16f4d4ba074b2152d0a
4e9b5bfc21bfa0d531e28165e518ffc054dd4ed0d74eca079d20e79670419f92
e03bcbfeecf3554d661596f6f29e12170804d15a250d917ffe7a8b6e8fa53047
1ed97ba56481589a65ca13619129f1e26affe6c22f0c38540f8ce37efb6e9e9b
60b51a5a9cb4454fd7c7f92f2f9437159687ab590f35b946a54491a7739c9269
e0f1fb48b129811c82edb3171cbd5105fe65906974db8a7da92f4f43dc7f6b36
6981146d86d23613a0b38d9d6191db9fea0172e982cb1cc50e382f69da1b377c
1be9407f88a2a761b56f398467a057f35d18c01cc377e006182c891ec80272e2
2e3a5c7123cd27eccdc87392a9fdf63bb40f02b7649cfc53ef933c6518744cb8
9cbbd437830ef5b1d58b00b67bbcf4426dc1e6ef583b0b4ad3aebd741e3ff0f7
29ae271f032019b1e7268043fd215be590f9cf24da14a90f1683afcba8006cef
5d5632c2481fbc1bd8224e8952debb7c4596a237e5505ac143180956ca1f603e
ec70cdb4a33e1c4ca1744adb40f9743167002abeff7b379d91065e5fbe232b2b
9b67fc2ba118438a603a1610d891e6d1911c604853d1e26de7640cb94b16482b
2fd8e1a0375f6cb08e9a695d433472363f5d7fbad693ad55f1d27fc4d52c0b86
c1f2f7856526af7cc8f32cc1ec116bef862215d4d5bae2dc2b015d4111288b07
48b26c9618bc18ebafef36b9ad3884e5daded46cfd1d7f6c7d08d810e4f829a1
bc025167407f5261a860602f77fc56f2e13df7c88ebe4727a431ea008e318314
0ec441b5c2fd881b742f37011042ae093cf85ccfc6b55e29add553486ab98a29
88ac10127a136e7367eb771e649a93a1af27b3861d53d0b47e8dabf29bf1f170
347bae999a1bfcbd4946c3292fe80517cb1fa9d5d82b25e180cacfe61e62ac02
841001d75687da615e0c3d84fc2a522fdef2b8eca5da1110c662da882eee7872
db574e2bd8a55ade9234685a90fc871e917280bc89367df765b9408fadfba209
345a9a4d20da45c6379fc5f14bf0569c11a666b0f40fe37975d44ded69058310
14bb3eb7c8207f6cf0cecad615fa3fe039e8df53c851b16359059fa18f1be3bc
5ad6781ae7acec3da1b812fc3c5c2921d254790fda5a7d5ac22a8afe573ae4b4
0515c209a6b5f399273cece90ff987ee8c384a0e659b923e859a429f888c47ed
e19c5eacac889f4279ab1ad0ef06567a75f8a7200ff8bde9968fa1e6c9cd4a2f
287ce8f4e9c753a07d1c27a26a8f324eb2c4d9e9bdeee2301c13a30fae7ffef0
9136724c21deba5a50097376bc0dfaaf0ff3e935cf54bf22266fd906a33d4e98
98c98d3db70c51e5c38eb9a011446f22257eaba828144c6d81ea0cb6f16eff61
5f63eb8c144b174d28ada6d99cb01f2c257a66ad20942f4ea5a03eaf37405657
a7d4fa0366855f19cfb1d5a4ca9775af4bb1a8a85e0e3a2523076a5677dd4d2c
1704acd45bb655ea7a94126f2f0e21dc933ebff02ae39e352c7465b2055b5850
cb22be835d92834294fd69055f801b1767afba43af3d9830852e225dc808f9ad
4cd16e4e2948f34ad4ea7c78b3ff90cd3fd98aa4f0942493793365872cc2a059
dc89967dacbad4be86b4677fc356ff899a2b044bafb367a1a5c0f4f40a76cbfe
04e885bb79447e15831ce5f8147d8e48d808e7423ae0b2af1a6e5ef1772f56b8
7d4bc8388193049837fff612f10821dc3e59dd259d5082c4bd5d939888f5b862
22f0caccbc7ac9e87a24d49156993796a313f9bd2b0defc7bc464ec054970414
d140d0be16156a24500d27a74fdd40198c3550410dd1053864bb85cd98133b19
415660f329dc4254978c0a23d5aa86bd4e824eb559d5b64bf25c4f47f6a1d128
66e580809492548326a076bd8765cb19f19db372f276ba7edb54d6754b9231fc
744e1b5b193da835fa262ccddc4dbdfa97ac6c0ac55f85180372c981d5588639
47c923eb201e4cd86377ba22d472ae90ea295b806f1c60ac7c1d2df4e95233e8
3a23ebd2438d517d8e597ee6de14fad141215e860d229e06e7cef0878484e4db
1c1c9efdcc713436fe8ada8a57ae794370d3f1f2ba08637693893a729cc06b0c
c36a39fcc41bdcf4c90ef92dc904119478cead643296585151fc4913503a1856
72daca145f9b83538803a78f71a28d64ff893af488d38ec102bcbef31695bd6f
424838631a6ecc5c83a433476e3eeab7000073c8ab75b687ade4542aeb7a35b2
a7f135a7162b7958744288976e6dd5dc0a844cec7d4cae13f4119679f9faee55
16d75d16cbd9ce587c54c699e6fe141aa9571e0ddc63b63e8575394c7328cb68
7e596202c5019608248ffd60deb5cf453cf461f7eeff0dadd7e92f13b86779fd
469ca7cea1864dd66ebcf5f8814a2e904da0600430945147fdb09af8e94a3d09
5a5df7bdf3a78cf3d03f68517516c15c2a35b7e34ad271e4854d549947adbf8f
46901797ac72d5d72b0c4f6e08dceca6e7ab0e05449bd5f03040b95182d156b8
59c2a824e7eda5c2af6f8543cea09330f24dad7d1173a2b1568096ef9a430325
9c7c70271767172b79aad1bf76e6cbd5305ff609468d77f7312875b6f62dd44a
f3419c638761a23a48ec4435e0df9c5a01236689b2801ff0d48c086edf507d45
3310c2f673220d116c977a6c1dfcaa96c26ff28e9e18130940d88d654dcb3e57
709fa1e7dcc6e030e311efa51bf3f144f4c0f362e94d8ccaa867e7a8259a6e99
eb31616b95d69deae66bcd6880392e596761d50dd414b0e6ef78f17902a91f6f
d0c1fb31f6283b9cc530491ecac51dfc926f45de4312f3032f6b68725b1d48c9
0a9f9ccab64189a8b2adc05d0b89d735250f9bc3ad9277f6cd674dd09bdbfd2f
c342141667d1fea880ab9e9ca9191a0513116c473ece091ddde89d6aea1377eb
36f31a9a3f2303a39120c413fb51e6a32120c3360c13e19719cf8fd2e1437d5f
0be01f0be7f1ff54387edda09174c4308b1a9539464b38a1bdc9c300f3042cf3
4ca5d349e2d04ccdf310b91f7281ce8b28e3097f6cf5debc88d306cb9a46932a
5d37ec9b87a046ea78f3beb39f8d48638f8270fc0376c6db376d0f9cc7843434
b528d5b2cdbe38d513b5d80dfd4e45b71b77c0c11d9b884fad837cce93936693
e68ed71d85043e3ee54bcd02ced453d6e744d024dccf85bd25c9962a899ce7ef
dc2bbded1e31ff3c3d998b01b37b7fc10353026951f4b10f9edc3703b49c5e0f
ac2704e348ca192f896b08ea6a37841dc976f89d3aa2592e4ac01a7bbfbd69a0
af0896155de6f31ee45d074c52103bea4b0cae86eb771b1022a146ce91046386
9e3da9bf3c7bb545fc8138f3d4a38119cdbc9380e84452cd26fa3fad369420bc
84d54e2646dd1d45a133a3008da9cc19cd9f57e36f1008537ccd42189c9e9917
8644509c3b85fac4cb9e9e94b280da28334a98ac8ce9cbc5620bd36de6b1b614
d27886d5a24cac02cab0dad4a7b4e53e87a39f19d3b0626183eb2c2f1b07fa27
31fd9763efa5115f48f72c8d6e357349ff207feeabf88bb1ad36c73cd3f8777f
6f6d091dab98a7ac34a2b6443cd6ea87ecb17154217ba89c8fc696c2405e0ff4
be32adbff6ef549434d5480eafdf0763f0457de39f15a02053c153c578c0f339
d5282046e5de5b14a20cf279285788c6274073723e7e2dab232cdbf0d5af82f0
2e1b9bfdf47e43d6b72fb53e85667c9d67b8bd4d32c61510f9b2cff629e28fbe
0581917d22aff9a7065ec6293a6d5134e03042ce3793389f23eda6b971241ce4
83affee40a68f29ef5e530dbb352e3814d57ab640baa86805739449ebefde398
0adb145d257cda7f4db170a0f8cabbd446fd8e20feae2bf51211926d252cd1c1
2108d85666c891cf4ee153c1f21d300a3fd5992459e457bd7fb2d43c4776ce13
e66e8080997d8a04d80119c1a502923585026543eb948e67751a3306618f6981
8d0cfd613aa6f2e853258f4d2159fb05ac2b82ad1b1df1bd70578cca087b6af4
45f95589f92af73e44305500a2602158bebc1f976640690d2a917c8f890e5823
8e0ea76dc796d0e4e8d775f8ce8731a59d22308b615ed277775ac4bb2fd98a61
0dfc0ef0adb800fd4dca97883c142bbcba0a412205117f6096fa8529affae8c6
9bc6838dc28035a6e09f2f3ac29a15a2f75ec03fb8449b4aae37ede22f99ff83
18afbb260214d24fe5b179d16040d64527be645e614151a10f899b2c29e1c31e
31db2bdcfc114f1ad3bb59378a5525f83cb2fabdc7a259fc3c6f0d966aa1870b
e49b64fe8e1d6e39a8561e2d909c530d2fa90d9917a4d9c1ea6978f3758f7b5b
0759f2c6e08458ebe4aed9969a016da6ddeeb3364bc50e0555a457152ad9bfab
cd05d693dfdb56d2a08b133b0fbc3d07382042bdd8e9f1d6d96b518f76ccab0e
7171dc4c21eb560769111ffe9366606f7b53405dd939f5b2b2658dbb9a450c36
3d1efaa51683dc9205e1b5751b73911fe27cb4e2d6df7c50576592d1bad4ff6a
d5f23d1528c979fc255ddd8b00e2d1e10d9d711c6522dc730d7efdc3114d9224
38952080c08d2607bee2aea8ea98c7b2b2c68245ab6f86e440e816e38f9ebfa1
d2a45b36a2ea68d1cfaa9f43f9652a869ceeae108ec98ec0ed79589642ca0d7c
30a391d0447ffd1882f66fb25ef6aa479367f7b700e39d46cd383d4ac6cccdf3
94353bddbc8bf0a8a45dda39e5c580d7c4cd60276dab5f95d0580f7458433105
0130b6d668d12142ed8c1f38131fb93b5f87b1939fd30d71909101a96e4accf9
309f6e0bfa76f928ea34f83a98442f93e9e68266cc6922a0f023183259104a7b
197659cf56070447002247105215c9a835104fb6f7b54ee58e2bc9abe274c2fb
61927bca402616d1954493f4b45717e6985f3e11fb7db1841874021552c6cc24
42342d5210ae28f551a316ee5ef362715e5199fbd4446c234602baa9199b7b0c
a3ea481f51788fa5b08f84010548f5951b31ef0a064d545c806ca8597db21ed9
864a30b20f642af2c79c4f46e38e320c6e017e007551525ab8401abbd464a13a
1a1d113cf04f0e0aa177e0f2e0ffd142b33408e50058ac3724a5b194ef0a0834
a282c29ddefdbbabad7bba1cff9ba9a03055f63405f5210efce1b49eefaf14a6
1eba58d46b3d1394944a8d3df1f3161d5c8c15c0e9b79e7caffacda79938c91c
3097ea20298b5cadcb85900c55d8d0594630a1859941eed6910e92f9b0a33a02
f88d629adffef7284be34c6d56da35f2f42c8d601a430172060b918127687e7e
596fee16059617a792353a7a6550ad411a791e31a13b08a01c4e8f4b0992cf23
affbaa31182738d2bc7b2b542e8121d8ec0914ed6d35c840f16af819041b56b5
2ae54e86d64e9da8f10950f10067811331cc76e801674a680cd848c953c6b634
934ffdd23447890ec7c816fbf91770f2eefc21b74799303445701a04c3503209
f14c65c691cfe8c5ef78538690d8ef6414f91b1145773b8930fe73354ab3bf55
913c49139a2dba65e6c7f963f00532b97aca67bfba2aa085e552ad0667520110
043083fcebf4a96343d178470c1d09eaaf7a2054f43668926d2e2f4071962553
633590c597bed88a35abeb61cac4157c4958cfe36f2e5033601310e3a629bf3e
19287ed01d81e5890477a8c621dcde42c00f6a41a3e15204dd3ef6c222f6ac20
362d0f93d94b55740292f9af9356402e335cdc1f27e0a7bea6247d8b9d4e92ef
230b7433e456ff6d0ba45a9e4b3e76802324770453b957f90154d3f6a5d9499c
8e7625fdc6451c18b24479df40dc858ecca904e1de8ab5abd4579e3b8edfd6f5
7652d9762cd155b53775892b5834b3eb340c6b71ab8f5dd4f90b3f1a715728ab
e2b641bbcc07110d6d282945633a3398ad15791c6236dbc7d0036969f3fb8f52
5f2ad55236ca5cd19a6f1b351dd0c3b0e8a93b4c1fe742c6fa448e36bca6e699
44641f4f62f2bb9cb0a11f85ce88bcd86e7f21bfa51b925729966838042a3ced
5d91411d0a07eaa6ef7e7894c95f4b1e2a297232100cb5e7bdce83159728fd4e
c5d58f5b3ee733259bb4f62cb1b64b0a901a047a8b74abc068276a10f293a56b
85859b8cbe24f463de03720e806e17b368977e4b4c2ca2be63ba18bf4bdc72fe
ee7537a7876eb71d3c8a0e05a353c6046d42a1093f71f835a7514a95534f10a3
ea005119ae98670e8edad6d68460a91fa6ac2371c695bd04c23f166683ed95df
74afc3c9ae37be867b1182752cd6ee8674ef4938a4600a1d97937d5372bcf0fb
c9b2f0ec1d391eda12f31a2afbbed62b17ab5755856adc000a325905d3011248
7788a1e2da33608b228a772aff23dcb0f6efc4ef6a02d8735de7c2cf0c74bc4e
a9540538b543619ff917fa3e773e926da5ef47ac30a4563727bfec560d912424
10e3fa7a9649c7fcee5d0750b582cae9ef1abf80b996b3bbebf60781fa61da4b
13fc75e1611929dcdc9d704774587b6083e551233118f4b51afbc08fcb862769
3f46177d1851621ed6bd9dd32d492ecf46cfee49ea0b9f279b53b605d0761a70
9351ddd11484b7bb1783e37496fcf929a234528319f378ab79449c0fd455a076
7ea301e8452b20dc3829c5c1d3c19723a7fd9a8a1b641fc5ffd0594fab5fa088
e0cf159d8cb871db764fb1ec14255ce0663c98728bc86487f0c220dbed10250a
aa3893e4e56dc0b7f0c115148292b023cf6ce5a5cf1a7de20ebc70ec337d9040
0353e9e7bc374a6dd12c6c04d6666bd30c8f0134db0817ab2b87659c25984956
68f69448aa2f225e04164b7ad4c2e35979a4ce2d60ae70a16badb04fdfd43afa
bbda9ec9a4dad056daf9d538c12a7caea71eb1861fc6fa24fcdf15d3f7ea9333
eb69bf1cf804f69800beead5087f951b5416bfe45cba53b1f7cd15f3a4c1239d
ed0d0fe5da10a7afa3726c3baa72e92049d34c891f2fd066f361b80cefcd0403
3d35cb38779e0f19539c007659ba23a5ae554bf4c4326beca2176c78b3b99539
5160b7d9cfdf4b7b103228fb63f3b96273b6687cb2520bec599c30cf022b182e
07a4e1d599a3e8ed92bf0ff9069ed5c67aa28f910f27782bd155ab612ca31178
24593ddeca684bc5f387c4f81819b0e270ac9afd3894a212f153db5780abed3b
43c6f83cf3e319d25aed153d6495481ab89efe51e42f86dd560cd19312ca2c87
68de6b0bfff28b7ebff423d6694c964fd58d29b2cf3f32a7e2372cc7a05d6569
5b4ed5f049ffc96c8ae9fd23b03f7333ae22d0ad32bc9da9d9aaf3d8e72a5656
86e514d359176b3c26ce72faf9d522acce42a549db6df3387f1ad472e40883a8
6e58d03c7a789c1b9a26525894be60e5a4c0e70c865dc9e7af872beaf40d371f
ea6d556ce82bbaef18f1f1c760ccdc39fb761008a9a7a02a0b67b40f74a5eb5c
d4b2610963a0e0a66c1ba5c9da4af8d31044dcd334da6227fc1eb91e7e6abaf3
3d90d107004f06a9a893e973422259fd9f349cd39e9729fd0ec613f397a101e8
96aee8e2b20ea3cadf1d272399e53e1309cc5375fd32172b6769cdeb7984d2f8
f3f61046d67718afe297b4a2645dbe2ea4cdc45b35ea08d69ccc880b9e568455
1097de213a434b9c4ab05695868565431fd5cb447e2af2bc2e73636fc7b7ad64
338b2316e533c3c3b50a12b60db37d867c23379e61b7086d279ad86fccd8b919
fe3721be3a6b4421085821ca7043f8a9b2a517af49abcc662fb05fcc9682bc6d
5ca84e611068678ca53a8f033a1ae8efda6e89c1d14bcb864e095fc5e2c8a9fb
c70ed6f2102204bd52aae17738a9e730c375dedb17ba0f2c1e5b43ce6f25dd8d
a8010625cea9894dd927205b96426f251fdd026e68756036f4ab79c82892e9ff
01311e8e138e7bd400b1a51a696e0203b2673554c4e8a9258c7083695e17158d
24b8481e775a6de282c8cc26345b7f7a8ec482843c681a5467ef13e85fa93c67
ac65543a0e75803fe8c5bb909338f861ed8f9c6dbc17a5dceb6f31afccb3f32d
75f743a080af9abbbc626166b1d09d02e1e74108961b5ba67362806bbaf20b40
7e131c0eaeb5f757e23ecb14b39b4f0b3bd58f5d0ccaf620dceff429260bd820
00e9d5f3a681acefdc0c702239044d86d83c98ff7437e79e8fcf89a402a04a2e
c88ae94f2b5adb2fa2230d738f96ef6f673e367ebba73548615834b5fc832401
c3fd97e26b9358f2c0889e66b4f3f5ac31e9d974d3512d343a006198e433e985
dd13b5ddfbfadc4aba166ec8299c8654dc4d9f64b59b747c793b161d0e1d8108
9dac521775e9043fce84c2f4dde07503c0e1bad1e001f95141aeacab4dfd91b2
343391a57f34e0de5435e3a805cbdc5798b5bc513fabf246cb3106dfc89636e4
0c4c807ef08b54bc2a5dee13b14c44e744cc187da7703fe6942e971b9978391f
9eeab8efe26d212f47ac217081fc4771fe4c340831121bf97bf1ca4023b4f5ec
3202e5c3ebece6a28ebfe52ed38b1a2806c044b589252df0a3176b94f036f13b
24c580161eeadb0e08c4dbddc4fba36fd61275c16d7ac1805a4e09948261ec7e
358aca89e6cccb25ec76abaaa3923a452a55da1a59e3e8e853b0e3ab4fd79ead
baac47efc9c32bc1658f3169e0513e6ba266df9c066700526da3f0b0e0e7b2d4
20b9c7bddf9073c527448931c05f74e9a8fc7f7061607db10bb35c418d1dbaa3
fe14034aee6f8787c1ea86ae0545505b07bfb9baa1d4fa38d4d3316b390d46d4
a4a41ac36ef5adf40daa731ba8b3c71405132453a83759c56385f44e52285c19
bca3412eaa3d6e5ff2653cc35c0dcd5185dff4d0c41e86ff8a424a42917ef7e6
3028564e8cd8beb4b3183c13fb21f286a5b1116c53abe5df437768bfd1f8c9fc
0423ecd46ecc36553a8dcec11011574d326e3de212c913926f0f6910a394db3e
c1e2903c907afab5c2409bf8311c194dbcdd1b8d3a4da283f0f50c3ac3f6ed3f
8b6a0e5d56e25fda05d07fcdcf9311bb85a9ae9826d8aae858b409b22e673a5e
188233153706ccef2dfa5592b7404baa1f409121f60407d9c80b3f170d3d5310
7c2c8ea9eb16e2f9bc7b436e368d80826b4be41ba64ed329ce1365e7b10bed9e
8eceb247b32bb2b3f8d647306df2a4d0b8130b9c5f1025708e29e01feb2543b5
be7178132bcda402f3ddf0ee6449d5b9c0656fcd6f5e5efba357a75ec6aca611
c090dad58a5363098e5f7536c9050aca154de68ae465c79cd25497c6e63e8b65
8e6afc08a7b72a5df69d7b7a7e009f7ee691c7c0215d46732c6f03ae1f674b89
e1a3a4c4b124c9e81d1634d5b322e4b529fd15894b51e10189b5a1a758aa400e
5972e20443a284b45b8f73fc4ba2e829a93161bf3c683aeba2612907732119c8
2a2b6860c0f626c051ba88c899e8529f1c7e650fcc4e732d6aceec19a49c4a11
c033c8ebd14f612ae92260ab5ce6ab0552b2edde0d016491517b5a37881b243e
3ddb8321fd09cb0f85c4b32aab34190152145b115651833045dae208a0aab437
e885e26e94dd49543a3f8e9c837b119e86e28b2f3b83982e6499ff9df2e78345
071ceb6939cff31b195fc92cd0fba4505904e7c806eca0f51ea5df2f27314147
18e02586712ca276ee90493f7cc85c2e5c5f071c89a83e00af74ebbe83a4758c
ab1c50d8c0e27bebb8427f5484b98a5677b3d8d2dde990bd70d11c6ebbb12b08
732a122f6432104ec6f4428361035a502b6d33a4ad6a52c2883b1cef8f8e9559
7a31b143eb63b84880341b416d122a124ed24763442802468c4dbad8fc098d47
4c53d3c7a31c059c60add70daf2bbea44da74f91f220d6234286f197e7d7e2ac
2b5446839f8723c1774e3e8f95fbdf2d8b34bcdae5a20d61c808947e7199a39d
6b31a8d6b0a1d85459f87d20b7a7233ea74562b319f6d529986c661f2e5bf59e
032f53127e5106d3bd549724132bad56070decf4a66d5f7f918fddeba351c0ff
8b64b06c90cb9ad40aeccb1884b105b06df0a282b65c5cd7421fbf2aa8f268b8
d4c7b94c8f94dd7e8c797bce625261155c4abc26168663133b7e12410c3da465
3bc284bbd0636c97e7fbad34c84e647a73f119d412d8b1458734ef63ac423a4a
d7978338588bc5c13a2fdbc0f18e5545a988e894087497cb17a5746d3a7c49ec
124960060f1e35c531e47f73121b62aa1d6e321f66d7abbe8b3dde1da3c8ba82
b696da5ffbb458b0cdcfbd73d2d445991b86989bef723fcc1012fcdbddf689ab
e3f9cf45cc28cc9159488bd6b9643d4f17a74ef5eb7e351264e9d148546b9c87
03730d8a66accafb4724250b663811c0a4f7ba48729e2ac294e10ef7aacaf4e3
61b7ec1c813f23ab981cbd5e08b4a1028f5190f874500433bcd707c040b58e4b
08247fc38947686f7c1c65d8c06d3fba34637a2e6448c79e2babd4da43c6dffa
009e9267f61e83f4619291d94e957c3bbe45724d46e98dc86b5e8f5cff7f490b
d962f2f4fb52b817ac25c7a180d20e2ef3f6708e4100ee4e2c412b4b29fe8909
86f9cfa0b5bbc4e272e833759e2a7883d688c0d0f032f67ad58685f96752c542
dc2452250d227de9e243509234d52fad2024b1de08da5b50a0a8fbf356336f24
25d2ee38e7a930c35bfe561a784fc82bb5b64daa076648430a5c3cbd959b427d
2d8e63f56554e42c0508e8d5ae25e81433917557acb822ab56fdb000585ecece
5befbe87036cda751e30291089882cf291e78e8cdd0664cdbdb4af31191298c6
93131f271d3fa7efb0440946365200d8dea37b6bfa302bd2683bd72e4ec7f5a8
21fbb4ff2033f8872baf84694cf2c38424c9cae30bd521b601fd30039c13dd4d
d6f37ce35ba6c1c6c7380428981445797b59227322b4f50123fac3bc5d015428
38d358208bb3400fab1b51aa452fa1fc45b3f9d74777662b2d749acd4993b139
01d0e47ca0af112a5fa8c2454bf871a31b84e4b134f10e4ffd54925f0dc30609
d935aa20baf81be03e378dc5eaed8c0bd54f2613be64f1fc254f35758e6a9814
41cbade67c549e1fb0ad69dd329ff3bfbbbdd923a51fa6fd90aceeee8b484dc9
bb0c8a4fe4f06f69b989de3ae1f6714fbe293c4c383954814de3293cb2c70cc5
24383ca03e33106d293aab64bcd5b5201b3eeea526ad5e74a5ffdb773f15a0ae
6f5b105c4f6c325f15c941fe0e70dc0a4d241edf303c6a58b499729976153d7f
b918b98f502a00ed06da73abc50206527487c4c0f21d3461a88e5d027b2f5853
3eaa670e07a5123dc3e77ba7e58f1faa170bf484b603546487368a3d3a88d8ea
4d3438eda59110902fb1bed02224afb46114e717ead452443f546223a8cbf952
d788de69220442bbdf67d365cc5966b1f6c992affcb26ae4308f9defac1939c2
d4844df7b68048a531bf0e0504b2d2a7554eeb1a8fb077c526bb17ffbb785952
c68eb65d158dc4220837cf4da196e13095d7d525e31e63372077be2eaff207fa
bf95b310318dff25102d0fd84b05af4abf65e522803a4a955f2b097b8bb1e92f
76fed4257a0c9233780c1df0cfc8f39ef513faa5ce07a0a8cef2d945b40a8101
9c1eb714f232a07b573822887322934aa8e1deae9279c6d3c198bc40c9406c0b
5510b9a4a96332cbc60761977799fc4166770c55dfd9f75caf26225579ce070e
4c813bdadb32dd9d18f927bf7cbdad65fe0b509dd34a7bb5cd886d0195d30ef3
8a87830b5aba5db3769474711c618e25cd98b8286ba7f11c7c44d7af3134a748
2f5910eaa170ac513ceb893fe5f2c76da20e80a4210a0cdbfbc89f85253d4de2
bb95b065b070fb4a20bddeb99f08e2ac11327c5ccad00b689c16b664ea1bc653
79abe999bd0d6e6882c06450f0006bc898d8ef66a6982b4125397db46291bfc6
5d32fa6f0b4005336fc58fad722f9dcdd7894c85ad1a9bcafb2bc247b83730bf
cbbf19ad45c98cb906b7a21864b473b61073eb173f226e2f3331b8bc27926190
75871552f03981923e227fe20c9829c6ab192bc6f7391c5f7de8ad596c4b9cae
e32733946e3bc5ef12051740a3be8b832c93e327edf94f58b3122fc323c9e27b
92e009905a031b00eb3b2e9291c6d0d712cfabc52ff79174dfa29c71de2726e3
10de4237dbe55f969f92cef7ccb8104623878585edecdc557615cdd3a270a7d6
81e27fee52f8838b881c6972eea3d8e27ae52c9c28d702a2324da269acc92056
e7b2bee2220d48ffe407561e5e9ae0bb3780991d9e874640862d42f22307dd8a
66d2ec97b0a9c2ba0dbd29696d16148da6cb1feb9ada453b01d876b25a6fba24
87ef76f525eb25f7cad69aa0fdcf222fd7a28ee84786e56084f43f468734fdbb
d5f7e34116bfe91dd5c2c7eeb592d6826921d60d6f96e819b17f42bcb2b7df6f
c4496e659a8f9bff47258b87ad583df1832659641490c6db14bbced25066f37c
6d1c2900e765767f45589aacb7e6a7f11e6a29b030551d97501d800fb4efe786
de6c1452e600199bb24a55d03dff2d4cccbcd58a4ca5e9f287dd9b4bc611e2af
2e6b40c654d0d536a716fd05779d96b0f075cacf9d00a2b021be450bb9fac0a9
4bd59112d5d57c0499c5e44adad34c0bc773b450dd45711631587cfcd329657a
8cd496d18cb223103888bde38bc4d752191caff016f315175c98b927dcb01dab
4d28f5b507e121b4a69ae9f0c67f06c81f699ca5199ca13e7f03ef36bdce2766
1945e54a416954cd098d02d10407b7f5c14de3b268afb5c76ce428e78efdca3e
c8a0bcc947c9ee287b5ae000a61d35b5acf0725deeacb0caf3e4db4e034b7256
b3ab9c26d70ca68b20a7c93b384c0aede040abe65cde1d679bd68394bc4e0b8e
4c7153d833947f423e468627cff65461e29acb0b08518cb665
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueXX 5000820 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddd32f3a54a912a443fcd44f7c3a6fe3956b0
aa1e784aaec6fce08dae0c76da9d0a3eba57b98a6233d9e9f0c3f00fcc6b2c6a
9ba23af389e6dfff4efec3de05d6276c6be417703ce508377f25960ef4ed83b4
9b01b873f3a639ce00f356229b6477a081933fef3bb80e2b9dffa7f75567b1fa
4d739b772f8d674e567534c6c5bbf1cf615372be20b18472f7aa58be8c216dbd
df81cc0a86b6d8318ca68fe22c8af13b54d7576fe4ca5a7af9005ea5cc4edb79
c0ab668e4fec4b7f5a9eb5f0e4c088cd818ecc4feb4b40ec8bd2981bf2336074
b64c4301c39221774c4482ad2518015bc80e2e96dabb4bdf5fbde00562af1aa6
90336bfc814e8312dd70402bf02d57a3ffe05e732cdfddafc00d318f83a79439
5eb8460eed2f5f1e7a2726c02f81b69917baaf163033a49dc10f61f35c72d3c9
33039c21bc71a9b4b25bc7573429924340b16d1cdfe6a6b93450c50f15b6229f
be901e24b3d21bf434b7f60802dfa0bb3462a12bff97ca01cf591cba483a1699
da979b8e79d363c1849565820b5d62eb82d4e481b26944bdb6f0f02642252a86
35e29f2f3f5faa4444aa607bfd3bf4ac98653fed
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 71 /G put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 123 /endash put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
/UniqueXX 5000768 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3fca78881823c5537fe6c3dda8ee5b8
97e17cb027f5c73fdbb56b0a7c25fc3512b55fe8f3acfbffcc7f4a382d8299cc
8fd37d3cea49dabdca92847af0560b404ef71134b0f3d99934fc9d0b4e602011
b9cfb856c23f958f3c5a2fbe0ef8587d1f5774879c324e51fcb22888b74f2415
50d7401eb990d4f3a7af635198422283cac1b6cd446ddbcbd915db9bff88844e
784c6bf7389803d9450b0c21756a017306462c563d51ece66fcc9c831843ecae
1fefc1a232e2724f7baee428ae03aadb95c3035345c15e9922fe49e1f2cfc980
237316572dbc57064edac9b0db8913a5e2d45e97e19a91435ccf8adfc835b585
48e74b291446d689c7f2f8c4325e8356e974ae30c3e2977477baeaa33d141fb7
80f59351e84bfc88c87b3a4a1d25e168b9d134554f6a581378c7d2d6eca8ac09
045cc3a5e0ed86f147133f094029e3483bebc81cfde69942cf645ea20d0a2b64
5140ccc2f9cb4a3d969f4b0a79cd3329b440dfcff5285494406f3dd08d804c86
df191e57232f6f1f83df6430f214e03fa5412b1e13d83c60c52a698bc9a38159
19a64162af7b83a9468fae9507c6cb55ea80df8c696dfbc3296c663902d77e89
a181502627281181ac8624f65be9de5fb32f056cc7dd7cbc7366a91717b5892a
34ef6b441871c6993da3a81afc9bf70ff3842a21a29c0e49da1ccba37dd6b920
2702db510b8b1109acf4c27ee8d676bdbd16abe189f34a9b61532eb777457698
cee0561838eaab2d3939c5093afbb215bac433d1918c739b62566906bb2187f3
378521fb52e70c18886e1aa15f53a1f8a169528cf2ddd54c203613ff88e619f2
6c9c50c2c3b8b8c868a88afab1dc8472e7b6f3f992a161723a3c0904865a7c42
3281601eee91f35222c4a71f343739f102eb43145a47e4fac3bd666e4c114a90
5950618ecb1bdc29f90f6ebed1d8325fe6b52e14a8870e9b4bb088e585c71b91
493c12845a101937e3473ac5e9ae24f7c358f06d590d7618e1a1d5834d87621f
e3f5432b655eebd4ca61a7b00dde0aa740796ce88a43d1c6952f8d2ca63d30b6
dcbadbb0dadf13150a442714675dbe51ff838f2e47ebe8cd44f1eac6ae5b6ceb
0b07af03f5d3896ff935a198aa635e337e367e1e128d15e31afe3ffca8245e41
a3e17011340e49d52fa1e322b435b4f7f2f49ae01f6a319f68d3d786c24be810
1e1c975a8ba3d62b34cb9f5b9a42f36a24ad1453af977b0ecf5464960757498f
a1fb1d4f040738689d4892980bc83b2c317e95d5e2480661f7123694194f0f7e
49f3898c0f3bce817d7c8aa74fc1bf2980fe3060f6dbbfc9a59111ae61d7ea77
2327140c845e975d349160a42e805d4063b18cc583cad0734963ac154071052b
7491456c4becc645986c242a501b1bbdcf312d3b7f50c5e0d5bd7fbde52549f4
b921ed8d0ebd7e83f030816785e027954d1583e7d1a643c31f703204189ad50b
70deaf9d2e26e1de0c443f03b050b4d9d6dd7c7e3b9d59ed7cbe6fc4eff2e097
313f30ce2b5f916be4d0f84e47017b3de36ea6f4b8a8a6483a0ef69f141e7f17
cd5da2d0f7d15dd2581b13535a01d9e19d42a4785cd18af2a229274428761e38
3f9bf81e3e3770c49b7b13286e543c7431c2d35985fc7a17f9d48f301b04804b
b30f0c226c9be8f8b0c754655af0493a5b6a533cadb671f9e6222c43b1be5c8b
8d3b1b28ac7f81979ea5557170277a8e523ff094a7adf8454dea84930cfefacc
b2f7e5f45640eed784af774a8e36bb8b9caee7f9d59a451da3046edfe46824aa
6450338d8e9e76961441a0467e2f7ff12cf9d670f1f8c44ba027810a365af8c5
b8a0224f7383e2d3eac2f258c2110969a9b469a5f912ef734298a4a267d3ded4
f1eb82127edee823fef6b7fbac360e840a4837d00845d8588cf34710796328e5
a0ecb9a45fcb11923c03cc24d05b17a0834a40ce2379e118a9a3beaebdff20c5
af560cbd7067996ca5b7567ad728b40d6f29b33e9fe13e39ca908aefca918dbe
47def9dc2813bacd642187478f6118e0951d1ed389f6043c0d2e7ac38fb77af7
5df6845d0f6c8a136dfc88da4e3140c45b439cfac8e0cccdbc7d854c69b6cdb9
692f8e6ea82f68522019b3d6358a625b4c5bbe25c4b1757f7a3997d677087df0
6b5daf2a3c9f4ba54688894a2de1033c25175b1467298e4399783f6db3fbaf4f
3a96c0bc873edcac6b3848f9cd26b3410c9fc213a1475c733d5a175d9bd27469
e1d3e434d4c3c3fad7c250c547b8f3b29810dc8cf4607b73c5b962742805e918
592888345bca192f0d20f3ab5499e9075b5d88493b3a6b5f0bf8ba54de570cd8
0bb698324c37db43e91706c38984afe1ae8aca266b67bbb8bb259fe1fd5d4fde
973aef0bdaee718417d38751f06c8eef99d7717fbc9995d1871961035332a926
bb42ee2d74d2050367b325480525cef5aa02307a0b9ec5bff601f80985c57e16
534c7d7c02b72d19d094bced49dbbe1eb45003e734278eb1357a42df8317ece9
809eaaf2e139751f911f3c532b30f9c7ae820ed40b1e24a0e7ff7372c9c960a9
343da8d616a861fa7ad0f65866177ceb61a3647fc832ce2f6188353ebd10aae0
36ce95a8b3b7321610ce8636e39c0b06d7def40f924fa8019b8150f34ea6bda7
57887c644387e85f60f170ff811c696283d3c827756c7f4ef8ad0dbe29056181
77263b7a7771d7c17d5963c31dd56ed4252462870d8d484b0db48414a08060e7
7744e957fa6a12c89f1e6bcd925a1047d877529cf1bbb849baec31e12f162cdd
4631eb287db4d5b6659e1526ffb4fcab1f5f388fdd4c7be0c44a4b8cc2f84105
9f0521060d63f2f1cc1f605e31b015b19a39a01848216b6d928d28d4893f8914
b1b950d35f70c383c6ce1b40a327b33f4d8515ddc80fadfc37d943eec0ebef84
761a7c077e4cd848043461ed1fc4476689bf82ac03a9768aed187cd980d1ed71
d248f2e5dcf92108013cdd8abf34e5058b9b90460e41fc6a9201eed9f5d7a903
6fe43068224ec5c015acd660d5adc5e5233a9ad5865b24ddf72a2427efc9cd31
34be022bcc9e92802508c5e97cd62b6883c6c264c52efe3da09bfbd35eed2748
f711cd13eba31b27f9f4f4698f7be844591fa0101d9647bd6872353b4d2051b8
204218710d6f6daad2d9406dfc3fa6e27f86112508ff9ca47b6e184598307c0c
86d393d9f3ce3e68058552354e8e678a2a2c8bef2214b8e874fe104f86238477
2cbe30a3d4d608b4b604b3984f274c733501daed77c1e014f69b04652e034d0f
976a43175a985d14ab1673457f9e60497ebdec01c046753b2a8ee8af4c57047b
91137fb38f50bb3f8fac974eeb79a50603643e289c7cf61295d53bf4d4277982
a03181f58916998b244a54baf18dcefe083a7171bc767d67197882fa37528412
3f344a40393e3e12c77689da870453952dc1960331897e2d58f05b66c755b889
9a2604f92618b457b7d0281764cd3e86aba45fefb4848f64d35812c392d10cbe
9e20de0cec7dd04929e4e00cbc3925ac26b4f4630d5bde48f2f2d3d6eaf79cf1
3cefce0f57609b91aef26a84cca5dd2a7df18f9418988763a8f4bbeac8949c19
a2ba12410bcaeee6b54bc99960b3bc2cf581f4ab4b53adfc8a44fc5e72d35c66
c6bfa2b7965e087316339a444d1916aa48bb9caaab6061efb18ae47d86c28050
9c32d27915ca37782d9a24e29bbd4b8b8d5ea0190fb354841058bb31decaf777
b82264bcadf75b746f69c7271805817b15e12d5a5fb67fc8f3e3b64bc2a1f3f2
56041391f77fd562a574e4a1bb9cf2fbc5455ac4bf5e65d0a7695815b860bb9e
ea895e84c9bba1bf5300e9c5c44235a17bad6a036cd22ac9af9dafa73cea2309
2e6aa28da6bc5b515aa248e32a05d9f690f29df04038d7ccee9e688799028f6f
ac14b289eda65f6129058cf6fde9df5dbf703a0eb14d3dbdd34311bb641c2103
d4cd2ff5425435aa42ca4796f5e8f64bac4ebb3c5c9ca83731aea36f4e96dea9
5cd2bc8009aff338c6d7afb01f6c9f78f4d178cb6c16a167c814db57c7d5156f
b7a84b6f0d7a86ab11ed0bcbc8df8ac2ff7af91d166d03847c76fecfec1724db
ef7d38c8085cad29043d71f14523f40198e2c91226b14255f5f8a351cae8d92f
21632d1b23e58dd12066a63dc665c5df086a11adc8cf95d5936527a008d225aa
a664a5ce63913d8329e6ec661b03cbe7d7955f50e6176462c4b550c09634fbd2
6d9609f15419dd13f14e99b4ae0285a9642af3c772ed9ade920c90425098bdee
0d7d291f850142ccaedb4f534db4de71c15d28b26fd6ba3bb7a618c8dc553e39
a3b9fdadea516dd9fa82b8060e313146efe2bbc45144f3d51e9ef0f61af92e4f
4571ee56b970eb3113986e0e7f0555a09843a368a1f52e4f5af30518e4647a8a
0b68c8c8b25f6be4d84b4b1f3165d5daedf360b454a8bd46e396ab034a2cd39b
1470e392fd46b927860af7bb788460f9feae9d4d2add7d07299f708ca16036bf
0e7e3e3fe5c79f5ec2768f0eaae5020020c92ec41a8e8638928363428c5183ea
71cecf72e827528ba7cc7640b13b2c6914c1bec0607c790a1f1e1dd79a9d9375
b3dc9a5c537fafdea4cf799e334c3fbbcbb3b186a76d69e34ad850b647c4924f
737b5a75598fb16670217575884e3e53fb17b48eb3e085a12cd40177f1e88439
bda432e29a6a133b9e8b941af9bf14d2611ea0d4878130f508f2c1034f661942
92cee3eb8db5825f181d28c90b603d3b980b838e4e629fee8bf91ce0827942dc
16bc4e9838c83291e3f14dd6677a8ed26e8aea89686af60de339a1f45ad3b12a
7ddb2e5519d5c84ac24718ea764bc1b331d2dd8d289da533015ad40c0b2db777
75a4c120dc4cd3e1303663aaf41d765abe537f3489c120df62feda3d95d7a337
8b19965adba991569c9a7d92b2431c05e9d8819201dcd07639f1b5f8f6ab8ab0
c43eda7a308843041bc6cd7c2b5b7c7bf7f6ad8f117b0b59123e2105e7b900f7
102db131121b6fbc9827b95482a5b1f39bb901337f8590ca904caf2378c72a2f
0242b877024e28f0e6e45852d57e8b6ad5e186e749e5d3e5ab13fc0412582a26
116fca105527c2247d329bfba4512e7bb92ee6dc393b728d1f36f7cee38b8351
a59e5cf15150e1d0cf9c9ac7467cca38c342c849c6b577105ed7dc78edb11701
b35e98682e7af32c9dbfa1b3a0209d27b87da369b3bf069211a23c932fc5d4da
98ef9350e85316d67aaf9a92328d9165fd33c1f2a2d6848518242dde8bf43690
e707f6d6a99e6fa920f08bc2b9ab4d33902d85971282a287257b3832075d03d7
126300178329030a0853549601e2e0269fea9988ba2944b52154e913b47bbf3f
5e15343728a046697f437eb801a33b22d3b356e2908e4873922c2842b92dd555
4911482a7e38fba9639bd65ed10506285b10840ea5e90ed9929e97207588e0b0
0f61dc09ef84e994a24dd5dc3a33812a61ebd157a49661de27e434efffc1d765
3a0236dfa9e9d2a6ec1973844d78206365b3dd0c79510dfa1e04bbd6b6603422
a6b72a81975507e7efef89db54fd7bab0c18bca1b86cf58d6b160041fe87dd9b
48c72758855d63fe938494243e3eae3a6a9eb6f445dda914dedd507f152c5d82
ddc1053f9f358fd472e7aa3a3fe925b4cb77f222ac33dc66a78916e5a160a8a4
8ddc0f310eb2b26e39be84e60245f49824d2c45a3fa9d06c5247135461f7330f
d64ded3e04fc1a4496192183d800ff2423f2fc6e38c7c9b3f5a2f844ac6addac
f11da95ded7e7d6662301fcd6df3ff520e9372211ddeabd5e0e3543625bd665a
38151d30163f5de581c1e62f5f594154d5f3273cf68221a07f064a5f9ab0ddbc
733378edf98e6902b20dc099e2ee47dd579eb1510772d4ed6ca230cb0140f666
6943b5d0d34eff2bb2f2300323c6b3a899f29df87182730b881c0cde341d972c
e31079aa60161000c039f1ca88902b9f908461722a535d8e94d7a71a46955f30
ce487b2158e1dbec0d2ef4594aa15abd56dea08807401c3e5b6765ca22849854
690017e5b9aab2c92149ef11ccdf2ae1aa897388ebf1eb7a94f3f66504a9e2a9
856baafb4148369a6533bb51789666da26b3b15e7b4323be2bb14bb8b73fa999
1d63e7b8eed4c947e542c6d310c915a1d8e509e292172e0c41baf72c8910fc0c
7dcd69485cfcf5640453d207bdc89888367939e951334a720cf10c25743b481c
48a0af46e3c8d086700ee05e5bd14552b612fd0d70ce5afec0aacee015f64b61
16233c3a704ad5409041913eab52a9c58dbd45f877bb34f7fcf82a2022ab6282
db002fa56e9a11168c7cb778a7dfd61e4fa40e7616130f79a864b9986e744d32
2d4177961cf24fcc0015453186f56bc5d93ec6091e0d42a8708417004ebaae0b
da98a3c9056e9d07aa0a4c17797c8eaa1d22f62b54f0bc17d15472b6996cde51
723c37afb11f56cdd2c0712b082fdcadb6c417510abf47d2fa409a4b155e413c
e20e13a51982c2b054566f102c3ad25359f475b5fd1ce89b941d80d9bca930eb
7281039587ae2130bc12fd25291a656852e3da1a603de9e04ed599ac91b63a98
0dde428b75df73e765dd88765045f30de02e2293d980522b2e2dbdb17460b830
64621389ed0ffaeec895252a1049eae16e93b1bf193123e251a53958dc9009d3
3d0bf6fb0bf40643a9a5d1a778b51f52dd8dbe3aee4331ad5a6e2708c76d0f30
c767041f6d996275277f3284505bd322de400897a755086733baa22995093f39
3286393128e89bbedbc47ccbcd3dde6f063108a256cce063aa21d1b771e1058a
4a9e9b54d17cdebd918b6048793a27a150d6e4eb108bf1ed3ebf024c2db5e014
efe6a9142b5e5c9443215297f3ac1595b3432eff4132d694024906fbe36b57f3
fd3464c72cab184b44c8036746131344a0b2c66f53ce31493072bf78735f5246
96796bd45f65176d33d4f50fd1ce2c274780940085f62c596ca1302a156330c8
3f0eb2a95656d7eead351a0f6dce7169265c095c0576d81e4ae379bff9cb7e45
36f3c17a191ac8bdb8afb6fc748bd1a9e28426c0a015f7ed4e4b399d64e1e8a7
6d53b86e1df48cdbbaa8988c1edf013e6ca700ff07b367112b9727187e3ea98d
2bfeb2bb6d3aa513d676439be434fc9892dae026e6b1511b21252312bb8d027e
76e6c20946bd8fbee8317a4336d9d80c5f5e580fb8301b3086f65c16a63f7723
63585c3fee07b8ac04c16ef1b990904c9424452ddfdaa9d15c672e42d6a1baa6
7aa730b2c5a5a8631effb51a6df3663b9a6ab604303c05ce04c4658db5fe93c9
5e5163452d5695133b865055b93c0e5483c2ae9796f347745265fb02402bae9a
54147a62ce7c5f504de81b9df01a1750ea51fb97d3dff0a6615a8d3b296545f0
8f78273d3b75882206138ecd2a3b7c9113fc0632c3da68d24e47934c8392f7e5
5776d27b36078c8a421106e2179811002153d4625eb09e4ede90dbc484e5e798
211a6f49a48d6b6db5fe0ce87e1ee581d58f62f069543ee1515135e1d1452bbf
3aaef12d2849788b32b849ca26dcc585143c4355e7c8007827dcf4c73b8724c9
a736e2c9eed797c4a03874707ce8636217364832f14aede630d47e4be1015346
2c38808eb74a684328819f3b0f47ef7f0b94d68012cc1a7cb30aca29d4d3b1ff
f3cdc873e3a5cc73ae48afcc03dca612792e53d1aa7f9b31000851ae57297c01
25cc754f88f65dbb7faa703f169074832b5ece3d95fa4ba6010224777c771e4c
2da9230824cc575fdaa55c44e343f369fd3d847d88854c03afdb72dad1c01512
a5b0f97139b62b0191902a6180271f06ca8e61f3d854557cf3803d31f072acf8
89d9b3af36d3b182b9db3143826928f6a82d211516df24e8dd492a14fc1a7430
e8c8f85efe040be7a0e5a24953cf70fb0631cd1b7745748a7f2b585e590affa0
063811cab3786514d15ae742cb911683695a2e517f67e9b4823000c2f9feab9e
b97a6ff6b4e453a5517a7a2c3f2e173944d00808b5c67ab0bb17888e98ddfd40
a9c55a5561674d1e90b0e1ff386cb499c85aaf497d20c1d207142e7f5691dab0
e776998dc422a668da056db9efa3686aa510592ed887d9bc97f02c289981eb07
9abe60c605e49a85060e1736ef44277cb9f1bdc2382818c1318fc2824f7c96e1
45c2198b0957fe4a120eaf9fd7b7d42ba24f539c6bf2a1e947e5b26645fea121
36d0d66c761364e6a026c9aa635d793beabc8a2c498640cab70f8c86ddfa9009
c93cbec25ddac68c11d234d22091c31aa603a345b92210467a783a98102d7c13
3d50526d092ba203dc2b42f95dcd65c10f4c84de6eef3b27ec22c3012b8a6e0b
216348f381d54fc57169191035a384eab65250277e92d649d8857298037a350c
e1cefe785789e9ab069753cb3fa837434354072be7744e57a76c2207980e09fb
d08ceb0667eac6fd926d7f3b9b8fc0394dcaca53de57a2b9ed0e009ec37fb5ba
d986fd2230bcfea0dd4bc6e9d16857d68aef2d5227333a13058b4fb41ec3ac8e
15f8190a3a812450b42907d7d41bddc92104708b112d208d2ed4604c7fdc642c
0d56bc112aa3d4d3f101b25d3d74decdb3b1cded80be77bea1e19f64e81a304f
bf9e5f390d5e258f7531854d744a4e601ebcb5d29a176789c43001a415b9ebe5
73b67396ff1605e57a589f86c161ce3f0e3994ed77f0abc608f591bbbb0f2667
6184b605bfe796c96fda7f43dabd4bd5a242eab9a72e0bf8455bb24a73d6b1f9
b9e88a9d319a206d3ef02cf20499212e07f87f6af4768002bf2bd642764e2caa
81ed9383e9c011235e14f2145e0ad8608bb00194af55f5b043ce1c27223a0f8b
f48520188f86725a15826cba5535bef532e4ac74bf387f3151e0191e25c7c4ee
33a4e69fb768c5a5e207f4a6ce80064af18c8139dd5f71a34c92cad31f69d156
e9f1c18db399d9929f306d24b39491a11b8e06bd10402383076146321729e46e
4af03aae22491ed17b51f57535ab3661c562a7694c955d24dd03325bc4a91093
7b2b70911848960f0a9abdae40ebdc376c2dcf15623350b3f0ef96d1ded89e1f
60c1a0c9b62e253726c3ce41c986f44923701c788e1a11fb4c8d352cd9c472f6
f05495e36289cd23b5fbdf8582a8796e9b6c1a4d75e399cd745785f974c6986d
7ec7ba509c3a7ff29a9ea012d1d9dd8539a0e5c1b8999991b48b9c8e83952839
fd29d2bafc8434952756d00715eddd11a37c2f9e05ae5c81eaeddb3899d83d4a
dbba40cce0d73e336f5bd7e4897f0498ad19f198357460ae082d245691ad683a
f8c73680c36f5c5bebf4cd628344108041961de60932c8746ba301817e83bf62
f489b355f15e50ebaa5523f6684544849f30454b6fff3b67af0c8db288e66144
7f8ff591b166f50fb33129bc625da23815a43ad0810272c2ac593790cf798948
ba2b7454fd66169bafb17497f19ece5d9f0dc259d7f97500996d38426df76565
6269844fc8444a77798b6b3b4d4743250540028fd779350d89269de0767d0e25
3668ec5aa62ae3a06a9ca6b56045e5ccfa89357e3601d97f3d7d0535e851ddca
47e3ea98dd0da6513045db2f3f53379df4e23fddfc5f1a44198b9e0fd15e9ad3
d83176f9a783f476a2b5405a5a08f2c0af8782ad8bbd950a0458fada6496b759
3152126c337fe6632767ad23a7e56403b9cd06ad0efa589d2a719abbb34141f9
2dda92a0835d93ade78bb105f38bf0d0013dcf9e9354e65c70adf454bdbe30fc
8c34794395f523f8d0a9fda927ab11006981e65f9d5a7c4bd0061cdc157f1ecb
56b7bfcb5e64c5b33bc198737d4ebd2e626f7cfe1d0ba3c86cbeeeaeb2d9c329
7cf0131c4ea6cb9a1d49b23e5d505bee30c55eec2b883e6dc4624fd1da690686
a56d7ece465fbd8212e98babb8e1a68fbd96fb5e24400ae0b8a65402039bbdc9
c2db5826aafca28307eb75455d27e34ee31c4dd3938c19c5b1d8da19ff1c2f0a
dbea09d3eb89b24964d7d248fec3993e7655824992ec1bcee8ec5a1e3806a9b1
4df29812e33a00c868d1390fdee57eec88e3af24ce2a9976373a3bcbd4a2ee0b
3af17acaa56334e26da0236b77dfe67495fe97216eb732530639d078435a1234
cc951b39364a273056f8f22e2aa941a731db4e7470a2f2c298aa30fd582a02dc
1a5c72e75d55916ea8d8e2fc279e292bef8dff16f405f045a46c3f318ac943ca
b49892cb24842736e5601cd42c73acf28079f727d6ec014a59abe5cfdb131cdb
871c618fd6b68d0f204914edec72279e47eff4862ed67f8a5a02586a3bbe82a0
f6e192edae078c3d0ed859e0a8f2d83e1491d05eadfe9067083a03a9bfab84da
e4e8e958f1db485f433287148619f288138c374371aeffbbe2d46cc31abb1106
bd0cd0f917a127d711b65c5ffb711ff5f69264a6808c580faefb8b0247d8a052
15365ed160684dc4d99d476d001e9dace7ec2bf5039b8036e2607182c265c95a
4493212a721e8f892697d6fd784fda421e4c0cce2c34a5bdd99b27f6d637af03
be4c5ac0d5fd51596b588eaa20ed325d97ac704fe5c3400b5af57575cf8cea36
0e01d43a575eb00c9aad5383d7ff3951e7e9d937e7c7c0a448ef184dd51514b0
c5962f781494ed5d3f2810fb692335dc0b4cbe8f10bf2e3b0e902073d7e90804
5f0eb66083cbe641422dcaa13917adb7d0c0f9a241b82e5deb3c88176ecb5128
218ceccbd1ddd200a7f6d6d33e3ab9bd0172bfd0a0362bd5a853b6aa14331772
06ec19b9e8a253202daaa5d1ee3edf4f83842f5bdc1562c79b170b9133399e14
9461e9288e53758b07e503cac2f943b3279bc5eecf7c680c40ac508321b4d3d8
32748ad51790
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 65 /A put
dup 67 /C put
dup 73 /I put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueXX 5000769 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be79011d1f5bfae5c1f476ee6f05eb1d2caeb
269958b194521197b312fcced4867f3c8fbd030bd715d8ffda1dcd454b174e7a
1a97b59fe770e67702519d9d9b23d61ac08424d555242a8ca08c49aef300945d
99b999a79ce74804ae6bfde623f4463371442f6523a5f6ce19c839a708c02513
2e22c696c8ccade45680e5197189d0f98e7f0d5f955e353970b392cf530a68cc
56b0035ddfbf206c3074beeb0739dcbca272a6e629fb7aea2c5ba7bae50c7b4c
a595df78200c352997ec3ee564df229fbb5473f5e8ccb1cc0153e9a7e299a8ea
a29b69d1b622b1f0cffc58291248759607d91150cb0651120970dc9f743bebef
44f6ae92facec57658999c8bf01f60611560043962c0695e1bb87d090e0fdaab
659d6557208a660be9aeef8ae55f71b8bc76394d792967e41bd8023b6e7f8c3d
9987d5e54c53bf2bbb32855b946473b44833bd78873df8e4c7e668ffff25aabb
8da4148f744b9d0524d6cb8281247b3052cc5d66f3f1bcf8a56a3fb446ea587b
d8be30257652cee035628aeddfd8283b5ad21b8b1480ad24d898970ac8a1e33e
543ce4e3c48f9ee621c5ce3e8ae930f890011b630866c988606068d9e92396eb
f51bb3db204505fc3d09d4701ac703a14d92bbfe27bd7411b363a88e33a8e9a8
025ac31f21e73dc52b333b918d0b1270c54873a490222d041a66e0192612be6d
2c88958a8f70c10390146ee5091df020ab97675e8e6acf98b28b539cd0a20d24
a42f535ae44b8f5e9290b38fc6b02e1bbbdf1aca96558c2dd5afbec53f03ab51
fbce958ed4a65b17fbc03f9defd4aea4a15229f3c320876235f2d8b69bda5f48
03a2798790d35b394c63295997dd487bc603cdd10d18f3e3fcc7f17d2a6afc77
f1d7f6cf69d2a86b104b9d3b260e4a78716927a485ad8a650d610e68378f4514
3610b087981f0a0655090163dd2dd4d0030faf6a953896a9cb2cd033ec9ebd1f
df5696c929cda787826ae088e1a2a1e634a21e14233cf4552a9656c1e1ede479
eeddb5318c03bb62bdc9bda374fdbe94e23027ffc45d5cdc85524794148abc12
fa8b0b1a37de918bb82d3a0922fd55a53f295cecf62b289333986fdddeb9016f
00cf65ccf20b4132c9bf5bdd7766ba0c65803a64d4d2fa7d12f27e00be4ddc18
e87350a1de2b95537225e020151762f5b2d2313fdda99bff69bef3f53620b8d9
df775b8e5c7ffdf9a273fb4e4b919e2e806f24bda13bae0ff4b920a02a95e7f4
f9b3660683cddbefba35236480d6da406c725fb02fd1fd152ea63d0b7900b530
c052437960dd674ea937c336bf686b8608243cae4fb468318d787a9f1b789e4e
8535e462fadb4af76db5f8d6f2ec9e0a08a03df77af162c2ab24571771809829
4764e126b2ab8744475d411f346d4d388bee99377acf91116699a10cad7c5696
ded5ab3d76db2fb0dc44be52c81964512e6c28bdb1fcfe0934bef74b4c9ff340
917fb62b972be1fc688b525a1054154cbf46dfe99c712021e8bc244f67c37ea9
9f4c21c68591008e8361340a4f807bcb566a0f2eb6ca655273a3c84cee283a27
96d92d3bfc666843aad4be2b3f76ae69457c5b53794af7191c4a53693c175696
6c9e695ba0d9be54b20166d0402c86d11be38081c712b87dbe01b2e61ee4ca00
b6c4bbfacefeb9d15423e5444b403ba32c9a2eb8932a94343e3952b63aec6a47
ff5ae43fea92b2fdde243a4d5f2e0efc3327b8c83bfdf9ed71ba71ed2a2690e7
cd9ce5c2512bfc4c59d2e4998f409ade94bee9eab956b80955c61ed7b4668b46
1ea550c7c1c5e561176cd098c86891d438ae41c149e8f377db27d8be7f566927
be366019dc9302ed332f50e43c76c2c8d5dd4d826bdcdd0bb1f2c9a0ffb9a0d3
158479690a624714c000a113f565cae08ef34f72e55e1c88ab1387b84f62a66b
51dbdc9208cf1128ce8be1972d4087d1b4d5bfc589f80a7ad492ccb4f3ac2fe0
f2f82059834edfc48e076593087a07889d93cd75adcd884921772c510de60ce4
bd8243617c87bbab805e19fc36eb049ea084f40cbb850272839da82ebaef9eea
75328ddea18bba888e08e7af6b54212095c3cdc8881e916e7ef2c2847648dd6b
c10631ec657dcefdaebb6270a768040a836bae0ab3bb4eb65ec897340d5ad2b3
0226fd4d83248fa3eacf6f6f07c235235326a422a0c7f2f277230d5733273fc5
b4eb8a208a55c5ad51da1eeb806492a0db82d2ef3e1eb265c0efddefbbd8ae50
e3c3594ab5df4f65d81564d693845bf34df8e9497a16baedd2d761880ecb9666
d9a80ad1a2226c64ea62fff8aa17fb82b394f68cc7a7c0ddf99677d6b3f6cf32
40e8a35c72af47501e6ebc74c33fc08832e0f1c424533a9cfc26935169b6173d
57edeaf902187b3b924ad04219a7824dc6a67e960a633efba80ef9b3d4f42d86
64f9b66c6e4bc546a1842e4de85ee7ca28d28abd8872e2167f6976bdf9351b24
58c540176adf5247c741d705286d3597958a9f836ffa21d1f84fe037237cc89e
8927949b1cc7ff0baad53a313769ee30b3e3f866dcf7a589957bfc399ca359de
036fa1a1103a8553f299af9c9c68ab356d95903589f82b68643c8a01a1adc15a
af3bdce3dad81f815be29747f526b1c773937aea16dcf7fd0a69796588bb85da
d30ae505290566a0bb696fcdaa406f5c8c3e2ae5ab0e602ac628a3031892c118
bf13bf4487c05a70d65453d80f1897b2493c1254c5301a549c1f3aae7156f1aa
2b937b0e648573af1d53d1df9e09b41911031401726660439acfb8ab73426965
49b26ba55b1e19ebbc7f1c99e52a703d1a6cab41ad4f90ded9c9b60af0465bb9
8bed981d56ba2fe39a68b99eeda915337222060f4d019168430ebb68a35fc8eb
1d8a96d4d804b5985e62e019395340eaa8325026aab39bb8811599358c4a7c38
582e07a30635d407ee7af72ea8c1752a21a87eb527e637e28dc57befd4a7418d
54fe1d825a22b5356a47e7c10d76e1d7de827f4a07114cd8f81faa5f80267c4f
fe0ae89ee373ed37a417d8aae5e99f95c6f0bfcd752c0b0d5dc967e0b5d1f727
e458a1cac97d0eb7c9632ccac2530c2e073e9d19840a8f58f14cbc417dfe5f18
7017abe3742f376a925e6457df97df0e8ac3d0f4c7e6ed3ec6ecc7f38ee3d40d
35f72f8fa37727755237c4bc8c2c73eef488729bda5243e1946643c173cdcc4e
e7454a93f95f3be75f81c0ded3ac20a29ef3e9b9ee00077111a27c796c1669b1
4cf2cbb02abe587e04609fedf3dfcea737e694abb15314117f836114dc358ff9
d2b7288bda0e4f6b6f124cff648f3de68d6bf18dbb529eaeae7b31f9b2ef862b
5c116b2d2f5397b174be026c814bbbffbf620cab80bc35847fc445be841c805e
d6c4a0284561d1e7ad43dc10d705fd85712e6e742397a162eaf72f0deabe4602
bead0b898eb8b1de42efd06e582b5301911a487b068c8e9eb843a500a1e01cd1
9e99fccee93c2694f596226b097c754631085a5af6e63059d9452fae83b2ce16
e840cd8575d0844090b6384d878954714ca6412cdd10914adb52d1fbcca5e123
bb3b7519161f24252fa22bf727b3dabca16ca6ee8747f824175496c75de20fb0
adb6d3d20282cd5f795f68ff96fc4f9aa4812396dd8e688afc45e7cc067e6a54
ceb959f4fb0f5e6aaad276c84e052fe3537a45083d2e51d562de93600a55532f
930833fdc4831a6f0c7323807a60e22c1b72d7eb04963c99dfdabf4f24714473
aee0b7c81f76a7b7b2a2515912c9359e603b2d4dc2555a375fc484b4384f3664
c87312daf4d8ae5c07c3924b9e6e66e7b04b3dedab2037c27c50a325cab57039
2db2d3d19cd0ae9e1bb49ae8dbcdd5280f8ef79eb8c0af724bb609dce86734cd
8b0dcd9c51dd8b7d8515dd2930a95c4b70d47b509e604222ca01454351d5412f
96310c67019f0c6fcf54597547fe785c9c47a23b233fa1b937aa0d5383b83eaa
64f890d17745043b3b9a200badc173b75dffada4f63f498553614347641cb2f3
fc90fa82d9eab5321f31f3866ff2a126978d22738f5af2230a89ce3ed61b05cb
31947af1f414275d69c6d4105afcf495f0d54e7d948b40783d413557dec1f205
91a2fc612c985958a30baef383b85bbe4b5e24a866429477d4c960e6fe1f7bd6
f5f5ee96f922ddb680e00ffc948ddcf00dc7e847a5e3bbc2d8bcaa4b4ef4b531
58ef09335f6b5d8a1bfbd2c9dbf4fa15d40238c89942769e748620df8003a97d
0f79d795856e0d2ffff45106ad59549dc9991c270bc5b276f43ce24fff093546
a211ee34156cfb809b6d722db18cc9108dd5411c97e91c0a4ab359db8b868c44
a0f65e6796c5f7bccc624f1464b15e74e3e222d59c2237231bf10358d5a5eaf8
420eab63ba6079bf98e094630146512e044a64362f7608e937fde1da52164093
c2b35c4dedeee16c620d51ca847124efdf163dc10a9cfaa2a92ce20d62889d2e
f2ab2fd3157f621925bc7c283752fbe649af616b88c3cd640d26bf9a764e3cf3
3b106807606359c134994a3e30695c7e4bf220e5afba0a15b7056fc4961975bd
c4a0fbe8014d46e97c6c4f5d702ab8fbfc70d5ec64bac71675c59b9ddc51eb73
7104a7a629c3313f2fd60072c2fbee6403de92fffcf7924357a3934e25a8f44a
3192e14c20736d5364ed6073dae374cca1e065cf1b8b1e17029c228724020335
52f75a519b59d1ec8225dd9d4b829518f8b4c818c313b61a2732c00148997247
1274f47f7c4b976e157d35b0e99e9f6354e761002f96144cd4c37fc0e0092dcd
28b1f66af2f433a13410806f8998a547e3cb07119ea055d36cd644f23d0020d0
049fac5fa15d6c991811723ac2560ee2b0dc9dd3dfc5a15218a8e2f0d82ece13
e4663cb7a43fc6b150fbde349875a52dff49f65ba9a4bf3075bc524af36bb16e
acfa2b9d8d706aeae65d7da16334dc771bc5d091a4d2bb26ad92455606b11fbf
9e83327708f0a02958b6ad4de11edafb4cb942f938235663b9892e34f2177b5f
b9ec6ede2a00705e6d0ff2a3d5fbf1e5b944c6c89dfbb9f1d8548f52c17ee8ba
3eb686f868fa404e312c5496470007e85ff49ce4a42c013c5c0a7cf6ead319c2
05cd64ea0ff4e3b1bc2e83a77c88ad4e4dce8ffa348a750d33abb2cfbbc98dc5
5a52b23f1b307e692dda14f1ce4159da149f697f180d675bbb5860446a93fd9c
baf795334ee1a83ebab5f827da0ee3980c29fe3d64d735bd648dfc32568c6479
66d5f4386adcfde3fd4e35e27a929213a5ba635889330431cb3158ec4bde5687
2427c775d6f8ead40456713564f85f7be02b9c6902d9efc1b0e263ddd8e1055f
c5711efe3558f6e4bca20e5e14eb5e8f237b0b7b9b0058272740c23d3067ad24
ae388399dc1478d90807238e2ad799e70f0dc38330663b30fb846250bdce839c
24c3c8e81b6bd8a77ba8ad2e2bbc48498ab5a83166e4c6221aa333159b2175e9
1c8f98ee2e0c4be8bf1e71f8318f9360add25dc446dfec18afa2a91f4aa7f9bf
26023333c5830f845902b5d7a654aca094326e77afe3a7c1cf2a5133670382c1
2fd996cb5eb5fea4f464ad9152f84b9cfef611c657234b1464e285959d8aba8a
0eb54d56399d5bb6744f80b6408cd3c96b3c8e569d5fb5d3b7efb2cabd7331ae
68e0f851580e4db93e43dc5edd4d04ccfec09af1067302086fc0369635d0bc38
b71d7c4a89c195b6f30227200f993ca7081ae4956d5416735209787a8125d6ca
6e1a84561f9726b22188816c755954d04a27263d1617972d15cbd41ca6b9dedb
6c28cdf94c18786d237ae4457c4e1bb2ceaae00ada845cdd8abbe63b0be54a9a
07eefd44bb6bcfce54f07a0c8920bade2e9d06eb1e2177f21c4d310070758784
f480b302c35a6876046c1960050e904ba7c87775dfe279e5876f81c0523fab7f
48c107bc80e99f11ba14e4996e56527cb1e7d84f25bb0e4d789c9331fe2a427c
5ef57fd27f321d8bf63d8ef6103c8ccaebd8766ccd57a6990d0d4257bfbe6036
78360fdbd15fbea62bd97b66ae17e69e6d094aec550d4a66ab2f26e10a799872
181194522550286584e6f85d95bfcd8898c677cf68d98cafd44bd23d865a4050
9782be027876aa5060add54e01e5307d0c50fb160f989c9e9171e49173232e34
52fbc28cc347e907d41afd9e28ddc67340b0dec86a049c51b15e2f600bbde810
6c6154e72ac2845c62f81d83b376239c675d1e28d28aedeef120a77c8dd4c72b
73bcb9e18a1a2646db1367ce56f324141627a5af6a2ecb3443d0199ce0a1a635
e7bb90015c4ec1810c362c5552ce3283ede292b51601e524e4b7068e8b0c7d4d
3eb09446ec4e856ec167321a92a75c9cb0f37c032959025bd3be3d0ce957c98e
2603bc93914e460f12e9fd71c55a4a410137e326b16a1978b8b86996539f75fd
6ac7437f7d7bfcf798b3d5705928162598c24eec441268ecb8851149f8daa385
a8ae059567b39f8ba2c134a096f309eba5b9b6e2e829cc1870de2fc264ec14e2
5a57647af2a51785423b82eb1614a7d49ead8e8b986d9886be8bf8a000f77afc
57d6cb78971b9a4a123d1509566cae47a0f8db80439e48ebc4204a65ca971d55
587dd858d02216c6c73a7f2966f9f86d5b8d36d8c82800c76117dcb613db3fb1
85045a14c4ec0071e9a172a9e44544484b312ee75a8cd3a776505e8af747c701
5cfba438d26a2b1dc4f54d454f57026a001bec135a87540436eaf99e40a99c22
3866dd2dc73bb15b0dfa8688ae301aafcef6e9128eebb4a9910f8c7985a8dd45
a2e8bbeb84d67eeacf2672bd6e1358fa97c6a764f87a890da52337fbcf78cdb1
37adff0c6d3da0dff280cb1de90e643b5ca95fd6e10d84f3660bed9113dbf646
5615a12ae04f4fe77608a4cbbd49504f5d7c7f5e034b21a7addeeed22169feee
daba14ae3fbd824670a38ab9594e72cbd09addadcfe4b866e9bdb4d07a893e51
f3f2737589f17d16cc21cc968c27be8d4a3f50edfd6ce04bd70825d0a64560b1
3cd2dddfde70a765a6a0b385fc946edd9773371330966db26c10c22ce363c7f3
4ec35ad0b606c593c7203ba423c3a1b3aeefc7838853d61f307a565343e4920e
6aaf8360b802b3062103df14031964ec252c25f12c739037b6b9eb40a2509155
9af951252a1f0fed19db171727a387bbd715910b84253223ead90ada88c26d7b
5ad695997868da652ca6b5277ba86531401cda58ea2b0743d029479a055919d5
4244330b70da4168c7280251b17b84e0dc454c4ed3050338613a43374890d290
ab8a173565087b8600b076c1a8b6170f8f93b2a3fc2b1963920fac9388251155
f18b4a31b44446d116a4a2e53ea34fdcd2916e6197baa09ce56dff4e034216c4
e42a6b6d57ab396991dc510f4530635c3b2c302b5d65a0b7341d0ec744d21a96
8c0609e6541ce17efa1f8fdf54f679aa624dfdcc3f2e4cc4ae7cf9db066366bb
2350468b5c1aa9ca77106cfda1aa9f1a7cdc52105975f6d2e0674413e3beade2
9f2510713dcf994a54bf6228e3e32897961335c807dc73cbc483da7c3c279c5e
b7fc7d59a83aab6913c6318dfc2cfcc96b3c90cd76329fe2b5ae3dfd3ad0c7dc
e06287c0a1385bebd6406136ef6fe73b9a0352ca1d6c36006839460b63c81607
ebbcb3225564750b752d46c967c69f591fbfbff457ce1a54e61bf3c233306323
9022895736b18e7ad10f04efb847b242774a66f110a090a2d8f4d3f37f0c0e14
6ef333001fafb92329e08a188918a96447372f3419ab4d160bf0239a542fffd3
829aa895b4bfa1d0c535dc33710a82277c08e768b1aa94d30ed9333849350d21
6fd1d006bf731fee29cf9dc33916354b2eaf4c353aad99d5fdaefe057f41993a
5d8cbb78070338929dfb3e67ffdafb2050dca8500ef1bee0e323000f4e224725
5eba24c144261c92c608fee8367de89b91bffaee4c5af915a5d862fb78a8488b
fe7bc96941c0a4ffae8805fd96ca943cef7e1063c80cb6597ecf5c66597b0b08
bc1472a3bfbdfc46236974c06fe2fd2dbd4bf1678cfcf0789d2a1f0c004edcf6
2eec6b6e868297e2f43d960a79518eb00eae32d5939c95862ede1a19a72b5f7b
b1d532b1fa3d89b1468898ef735dfe239d093a6fb15ca5345cd3ee20cdc7dade
6c16e8b604381f72896676d21b50bd073c4cfedadbb75941bbde48410374bac6
2f6acc23386f3560ea4ba84d2a66b293cfda9a6d5c46b383c3d08ad51ae13d73
400e1581586f95032b09a0032fb5e134ac9b3bc5d4d862f2f17feaa6d2bb640b
2dd7d08ab946ad7130dc5c19667c6b033816d6d4f241eed10202cbc43bb32d79
228a2754e88a43e72dfc36a5a6492ce307faf5e723ae9f27807f867623677496
7365636e17d937d3f12639e569b328066914dd8d09f4022d6f7bc81c972816c6
ed42ee1e4eefb03879410b1341d954d6560eaefefa9e85766db477175a76dcab
a3eaad
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 34 /quotedblright put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 124 /emdash put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueXX 5000793 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3fca78881823c5537fe6c3dda8ee5b8
97e17cb027f5c73fdbb56b0a7c25fc3512b55fe8f3acfbffcc7f4a382d8299cc
8fd37d3cea49dabdca92847af0560b404ef71134b0f3d99934fc9d0b4e602011
b9cfb856c23f958f3c5a2fbe0ef8587d1f5774879c324e51fcb22888b74f2415
50d7401eb990d4f3a7af635198422283cac1b6cd446ddbcbd915db9bff88844e
784c6bf7389803d9450b0c21756a017306457c7e62c1d269f306bd3402e266de
fc3b5e7d8a8d2f5bf0fe6ddd40d07391df4fad4a6018dce29a2b8f692b29f202
3a7c0e66de8ed85c14f1f8492167357f51a7e84cc5d92e0fee4d81cf7fbc8de5
2d2e7bb57142033993f9c08c315abade8dbc4a732e84e142d3bee51557910e12
cd8aa37c459a5e6b7f5269f59078aba3be4641a11ac48d0b625c8325b38ec08e
4c9e5e7fed976a5650d99d82114f449b9ca14c4ec957702295a39a93ef93f618
99b8ea06b092c3c1e503e6e436e0a9fa22576c8930ab3dc8c20f5d82b69cddf8
ff4dacfa9c54bed5a3aa3ea5b129fe96be632843b9b6bc91b615581a985db56b
1e01ca60ee69ca92cf5c0882ece62edad3e106d835348822400f0b66af658f2a
e56ed08f8b0010571807009b73ab12a8cf14ca6c71f03c2a48c500f9d62266af
154a6375ff600d9bac3f05ce34142d6867a79581c533176bb2f3117336671e2e
44638a97167e2ea9644e31ea16c2ad2990ea33c54001e0c8156e6de8ab6a4d40
a7137ba275f39589fea2e2db8256adc103d6f9cc038037a47e8fd469c5f98a5e
3c15bd4ace40d340018b1cff7d1ed8abb0ac57b5b5a2c20a51957b96c453edb7
dae5affd91a46d938fe0a13363001d844ded4323f1ee6d30012aea19b024a552
315505535c85dc26bad31e09c50e6512802976d298c4e90d0044c362e6bf3ab3
62a454ee93de25ce54411090c29e9d75c80ce26a84404bd9de3aee0e3f921ac5
87f907572b8354a5c3165eea7e8b2ba4e333802132f760b41a900c698eb3d273
8bea0aaf7aae96a558f08b61aec7c7d65b2889bb7b99800cffee5ba19ac90fce
11437be1ddfcf0bca5670b543b9644a71c8726d0c1005abdb96f6e0cf7caaa31
95017ca81519151c2c0b04f81e717c0691b63a76e9b25329ce2625b711cb7bf9
9d23ec2bb5ec8aefb8c1a3b422ad617b3da4d49685fd44cc21a1fe5e1541163a
b3e1594601d63c7e98801d7746474377ce93f81404f3570afbd5dbfe77578605
917ab96963987e6efc2d3f99fa56ecae6422579852567f90cc90e4ef6d6f71d1
858270205477e221018a375ca83c572b3f972c5181d18643cecb04909d84cf76
7174b3c0c8ec69bf1e9fdfbc0fc7ed97ec67d878ea4ddac8caa522fdc6932df7
21b81af837a200e1d96e90a7ad7589fa917658d7a173a511db53af1848892270
44c4603be1a5ac1893c15a21fe5979a09aed3473a98e06c98356dc01ed3f5e14
1c3c057c3f97e2f9e8718b12bea7715a3432abe07df50291d1a395e7ba2f06ba
7cf20988904310104fa43c7a1f6d32f5fd290d4d572cdb5ab4b433bb849dd1a3
58b292cbd5c762262751c26d8756c7a3c4e6bef14ad9a628fa2ef5c0010ee4a8
d530f3786bd4e0af07d5587e90e19687d1a31921f975bff26ec2cf07f3efd4fc
54fd4f92f08a60ce2b3beb2dc8d81a303c8103283e6e5341eaf61191f0122624
2a4a88caca606438a767277972e2ad7ddc9a36f43d5b2d010b30cac07a383c1f
9c18c89749e610d026f48268eb3f80bad4cbedb7eac3c18c0d50b5b75ec2eaa2
87e2b192f97a901713e955d597e39819d72f34be949c010addbdcc14d763552c
d0bb091ee7bb377545c97b70cc479e60760d1f2c57b47b59755cc59198b4f92b
4c55aba7cb9a51888f5e4a8a7c5c9ed2ee3a22b29a3980ac64dbedaf17f322b8
fe35405f3441b03ac099c601bfec9ad4a835c46dfb3b658f72ba255563c0fdf7
628aac9c69d73b3a03d9959b4260c2d075d1f3ca63518e8e49badf8b4b01c633
77b4b1b1592350e696989754e6db50ebcc6e61d8136a9aa1fad7c8016d0fbdf9
ab6ae254ef28c6b10060dfb3bd48c2581297472f273aa5b4737c55940f91ee19
016c0815b86d843a7220e81408b258e19f149a5625b018dc58ae74addff1756d
405c72eea14e978a85716d7b192d35e8934d9a9f7cc9fce378b64b7c81374fa1
b00df1ee14c0a0b77991b66193e717ffd45c2f90feda68dd63f97b51de22314b
0db6a6412b6ad406ed1b9698900804454c039eac13f414068bdad1ca0d978f3f
58e9373e7df81245fe977a107e36cc4b89a70746115d73f8c017c4071eb3597f
feac653391ca81623285524ddc9f9ad22d3ae1e482f6884a7b35e6766dedd84f
c36d9e7f96bedd3f9205e5b41e1567e662d47d39d1be0588b5079b6de95c6756
dd7da647298b59d4b9d2a831fab919eb3f40cba02cf43fa530f8e6af12475105
c9d8b8fea60d32784e0987a41b6d82c8851e8d4d5ca000b79eaf10ebd546de27
fd6dae5e8bbb9b08b0ce3c32c37d7c65cf6baf2427473b1293ca5f7e05c35cca
caaff9fd1f12f5f195fbf60b505174a3bf50d6cddf4b83a199073edf81efadf1
28a08c3fe20d945f2c9329c6b06d7a6f30ad0245f48067143680a22d36b1b31f
a5ad2a92da3a18f187f3e5ea4b1a18d1c55a596ced406de854cc992a7dfc1ab6
76e66ea2de98be920f560bffa97d48336b35d317ee751e2789cb0ce5b361bd1d
1e86d8a4f68aea6bfa56735aa292e1666c8319e59eead4fba3683cf8241f9275
93b6a5695e86afe1ee11a5900b4c4dcfa46dbcd7303fcc115d0e9d500311b09b
340035f5e096bda1d5e5128453de66b98ed3425f7d1e33de3bd24bb56d6adf25
5100d24e9efe4fd8f161b4d8416356dbb2dd40c36d131e51e13e3a1d7a7939a3
077d1a9c830c74b7af945b575f674b6ffe48b65dbf539727fcaecd1b36a26a8c
27d18f57275f6838e92a844a6645e51f3a780f540d9494576adfed0d2d99b258
7e91f80366fa75eeb7069c2c125ac38991e2ba8919343d2796b7229ab4a32cc8
c1ed5db15cd26876a7d326a2c16b140915570d3e80e1bf2104f5a658ca4d0403
f185f83a1bcc4ce9b895e666f30134fa26ff2f357a8d85409cec19db6698b3d4
b82b48a7a4080c45766eee7df8afa9a74e2ca3114d0771789211f9b711877fba
15eb106effc6a5fbeaa7abd1cdbcafee37fd21a1a5ebce4289c830551aca58d8
77cbce8a4602e09018e7e768966b37ee19ad94d26f8a2f9381a7d21cf103de75
3f426f37441af28a6b92d3240c13663d39c91068d42de3806ddf167c4ac953d8
a43c27180e16f20c3e07b26cad762fc5f8698a6c985181b86e03947ce7be8e77
6e07b8614bc6562bf95c9eaf8253d9ba735a19a45623f10c4eb63719c07ad7bf
3e9bc16496d2a64f346aa1b7b6eb64bd16eecab8c5b94aa85adf1828cded77a5
296529ea8fb929589bc8e2775e59c872dbb16933100332572a889d348c8780e5
1b7ccd7bc3a010b3b66bb8a5df5e80aac0edf6f23ce15f557b9d0a4f26253019
0948468807ecd81ef8e923d37d721273407b05f9aa9d70b0bcfd61c80661b1dd
45eb1879f8b5afbbb5fe71bdc2abf2fe3287ac439e75aee3ce2511a7f3c77896
49da65fb170fd873f9b9bb28a2ebd40baf79eee35f650027c8aed7a65f92ac45
a337912cda90421907d3b80c5db3e534b6d4300ebaae9e1c7537131137ab577e
ddffddba3aa020ec4dab10ef444430d795f338cc5ca65590dfa8480d210ca170
fac35e3bff4b9a937df9d7698fc4ef3f8d8e6f6cacfd264d29ad64494c26ccc0
231b15170e4d4dccddac9ba73bd4c6c64be28da04c30b540885c4fd1536d5fc2
1d15006f973dd75638b8c1eee3ed9c0a240d1671097ba12cd10b504f2c8b31fd
30137671c438cc892c4bf43ddffbab1cac15b03e8576709ce4fb7547597a0651
372701cf2baefd8fe21f0bffcb1eb2dce7256411bf82fd03f26c97d2ab6f857e
765808d0e24f615c3a8bacfbd9c5ad27147634e25fef6cfaf206d98f1445fcce
126ec0c836ff5f3d00366de15527045f55529af3553ddb4f86ef1d60994f544e
192e57536e91cf5ad6147532be57b98d74c9d470407a103e820b47de1af0b42b
b08723dbb1c6e273b13b93c9bcc93a2cf06de8e657d49e0a4f0dee3c318ae059
ae513052c31070249acd768c6802f09bdfa69ad610d1e3bc1590504706aadc3c
db53556ee7c796d38d744d661defa79305c0081ffc7c85c44cccaa9cfea1e4af
b59a374849e74518ea861559605dd41e2cf7dbf3198601ce1a9bed647914cabc
391a6b0ce106f35f2f9ffd5f307e3fa45c8d416ae28056c3586929c657be81ac
88f9abc7de5b77240a44753cedf75f336cb121a7c5a17faf66430292f8f9e4e9
31e8c7f5e6374477d40fb58916b0a0b123f0159df040da4efc839c283970b562
ec9160af94afeff7f8f5f4bbd5f8e207fe6cfe22d81bde594f73f2bc1376ac73
acab2600b3dfe73d5dd25a736f4bec38c93b482cf86b2803828b39afcab633b5
057fc10683bbb59b24487a800acf450eeb5ae5edb90271dff7770e7a04d140e8
693c66f53830b030c7c5aabdf1b14d7c52ab511f6937e8d874799380bcb1da89
f1bde7059d9ee5fa479d13d33ffc391fc27fa3c68627147a1b7b8322846f9b3e
e68cd9a7af660fc4a066329fb5076a7b37257abab50ce6d643a59f6a89e987f6
50a7826fe083835fe1089e1c39e83518a25dfa5dac1f73e1208bcfc7481d9284
0909fa5a9bda32651f0bd73ea43e0f7ac135a574c42bc76499ff3fca7b687913
968d4ee7de11afca9de0cd00b8deacb565f00ee88e277957458be180ccfd3aaf
4e22e6963913a7bdb0495b349c526d4fbbc3e3cb05d59d925c4ee07165009638
26c9caa56eb3fe29c1eee99cfc58cb694ef73bd5d3e45ae93141401020260cfa
00b64d8517bab427f23d060195562430735531a37bd24d8cf2a09e4f2dc1dcc4
7c4d4658844abcd3e9c204557c92b0b3183d00034df5ff4470cc42d56e38b6c6
ea644830a9c9bb4dcd2580ea93a121ff1a4717167e10f55eeeff0d66db7851db
eef2e28ef28eaa6dfa9caf75faafc3546011d2459221649ba0fc1e8a060a312b
b9faf6e14ee262cfc7c5bdeab5e3aabd51aed065d5ec96b207c583ae731b3717
9cb0ba162750bdbf731fffe36f411691e0b80000e6382743a49b227b0d34fb9a
6059e1383a78b945509277d08c402c3c3174254cd317a4771a80c8d69e3d6e9d
95e95a034fa596886dc42fb71d626be11a4831c25950c1208d9fb2a747c748c4
4d7dd472ff2381ae24d0a558673cfaf49019bed7d26e01f790b03789400e0694
5722137fefc22d66525b82f51e50b7860daaccb240756d9095f240fef8ac95f9
0a1070d43eac31b40ec7bc5101f605c59d2d3b9ee004df0513f668230257536f
d06e652a1006c3756d113024a47e08ba786989b76afee2975fc9cfedbac2feea
da0b8fde1c3f610e20ad992dec45281a9ef672032b81c207419ee473c6f87b3b
c5f87e5c1a19ca03eb8de2642ebb1edc45f77a18adddc834e2dbf73fd623b0ef
5faca2f18e2e4d8cb1f7c407a8403a05fe46387d6e00107d95a61bb8b68d1235
020e09b17c789c797825a649dd47607c8b7c72522d64c9a32488f021a062ef97
a4febce4adaeef8a021b76023669473ca5217fa11a0e9ce80ea26b297c335d69
fdf37cc5a41f93dccd0f36c3a6f88a00349ab2fb8f900b0cc4eef2cfee98c878
9ccde17e725e77b11fe3f01ad8a179e569b637d08629e3e264c16b2bc9211ea8
54653e90d28c80e4b874cf06fabd53e50a01abe402cefb1d083361d57e280c4a
44c9253f1b58f4e8b250e838eab5c08b2363c9afb9c3ae73fbb3c65207c6ae10
b1bfb2bdd793297e6da59a3b9bb845033d27aa0b545dbe2467c8d0f670dbf259
42074ae3585d3cbc073aef1f523a1bfd755610666bfd236f183d4f7c2ccd5361
1fbd8416591f962f4c20f377f8b0ac1f1e80b09d838d81c4d9e06d236037e950
d0d30e58bcec346d2eebf4bab43f07fd9a9e1e11a96a22808c6c6df48144b2ba
3682e19426b02d929ddbc1b9b930c851c266707f3c710e17968ffa7eb7cf4267
8714ed51395f6bc959de829953de3d247e5f5166fe10917c7d4985edf5e1cd00
24e9d207fab40aecc380a7cdf387f45365edc072645cbc324d7ee2ab1acceaed
3f00d1ccfa26f82a8883c4fcd422185e3099ca62acdb3233835cf97586211923
94c1873fc0e6e12c09e8d04899c9d167154e6aa97e69be1b91038afcd820f44f
b96bfc02867be6ce27f6f21f55553f3ee539c53651e75dfb200cf9e0dd076f46
89e8633ae6b1ad4eff719bc4965a74518acb7ac22ed7cbec9b946d4f3b788a60
dc6cd9a59c0813c60a56b3b72abc0196a0c3c2867889ef82c5d337c16c0caf1e
c98a0ef2b41b1dd8ebc84fbf205a4cdcadf8713cb2eb96d3bc92ba5041d7e53e
c8ea5898650eec43a819d9af49944a5b70db1f0e1eb686b166057c89a1d31839
4d48e1796c425460a60c5e55a2ec663773db64978e24d0bc9e9141e816cdb139
2e7a7ce36f9a946b51e52f999b208682d0348144b67771b5176f28faa440c27b
ec2c641634ca035d4a85ef1d09b2271f283569e46da0d3c5441d48ec7dcaadbc
599e99ddc9ba5091164e39ac8cdcebd3c20259913cd6056e54cbf00175a1dec4
870f30e47ff393658215d3f5bd3b84e0672d0ac49af82983ff5cb59ad495ef8f
79f74671857e36835b121206479051ec0868e878682b24be512e23977a436a54
a900abb57d6336f70c685d632808a02903a3ab0ee7100bba1e12e09c52843a59
c9ca7a2b754275d19a511277c8be8e979db2b6785e4bd52ac9df46a6466d1cad
acecf68788330c65561c0e333280dbee932777de0560f5deebed715cc8c1df5a
473c0439a6ae91a7e19865e6554269b844d0dae9b91cc0efe31a532e5a79d5a8
8c32613b199b8f5dc4fa7f406f2a4d627c9c61470ef4bb0a04167dd4eb63617d
6f9b4a89efd8de13dca4d9458d23322f9fcc9af33e8fc21a59d846142fd05220
0342ca636cd4afff13e0faf9435f418a42a5ded15286076f572d2db7f7ce2dc8
95a75fdb8b2a3c5f9e65f16d739823892271b51a19196d19395563291bb20cb1
acbd96343cf67d2adb8022a485dbd6837da10288752fb968d0b349df92e8f282
2a4032bc6ef4b3132f8f5448fa3abd894e6732b0911fe59cc08050cef68bd0e6
72208798993f8dcabaa7c12c0ae81b9bcfdee74bff8549cac7878f0d7e727c72
87a2b47d71a0ad505bd89ed45f75716e80e2627748686b6dd943640787175a54
634e1623e04149df0738306f1268e1cfd229c90a05d14ef9ce64720cfcd49f25
a3ec048dc0ee8ae3124cde73be2db4057a1bd3a563ab426a8173cd26664e500f
0c26986f5133e9ef0742621f7e1d1f6ab427189026736749271cbd038d176b64
4cc3c48875e2a89e8b4f248f830f21460d39a5af05e50a117d3fc982996523c6
be04c91821e0a8d154891ac0beaf506beabcb8548e8555c4ce3d5f6ec8a5f643
7890d1656dd000faa261d477683700a10b109eee43acf7c60d14f62ab6803bab
2ebe8a00eb79d1b6bec5849257751d46dbc5e181390cd4683a26d20783aa18f9
d867093bd1a21ceb0ebb3b1452ad8cf4f1320cafa1555c644080a413ea237789
0e0f6354b49a16b1ded1a51acc2c1ce933f6ccfe090c18c7fada1b5d1509ac0c
7553a806d51f77ab5e2daedd53ac9586333fde38917dcb60056d244421af3e34
8a698b703446f168d1d0d5a82b32c11a3b6a60e1e16b8b356d4e7be1ceb0e6f3
bb8f6c3b667e8c96613f6b0b5a7e749d40f81fb75896181f14daf062cdb66918
ecc712b2c1a1c1340cfafe8c56080488451454f7093a10d1bd3d55fd7b4b5638
02ef5f6a2a6c740efd0a9322d25c662df86300caa73d4e63995b81077209385f
23f6b80b1e2176c04afb0547a575ec5be766164077dc8f325de0c751bbebb45e
0eff36534a646aca7d7c54775b0a2b162b0d3a4e1aa6ccebdb3ec5eaed771b78
ccedddc7ad105d96028700934caae5f45bfa1a607effa77c0c9123472b8f15b9
aa0fded62055f918373326c00c40a3953821b299861e1bc1e8b54450000a15df
3bc672b3cc48966780c862dbf3fc97fd530bd7b61550e67daff7d97cd3fb18cf
ad911ee8dff52818faee2a7bc7c081d20031d0dd67357756c49f9d6d21eae9c5
7ddb5281a3c59abc140fce9796f152458050a337499629f88093aaa08d8a9839
34d8a7e2bfe55aac9db793c0525a278a059f396372c945cea402a103e93d76c0
1d55e23d9c2aa97e3bc488e75d6090e58f22fe3325fd24e817bdb42d7d476ef7
192edee253b38a35c263c7a98b95613b65cae6293c6345e133633be144e506b7
d679f2f9860f761df6cef26d3d6f3b80554bea74a88f4735f047065048e6fc8d
f9757666ae6b6a63f5fba12ef7832091af5a1a295eb2cb783381770a3b1c054f
c4e8e7080d40d007cdcb89fca9d7ecf39568f601afd81680f95a0411f4b92b02
f3f343499e7abb411961afba00ce06193c75558a52f4fa42a655836b571cab19
bfd6198c8c05bbef917d67c475e4e22ad007bbc7f4872d452a12dacb521d0c30
c776c9634c40a5af0fbea1eb595d3f4f80ea978558b2e7c200c37e9caa729ac0
e56018883126266af42198a39bd7d8c6da87339ccc9de166793a2cc31094fa21
9a9b3e7414b18a2edd73a3fa4cde5a4c0c3278583579fd413a164d3851854a89
e04b7d8a93bfe349747e099af692c3c8dce4622c40e8c0c93ed1409ce0cc49dc
2433f89d764cd144ba44e1f9e9a4adb5017a80803e44435c8e3af14dddf459e8
240016f487f7d41608a79f323e6cce164808fc496211090e1b766bcd8c3c247e
a4a685c614ee09de7fdb1c666903256e3e1dbf4502c67ff9bc90b82154c9c4e5
6139c8e2a43d8c02bbbdd50b8d80ee3026946eed5ad18939d5c199d4a7c773b6
10003256aec62ea55d98f83d858b99008cbe0c7f31f12f31ed9f6045f5738ce9
4a0b55ff588114852d0c4ed99fe64285fd3404bd701f65a7c2af3b9d4452ec8d
7de800a351c8cc850790767c60bf6c36c83b8ab81eb2930cb7bd3b52731a6c18
5287cc9f134e9685362330de3625b3ced97f985bd2642d6386d99cd6ad8c2a56
9459185030fa12e4dc54a7c9ea6b8f49aa66880c26cf3f0ea674d0838f9d7e77
779d72e7f4f88748bd3eb4fcb53c06cf30476f0612eee1a46e7fb8e4afa4c667
b3b93e101696562fde263ce9a7a8aeea23123d2698d641753b7682828ca8efd0
98920426c6e846080a99e2c1514eb0e967f2fabea9a5eb7fbc36d3c3c770db8b
ce413b757645550063fa2d091811629ae9884827880274d0210dfe4efc7f87ec
025b2d0e21d65b4223587b6c6c8b3a761cfc66237060cb54c660efacaf65c737
543644f2a4293166805f048144f983fc554ab2eac4a30592d6aea1c2861f1998
71c427b620ad4808a5b64b3e26c7107b8a22b98e26d322a653e5b7d11325163a
af6e68d96cb3e271dc36fcb969fc1a8f58d527bf8cfffb379cac85d775425a55
a19aabe99363e476e24233b6860d93f4c3513e3971a71a3df10861854c375d24
bd2ead945fe63cd1018c0f8a67dec16c29062f5d0d9f166e7e7dbf4ea65a1b50
8e1b6da61822a5c68867eb220634c6c09ddd69a7f94962efb24db4a6e1473a0c
2e5572613e7954d251f256cb118953d2c98ee27ff0874b03e5cb7040469b2bdc
dae6dabad2840c422fe40494dfb8a7d7cc93834c0567fcb6a37c845a9b21bbfd
2386562f59eb35f86576ab3263c9c6bfd1fd1817175f6b984d2235d2256d40e2
c33cf39805e0387a012beebf10e97b309a2690a734dceea351fbeda166df7355
c425819e2b37cd5459f3643aa1cda0f78c7f6efc60bcb6fb1c91e683e988fb62
5c3800e9fbd0ada409aa8eb8f46cc6cef38479c46e444e56c3fa732c39f06333
e6e3ccde28f63b1735eddc2dea6012b07819b71df94e087d1c669b797089a523
19cc1688dc69b8ac4f8e42dbbf73d494711bb3d77da757646160126f3bfc47a3
6e7316565e50bc02aff142e6dd74c73a34277ce89b82fabbdba8fb4c36d04f22
8a823174c8a234980fa8f2672c7059a1016195b297e08a31abb1014514a0ec70
9a5f822aa0eaf18ceb3c1fe0b58d96eaa414ce3b801c00c93e1d2615f3420772
e9d4b99ef264a84c4e2cd61e81ab6d7a345013d0ae9975098cb50267646226c5
77c36fdcf530d0dc8c372dd0b8ec02a730e1ae6ef9c9764740193fbf7e708f66
e338492754a6f5f11228b9e99c748d629c2c8779897045ae2b905da6b445d428
623642c50307db2ab173155c0c882aa6f09ea77052623551b29ad74705fa379d
eb90b1afec59db604d9c3fcab634f1b1cff6f30b43e039d74e6d09de9824b29b
59ed51ec9c39023fd225355659f8575e0575e55ef00a6c4f9fd425b3086545a1
3cace197cd9bb951d6c76eb536d839d2136f4574773ac58032408589efba4db7
63169fac5d9ba7b8c2117a807658e7ec254666e9cbd61ce8acefdc7b930629f5
27912e7f390cdff9faba5864fa728a27d96a595e1096b124609188f473128e55
0d19ec8f5e3d38311d43e2486d7a42c7a37149c82f2934ec3bc713e1522633d1
0705123fa0f749d342e81b8e2a3acc81b7f3f3d993c9494354628a30821c07b0
9536f99acc7cfc805f49c38507ba6c31dd185774f325f66b9f163847c2246e9e
827f5d4092f3abfa38ea919c907adb76be7f8a9367bfc67622676262cd6d9743
216a3630fc94930c160e939367f52ec9e7a31fb51a5439d9d5ae556a8269dfb2
45c973250f9706dd4427689b3807a15a008b822deaa98d03403c942fce7793f1
23212638b53f9433171544b29ec8787da81590836b2c1498c3d749f1e493ac17
511547d0307210c7252f55d9bc3bdf0f1f97865828612147a676c4dfae231010
8e53f377816ec9c7712a4fc1cafdb21e6a1a1f2793059958b6e60ea60178786c
093839113a8fd851cc9ebf0f8ee0ac6a030b00c61ff11700a473fa4a0c791feb
b992e4cb9099237bd913d763f9ca70b2e4c7b6479b30a5a6084bbe35d2fe10dc
fe1a2a0ee97854bc8e622cc44ac455d2c5431a877bcc28183395e5c1d0dba177
e69805b52ac982f169a2aad6ea12cc3251ce53e8c9a04f2ad08120a0ad8e3c08
9215c27bcfd2752d9e1f622906153ca4240c383c1d32984b73fd51091a8c9c3b
596e9c3f9101d50c7b4cb6aeb11f52f373a96d4364b923089aa7d09015fd5dfb
ecc67c12de5c29b500147d38dbca40efb6b6627988c31730f88c20016b2152be
09d036476bd5409d3fa11a29a29bab6a48e7743f7a28146799e102ce7991256e
d37e441b8f6d0234f259cd0dd7485b04d67662646f9534961866eede3f1f83d6
3241fe29a4bd2a67d1fc7ea80b3e95f32169e08cd82b629ba4df936c201c0ec4
1518e62cefd057196f6de80b16c5ac3807b9abda0e1f5c1e10489d8247ed3454
7d19626c5802d365497a33fbc5cfb7f6fb9e5510f8a9e781ed5adfb125ce6a43
cda210ee9d6f24d3429b2fb0e6cdfc0e6008b2c9e45fd6d182b8ba6ae9c394f4
c84adfcff5f1aca6e62199b04095384888d89f8cf013bd6c6ea371890bf9f22b
bd2530cb9c133d36a3258311667efbb2b86bef9cc8be7a09cf2997be4a9b6cbb
69dbf1c58a70844723e698742f26330da4d5c578d77f7f051828bd0c06da228f
7b1643529c5f18d7adbaf79ce7823d60d2466154940293a67a05f16f5e8738c5
c2bf84aa0c4207f2ae3e70f424fa8cc3294c81f19e89907bc718a59d0ce19184
07b3a63f6ec7c1a259085982b884b7c7dd41cdb150c849eead817b8827906c84
f8a3be2e55ae18b90a786bdaf8cb04f311178495e820a88013f5c3a480d93f0d
99d71bf8d3037d714d7fa5ec8ab5df2dc837e84028956d6f5f7d7bb4213106a8
792c59c3fbb8b4aae8d4daf550617774e7ec32213228fbdee8fe34cacc4057aa
267034f5739cc0eb009fc94365701e1c6679590c498d9f45f2070864a88e0ab1
5a26db151a51ecffc2a50849734b2636202c236ae58066266bc878ee5f11a8a6
6b606d2a9849f09da05b4cdf7421a2c733946c6e30083f8555d3aef733f2fea7
c9b5730b809ee1dec7c0e577cf9bdbb5606188117e0db548e215ef349dd2adff
fd68bf8716d268151154e5f71bc2af1ef62986d8d5cd609be93cf770d82fb2e4
86213d20a2f75ae500e408f9ad0bb2a8d30850aca5fbec6b880380467ccaa85a
b2ce7f33f3706f7fed3533f4947d505a56a9f7e52cc8808dcf4aaca49f061f7c
f55bf3c5e66b2e388d566935d6c85ecfdd682a9f580e3c61b939c8945dfe200c
d403ca2a3f760429a0b1221add5211cda59bccabd0eb7bb6ffab13bd83b9b466
dcff1793835e051966acc9f6f9956b61135dfd376adb2c39a46d7b18037f7f7b
2ecfcca2243ddc7dd39e735b5b1a2928189c48c1fe2ab561ca8f3de23c6d6588
e0b05e3b24f3fed96be85101cc1f34086354a0331a2b184c67f2832130508ce0
edbc961df74b1bf4fe957861300413418696b2eb419bfa761e3b28be1f6d345e
86d8c3da6d06d3fa0a172b70898e2e731f516093b63d357606340aa2917504b1
ffab2155b151fb2f94ebe7b4d0d2bbc04efdff863a2861025762746c8a5df243
8a93a0b2d6b583e8fa2324628a1ba03b22afd79ec30e50ebe1f0dc5f55644a58
40745ff3ebf1a8c38ba7a2a0266bcc8825c5369416155a55970ddbebfdef758a
5c87eb62119aae0f0f30d56eccea4bcfb62c682c96edd0758b517d322671ffaf
0e37976a1c3204447ff4d0d10605486d14d6f7bcfed0d20f3156fa36498cdfe0
d18fb38330556451f9d5c3ad1d9f90ddd79774849ce9a752c328c3a1da7f0836
67c56a0a8ad035dd22b026dea286d46c782d65b99c8c6829fc7acf415fe93b62
8a5316f63910904dcb3200a756c0466b95c1f2ee35399432f292dbb27c9bcddd
57387c75b28ecd755916c6c6a6ca6293307d8de9af8de1b936af44f9205aed3a
55783a1b22d39274242ccc7ce1cbe8c18bc19e39b221321eef1bb7177ce3b193
3c327286f7be197293f0a342719cb5a0ff6f3fab9e1ed3712e8e6c619a09c2bc
1dd464d37e3e1d6b06e2a769a7517603b955d5d10107429c9d6a68d1a6699b07
21247900e863016fb7f3dc6b28e132a41a8be0b6fd2654d99a583e87ccc40fcc
2a22521fbddc3899c580c63c9d420fe5cbc77d5164ee1938a5e76961aa88e496
44159c28348532b20b856c123fae267bf334c4e59fd32eda586b06f1d0958037
2a7015d2cdfbab7e1816376af8a8edd5ed9464dfdf678eeddeb84c288ad0427f
69feedf371d171017c4aa0e2afc0bc7460781c77ed032bffac10b5f9a2d958fc
e5f18254fb41ab741439cf59c061ecd202ad50152bc6a61de22229cce8e3d62b
b71ba8f249b3075d81ed6287bfae07cbc98c64b01a6309985e8d5f620e416f17
82032a7843c59df0bb7ecd73e52c7297ec687b0cfa1795792b89aacb87e759ff
d96fa8b7cd64bbe878d299c31bad73f89205b02a0ff066a6348fcd52d818eeb8
4f5df2dd6390f43efb488ea1d2aee29a6244cdce51234bce7c1e00c13fcfd3cb
08f5d94250222c26c2ce9b7e3424bf521d0193642a3546e8c46cab8d879b1eac
3caead843044f863d8faf2fab355a9043613e1a0563bf55d7ebcdb26bca5e0a7
ef4eba1fd27581002710f5bf983ffa106b0992911307ddaacdbd2a1889a362d9
2bf25086ed7bfe8c84999c692a2abaa1bc414c9792678ca82f0fd72da8798211
f0304bdcdd3fc0c7d7e9d1e7e03279337479c000250a7e03d164c4201f2da13d
d04e318df8254550889f409bc577eff79e20006c17fe93cd8bd06a73dec5fed7
c84b0cf93a46a3083c6afad4717e3488b5055d58e8fce8620a56b3c73ece3e9b
e8f33db7ecc84bf0ca8b55b222cb3484748bf40d3b4505e7d6d23909f0070ca8
b560f7be5505c2e2735241d5b662620de4006e61a0e1603bb5cc6e1ed33d1990
ce3ea86e1c5e466f35489a5d80b74bbf5a30414af6e398b8529a6cd484f64bcc
bc201af519cba275cbac020b2de635443dcc314f864a97aa02c762b3be7113b3
9f05ade7a4a04100a9fec87753165773540b3728a847132e6d9b01b2f8a302cb
36a07833a1da4ad438fb73b1584d89254f1f98d804468b098c0bb4d637dd22f3
45e6fb49360c65d4221f294a087f67f3bfb8708f7ccda1df3748ab717c26e204
850538733eeac11eafd7df401e1289ed62a08813594f284da300036a45bef91a
0591f4d78ed7237303484575cbf33a6ce33d1430f28e2530d3bf872aaa98ec46
a5df971d9a7d530dbd9aa6e5cf32feb33695100cd21cc34d2552e320cda3579f
f5839665a4f60c892f523a8cae8604b6a89f4a3bff9583637ee681272fc98c09
572c0234294c08c98df5b4d2d9deba0fe48e178f8ef649f5a8dfc30bd5daffe3
368853156c0385355fb55dccebb78a4cf704b653ffaa142c7a690947eb1cc933
a534e9f808ecc30ab8fca9bd6a53ba1d463f8e0483524664b99e8f978bcb252b
18f9fdb035a49eeef01633b63c2f51e85e61216a7a99d115cb268bb69827a32c
bd92c1ce0337e63093570a4aef589ffeae1511ec2026a9fc82d29e1891eb0289
4d04257820ffc8301e3826c8205dd11bbcb43ff1db356575457c7b38431df196
8b958609c8ec92a41c276a8b5718ed96902b084c1c4b240298e427fa1f962b50
1d8e31cc1ff677d1773962d70a6570845896e885ad7c2d00ba3a14e2e236090f
664918f0d37e2ecbfca7afa1da53231ea2cf5e5bcb892af4bf99cac47490056f
6648f5993b485bc6751ab9a9afc32272da5384b2f70f63c6356e645228b45c5d
6aeb72abc363a82fcaab327c90c67f04331f554b711b7b6e737c3ac643e6aa16
40b5c53f6dbc53a8bd872c18e152af1a7e622feb8eb71799f6628e155e284399
c2ec0f247f260968350b16d29653325dc512ffae57ade92d710e982fa6c21dcd
1fd7f13dbcee7f0cdef8e243e23db12f7e025d384773693cea58feb83a16c748
61ee5a165e1a1674d3fa81b80cc99b4a21799d57ed9326fbc866e55e953d90d8
610b2d6158fea2fc248fc4750e5578d1fc0377c36a8100270a0c2078861ae26f
403e7025fb3c768493811aa251eb4f9d318860111a6db88c197590a48ff35b23
d58e579c105429d128314e81a6392b42f6b25f7c39617aefc1e5403c8e9338c3
30fcf6811031ec668625efc3906253d560148327011a4d6a5f2916af4e960576
d96b7bdb3e1d9d93ea2bf483f52a168e2519deaa7b6c89560c81f40d66e7d00d
f02f1a062b622ef7a80a1c92513139c8bc7f8b590ae80d8ca52e20d363fa0adc
b73897772264b49c0b06cd96d58096974f68060c35755d4fa369d64baca9d393
b00bbea7c83087bd9ef0778c9240bb2f9be12e315bfeb9f3b1ed179b11e49e3e
5faf22b9b79c0f2e4885c55516549d2f96296e1087ad8cbd1f9e155cc6b2dfc8
b6f1a702abb1c48fa78c7bc6652fbd7c91ddba249e5ea1447942143aa5238010
89c96cec256f3f6011040ef7df19b7bfd7a26aeb27a9402479c375ae03a4f4e6
53e49921d1bfb3d626c1694bdc526e57d6cef8c18d940c3c2c73f6b9eaed1c1f
0ec094d9154ab27a57a97f03f7178359fee42d2e732a7e50e20239c701b7df5b
fd0d4c5cf11fcce9b90db5e69bbeadf5eba05052a94b3f8fcf722d7fcfe9b188
3bc9eefae698915f4bb86175e6e10cacdde2302e16f845cc61bbd070db2b5fa4
6a7a445ce20ad348c41ec0541ec79056d928db6b47b3fb3edaef6134260ce7fc
5e350648c9f60dbf5c86e0fc0de1b2d844627a4dda45c84824ca129d3d6d6223
d0f432098248b2c9b7b716d5dc3bc66eeb4e83399bfda210a9e8e426863e3cb5
91a77e917468911f6bcad1a4cc46ecfd29af6b2f7f8cacbebaf63fb095e6ca98
9302fa2b19f68c4528e2c45c418696042a483ef16e7adb74e3017ed6dc52f554
15a2b1a3c5cfbecfcc4967e51311c7b5f32e3c001ef21469a67ddb87cbe0c739
7da1aca604e04937191d42db4aba2d38b6697a9cd0f27dbf7f2b23ffae07b169
421569fa9bca378d5cad75d995d6a0ca26d73a108ea739aab05ef119080827d0
1a2e3b2827c53541de355585c3bd45900ba0627baf6bb5a7d39ce605777d9e6d
712b6ccc86d961765fce24e7b6817438e26b0d3c431d04fd86765726c217b0c0
462bf664d10cc7fd5c8d53b03bbacff9ec8cabd567b943e95a356b9991949391
56736a4caf321a1567211aa601be6ecbaa405d42df3d22422e1438a140246c43
d781c4f529c7d109b64e6610e93d7cf85a22dbf68579105a11a36a1a78949ff8
762386218bb40543df30b06daf0d0826825212b176069c5b2d9f93628cb9db8a
324c79c5f5714a02afb1f5ab2a5556ba3c707c4623876965dadd30be192ddde6
a94ed9edc73d7ba13faa34e54276d602ed7517af69673600c34672c6d2af843e
ff2593ebac498a1c4c3040470c35f8bfadbbd4a7c62bdc84cb76922e10d63078
39624ee4b9edf95c3fe8d38f321f3d8647536cfb3dc4ec47846d78efe88003a8
058773b9563bccf3f22ac692b505723626e61b4fa3befa68bab417a88753d267
cd0ed3c83b3f01d1e2916c75f0b9dc377d33c6cac850c98e7579969bceb7bb02
46e88543486bd7a0b6c218d8d29deb52d6df1e611066adf1e55d527f40d27c05
7c4fab7c0a4efc7d01c2152f101c8fb57c5c9b242f7d5d97aebefe8a05f695f9
55f45e59fa1f9bfc8c5171290322a981e74e34cf583db5066e019fecabe2a76b
edd195eddc90498a8beb8e4e1f59de1961729082c4935381cde49206576af277
d8060be6133f10220723c928c21518eb365d89eb9ebaaa3b42f08e20dbf82771
bbd4a04afa4329454f171bea8fa6ea4bd927ac7e00d2a47a337510d5f69d9fa5
82f367ccfeae363ed84826fd8a24cd94281ed613b84bb8e6300c81abaf26da8f
e1cc966bddce8f1e23006ec9d2b6f30232762c475b94d310e234bddc7f4709e4
a689c1a7f371e95308ec1b24f75169ec1468e5f2712922d081e6b39bc096c381
26e751eeecb541e080980c229f57c73183ad1436b7b348165b2c93e5c51e94ea
f2d31884ba9097060d1d8c91ff68fe71b3f542b180f07f6c2bcd1900f91338bd
945305efd866d112327ad25b6f6f14fac129256ba241eeeb6ffe84791ac972aa
41c204fc58da9745a50343746449e37d8ffe0e98cef4442f93e6080df0720479
8632ca17dd7198056bc8deb85232e61f1138f6c567a2c7b16ee744ec5715e3dd
868a1ba5c559ad8de5688843da8045e9d93d78bc5ac97d7613520ba0a6a7c880
e69d1bc608e1e3e6d7a3f398e920fe6e2897b8a3e74c40666197d10770123819
e84c735ce49072e19e5d73d56d23efdff727bb2eaeba428155652bbe7b34a82d
c476c60ccf18e66e23d273faa600d384010a902974931ee31db60e132129ba11
86311021825a28343483589200a63bdc697712907c5d9e996d3d8302b8c75a86
63d15c1a2f6a3af42d2b3e46df7196a62edd9cb0f92bbc8908d94dc4eb7dba1b
2617dcaab244874eb6babc95412ad77c11322d9c2848fc49d5bbfc9683f823d9
229b26affb58e7086e4976e81c2db525643cd6cea2cff8eae213a0e751a0717c
23c505447f3bd6fc0258063d13a67efc29f45f3cfe7f9afc971249d26771b0aa
c17ca3f14cdfb2c73c2cd4bd93c229e5304d4e853920df2b3c1d3cbf2d58726c
bf86e7371d04f5db3d4b05ef9a8077230130b2a097744850f97a32996462cccd
8aa6727727ca5b17cb67a6cfebe55838985ace31ef7222ca7d71f76bc76b914b
c9c67818d880c71733d90360a97fa86a655fe5022d7fbe4bca0e63a0e06170e4
f45a887ed71b391a6b1fd9583923592603b2224a8fa771153ff8d9118d0c5879
37da4f681c3e49112435b4999c634e62acc7a2c32f1d6d9d1e9f377447d33849
ea2701467a9674edc78e6b8b90566f3e225896802f362ca39582c31e13e94d17
650a2a93b4e93d412a2e68466875bdd4b3f7dc5e0555fcad1e61b8d15a5d1875
4a2c09fa93658659540ee650c7977da8672f82f82a1cb2da3a49a2eb6bc1834e
7df5708207304ceba7114d67f7c3f82157546ce1cccc65129fb8c7792d4d69fb
84b71e7f8a78335a33a16d6a572ea52947aa0dfca6cc23a2e4314d1f4dc28f49
182d49bb648c6fe4b97df9c5b4009271f21a87ae86cb409c8842eb6910515d0c
49f7ad03d9d1d3a36b6b58e173f734e377c1185439d8fda8b1e96e7ad5d834ef
76a564bab7e47e9a6bbdf1f3c4417be537a0e8834a9576d07e1b56eff51e2b91
1c6665e606a5d99f0d1ae70a60a64601f83f6dd07089e0c6f3008112e6e1e560
700f2cdf261246e3a7f184bca6255fe98ddd025971ce252716d9464d73534d17
9601e3c1c4c90bb5edc69c7e840bf9538d5005923cdc43addd6b35547aa7b9d5
94098d30cab5904addaa7032342ac79011e57c10c4986bff1a03637a3d393bff
1d4b9af6d489d056a42c602029bc6e260d5ab31906700f82624e8d3d4e895a7d
626c160fd0fa13ffad9aeb199ce7c05f6544ad82e49f647871d16610a3be22c5
18dff59a62e983a03e9ecbe5c83d497a9db7ece6b8bb2b47403bd98bac9f8c4c
15bc85cb61f03805e4912e8a4aeeef0664708917021d3334aaa5621a0b608ca4
a4ff60b8cd81510aa3e0867621889816b0e2bc9c847532b2eff2f94dc858371d
81273631e6f26464b1469403e5a13c7d672016616890bf8349ef92977e5818e0
9596fd99713dabc01415a59be74316e37a0de4250209b1224698aadaeb0bf490
10283e6ab11fb08811c4c061b37177d6b953fba452680d432ea008ce653d4c18
e9713baba91a1c31bea2ec370cecfe625348cdf6549737900eab3b123d58eaa2
a147e17551a57fdef9db45eace5344114f0d671d6371d85b60d61ac5a719c165
734dd6077a6cf13fa7ada89f4e3475a9b598b5ef2a7ad282a5bcb5ba50a4ca7f
a03b2cd40eaf326d08cd0219300e6adc9dd81ca66d52008a655a486ab54d158b
14b572f4d3a47fa8353b44b6f9b2f83fd63acf688fdd3c4fb87aff0fad3c1b72
54aa83435bc167bd52b55935fa08e42e075d746072b5a087bb37469a71170027
93238f1805c59fc39ade12b7a0301cdcc4b26bfbefc54637431d8985a4221d82
4594d87d3588d096f3dbb2e578c567fb72a6b80a8f1daf5c6f911464a612fe32
770a9bd0db1ea1476410bdc2359bdfbbcdc057dd7627edb8f7ab2acada1ff3b0
4af8534085a180d40f71f6531b3d9559670802a014bf054b897277c3d2c93582
b3266e6fa8cee3cabb2a52821c53ef53081e04eba87dfc190443a5ed8b147d19
2dbfc2a9a9bcf53559329a7ad6d72bd0772df46554986db25d9c28a44362a17f
d39cab0f5bde294a1919d28868cd339cec8a03f6b46a2f85de7262ed52524f99
6ac1324e46a6c20686adacdbb9c15df54533c408e134cb4863123dce7e8094d7
20c6f512197fcdf95207ee1f5430dcd4ef8cf3a81c64190a1ab64037575bcaa6
5cd7696ed8725bd7511d6a0fae5b3a69f9289f64fd7fc109a1c2b1471cd566c4
af28ce854d5596523f1ecf272a06357079e4ff791ce8ed8e1ec70e672305f59e
c26e6567e3a1fd6bbb2c3d9edf5ccf6247001a3100c37f72c9368ab8746dfb98
ede9701eaf4bd075f7c747f76e7b70b3e38e44757eab463574123bc1ebc6307f
8351e0d3c2535b66ab7c21c4a5b5c6949a1f6ba9417da86776f8d850ba8ac6f2
15fc7877e98934399047d5003be7ad17b1a490fadfb658c60b1e5af3b6e4f819
8a84b0881c66206fe6fbbc0a57fc81fd676bea812a613de8a4b60cab7f66d01f
bd6382e0788005e4c76ed7be4fc514f6759e73195e9ead2e561bfbd2dfce5ab9
a6970b9be969b33eb39cf558d96fbaa861dab0d1f471c2eb6d6f0bc2716f6cac
4a25da74508892f63ab6529aded5eb9f65a24592fecd7b946d74eb98ac3dac6d
e705005f62878974cf4dc58afdf37e29a15d51038803391a6e9d8c276ad32b3a
6097beebe4a0d6e28747b374df9990b792905cdb3f3e3b23a57d663630ed4164
084f19996665259cf3bce6cccbf6c518920122e923f1c2ed1f4db0463de59a29
01ef40334e57b451956d26a4c418e51e82aa8307a88cbd42cd11a086880ffc91
2c392a0b2301d0296b4e02be73c78b179356566cd4abcb60c362e5b19b2a2582
35c1bba1e689570d386ee7a958f9aebf79b0ab202d2ab7952bb2b095c2264540
5aad9d9a77dd52112ad2038c4622dfdf972a7c8d49c66eec99c2b69061098640
538c7f0552eb3534d6f21ab1c0b3612055e37ddfe03d9cd9de865db115fc0fad
7b5201624a7189a0078def009c015488ad97356864684be34a3daadeeb062c43
699543b19a35204ea283d29cc08dfeb5fb919a69fa1495e7868e3812bca4dc99
776a398bd8607c824f26575048010251e42f8d073ab40d0ae58227a51083bc6b
2695eeab8168d335e92f57f43d6635f4c100204209b7281682bdc21e5b10e6fd
5102003d42f84fc2b4085fdf886b2f964b45ceec6b029b4abcbffd8ab8797a12
9fdd6be55d27f8d2cfb67b70037cd57c06699cbabd97c00f2a60ae6622393be8
b362238889a388f23dbbec3e5a82cd24a37c10063d9dfbbeaddd004bf01f799a
18cb5b9487836e5bc7873887e97702966a0d911ee966157a420b8b360ff6effd
f0d78b0d530ced8258f39403a0c143f2aaccabac20c9da5d0d033dfa6d65a043
f49622aa020c6f9375bf678efdbc3779534ea9f958b96c4a16b0834edeb5dce1
66f829d6218e408417aa22a1e6b08f7b149e3216da2aedb7c0bfd54128f7da6d
4eb18925b4134990ef0fbc95cfc5668d6c3b3f937ac09fdfcdec8cdfa346e62d
8bcdc5dbbffbb07beab0ba0b7dc7ea6f977f01539cd4ba72d7cb6c48b67ed10b
54e8278e1d7298072f907b8ac4dc3aac45c79e21c98f4fa1589c83b101d23ccc
ce93b18549524778abf90530d49a8f3425e043719d75500b81c7c03b36659f9f
4e948eb8bf937767bd5d1f04876f00cacbc8dff3cb3c8545d85bffd09268e864
3ca13303f3f7874804db1a87a86eb8525c3883689d7485a1a791221fc2c16e3f
47c85e368021a1af0d1e8ff6c368a1b3159f94e57f496acd8c5a14d1f38f52a4
d0aa62e6ba14dfa6bc61d22516c77aecac266ac369fa575a70070d33afd570c4
62419e3437ed018f8e83f890d23dfaba08a590f67882ac0df716dc7794e2757a
8841ecb8e9251c06d18cf344d8c5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 88 /X put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
/UniqueXX 5000829 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cd803271dc8bb1656323089e9e2bb50f2b95088
87d31dc36e555668d9578b338402f8c259f6813b0b71e6cbd95e19c20ced8495
2559e47577e612a4d94de3c1b4c6c41a6a3fa9e2313457242de74c7e4c0d722b
3e224d18baa726369542682e9459b951b2ac638494880c42be4e2175a3c067e5
945bfc1a05d3de8c3e8ab97f80ab6000e1f78fc258b85d3c84b038d7d0f5be85
0d43fe03e26cdfbb41c36d14cb552e8447ca678efea1d275e85503123a2263b1
4077587683de69a8f5a88d666172668411d0d0fed3e037ee468627207505dbb3
59cfdc5d7f526fca5416d741073284f5dd2471e09f5916f4bff1a90eea4d1283
7731f6a36e5ea695f4efc3bf5669b7f60ab606df5819149c0c8a4817f06dc172
0543467645daeffe4457293e0c0407c4ec7857558d0452de2ac773f141783edf
81b30215ae8d2d062aeb3cb69eb0d62bf04780997c9c027a22896f456b784378
7f2ccdd4804375321e7946d3d254521249a4d28a360f4d3163912a688c16e807
15d0440bd27bb78fcbc89bc28028aab2f594f8b641e45b9c599180b69663eef0
03465a2425aa4f8b29dade493002fb335b23eb145108ef3ab828755d3753ea8d
f0683265497b1cb5cb484c13f7a4e003fa6ab3ed5e24fcc6125cee4e33936122
3cc907af3c64e5aaad882c356e673e6ca2509a71920e99549d8797e9af709e51
4ebefe61aa0478a60f3a2b7b3d47542fbd126303e31718e6b9c711d202dff7af
eb7c19098c9e2a52aa57844eb07e1bfe9067dbe7d0bcd87c86f4ea099deb2373
edf149ab7955979e26ad415a5c29c1dfd02b5f0678dc863d3d6e537ad3b40da7
6529df395597aad7f22d53ed7e16573ce620e179f10fc8e66d1eef855b5427e2
9a7aee650c79f4ee340b1bcc4aef263bba31c829effbd9df68ce46b8fd90d280
0c6578939df7674c02a76efe445637abb3351e4075faa78fe3bffaee0163e819
80413970da7d38186289479e9e1c1ab5392c662a80ba409ee9a279a070667e48
a959a15cf7b0d19c46dc73512dd6b9a2e89d9ba477139f0555b353896d55a771
cad18800b8d5d92f583af15fb7f31e39716d4054e65fbf56957a8147a341f98f
d66baf234058c4d05387dcaa78e585bf34938a97f8ddc9789b491d627436d9b3
76f76ebd5775cfec73b49709c4f2237f8c7149e833c10ca5a22169e24d7865d9
c9b12f873f89ba143e21b9e2a9e00d770d66fd406d52e6a1a9abbe4c70fe2ae0
8d8392fad388aed916b398c8bcc9d4eb8ade722db0a08f9ef9d221a717e18d05
801bac4fb3ef8a672bc4deaa489ee8b4258f2e936e58ae61c7806e619609c24b
e6889d35b7900fb8a5e98f39f4453e48c33552c6be1c1db9e0b1f80d12f3f77d
996617edc18c132d3fe2cd332491eea4d1b1ec1d91ce6126cd889286f0e601f8
3e54a7272368f02168d21c5e17d22d46bb90233c0d17eb285edc1afe43f2d027
e4073ffad397c715844bae31a822591ac8e478aa4fd08e3d355b9df361ced254
0c504d2a5b21db4a508baa59e778cc03f756e1a0d380d6b2648da82673086e5f
a5b644a6689ae5bc2e72a6247caa3f24a8d6b7c350522d0b5886f0df57ae5d27
8646c948ee4a53b2f228ccf37f2ec4c52bb43ef99383e929fd046d98d7aaf09a
449e67c275da20fca5a6a0a448b38326d4329947191aebe2a8da85acb0fb4754
d7a460cf7a6fbac945b275ef261993a04488abb48bb4fa618d073bed6b6416de
08e891a00865ee470e0d8181872f11f043b7ae68129042cf602cff2e94351d29
638172dfdcf408f84469cfae74b0cd0fd93a86c3d83a666548f172b4bf89a6ab
6698735d0ad929e6fdae6216c8e635e14a1974c237784cde0850629681783cbd
3729308b7c3631db1805ed6316204f8605d5d52577d7fe14081f74edf0bab80e
1a3475334dbbd3d992777b44938398bee1a94efffc1a339e82a6a336c0c98e10
e15bca4e0bc9026b0d9adaca2e03c5480f50845f705895a4d94166094fdde9d5
d842b9284b9be856fed2254d54b7807ed96923951e531d08493b63d1b04db4a0
31cd74832b12acd27dc3b47b5b61fd5fa56408c7ab9da9f56d411788018ff70c
ee947a9b4f760a45ad3865b13d1f0a300f13d3b06801cae6c860c137f1970f1e
540cff2bb4bfc711f3ac29fde3fa496e1a6e4f9a6b6d8cf91ae0fb9ab72f20ca
51d885bf90bd6c7d297c775eaf04d08c3feae04e05d29494385e5611322368cd
2bdfc11ea3a68aeac80c8b6f8684819352e5b097d1ed593f2d48ca08be3f3e60
ee36dbd1ac5d779f10af5492f1325ddb6e91584c6ad2cfe949d0ab54ca7c33d2
68c139000d16771d4b17b138b92820a894411f6676809668f4472d3a2302fc94
4a46a853fb3455cc5095d2169c3319bb9b3681c5ae1632acb5c85a6cb7881b76
78b5ac6c6f907a9d2bb655a8fc7f1378acc487bcd7b020db844a41c3a7821d10
63b75a24cc2578429c0f43854a5c47f3388792e173c048ae21e742c261f682ce
077ff382bac32fe41114b9e0d69fd50820c2782bf78be3d31f83841b09e2378b
2e8263820b7c95a6abd13b8725f27b508dc6b31c7462a479c0e188066175a372
7deaeb52098db8cb51e4c17c3f1d678d05c1a0739754e8d2e5dd304facc19c4f
5bbc7d28640e34ff6aa97459f4aa9a739b1025cd2f156381c665c9a86033d003
9a377dd25419c7558263b083d74b2ef74347ccc0937f0f04fb3bf06aeb13e608
621cc0223c969922499f65d044652df1f2cc6e90db026f82021676c449d64578
27f8a459a9668ea3b559adef2b5f401d3849c193b92c53aa968631d7f2103554
490492f8f649edc756bb49fb92a9101bf6da957244e5e90b8900faf367fe0ac6
1a534d5e2046f8739744baea2eda4fb0e8d69f6db90748d1aee5756f64b8920f
73f5dfbec87254a0eb8836b5dcd12732bdb3739f9bacf91a6d2f7468374ec04b
e168ce6e28e3782af0c7aea9decafecbc05409f934b207e6d22f62bb194df7dc
f50c22fd39c669885093787aa20db14c5e88e05a122ee54bd3b477d571e65034
2c018c2bbc1842b20853702e62e76ca88cdf5bc38b0a4af6fd6bae2b5d4f5c4d
71a9b71819f9116892aed27484390ca0cb18c5c4afd8568710c4e484b61d0a40
157904c7f47ae3e31f63de2c45be37ddf07bb1e8e9a6ea5698db3bd9a0f81b81
25536ad6823af25d5df0a594086a646725423374d5e084a9fe5a3e6f113cde51
55c6d67696abbc88434b8698dee1f4f5aa7774704842ac214737eae116961005
a4d31d73087b4cb3c306545d9da77d3af55a2e7061946d0911763ce21ec059f8
66495b918ec058cf294a5c0820a900789928b76f2f90721b939d17101e9eb3ad
fc7792ef2aa64507f3ec8017a559ff5e6a3a439c7d70af74f3ae3a412f4b090b
d76a7de528c442e5b2e4eaf31145f48e7b481ce0942ce0206f0754ac6531af9c
738ed36198afb06c5dd842be314bd32703456abad1c2a66611425e0bb74e4a5b
62a664fa8948b3235b632856429934d396b480b27f95cfcfd7c6efe7b7889714
c181496eb7fec4ce177fc981f652b513452a3d2b6bfbc30e4cbd8595e167f91b
9e3f97d7ac23c028ef4ff561d87536e76f2d6632212a7bbf61c2ea79253c35d5
99a273b5245709391c6e8166a589bc38363d64c5a082d873ea7ac8581fa1c418
ded4e7124e48227b37395e81c6a4476dbe0f60f8ef590ce65746533c287f3b85
1945276b7a13e3898375272dfd7bab8275689f0cf2a689c5563583794c228fa4
ce52cefa1b909887fd6acc294a84d0919d6f99026b018ecd9c9436f0c6b1d043
26fa408f8e91e635b4221fb6e52a5ca4bb15aacf5f9101e6cf0e8d36fe72fe55
364d9ced1fed3ebcab621ea26e00efa992aa6fd483f9da754b56189e3ca1b5c2
21299f6df1a8ebd7e160989e41a0a8856d4789e74b300ae0999f5a34aa41263a
67af88bda359ebb178b58e786819c5c0a397c14bcf1a56b9f29debb2e951a65d
9b0d2c425507f1e26c20baf6e5ac1c8508b2da0a4b736476dc05f1b477474eb6
1c66d0b6ac5142dfaaf112f3d7b1421ee242ccb50dfbe26fcb737a389f4b7575
a392fcc0821e447cc956be39771e560ddf866ab863e7c2418e8ecee19a9cc0ce
9603a9c071fb73b2c2974f7eae63bbd8db09850ffdef73215698150d17204814
e058578e0c24a59a9affac19d21c7b52b3b9bf7d98aa58221cb29e6b5c087348
754693724ee9ba23c3d9be997bde16d9524053bdd4204e799b8745c54218e032
ca7a4512c6603bf1d5ccac69944702647e07fc7e8af9371aed6ed40bb9c8638e
4b8bab50296874391ca7124f60e31ac334a8fe26704496473071ca257c2b870d
988c2ce55f02c2b66cd6c7ec4dc407bae887b6968143f0ccfe4056bf5ef1a9f6
4bf6e2d9dd1b96af6db425f6b66a699e1c7e2364bc7cc90bad6603faa265dfe4
666c91c462da58f67129e5e94e6d0a8f5809e093f99583cf2707c92b2b186fdc
10d7cedd3e4da9aae781b69e0548642604e36f3eec4a97f4dfaad4ea523b2032
8147f16171f8df84e31c0d5189fa0eee5b5376a041b01c0f71c316eb08366246
8c5eb810cebd7519aa2157ce5b800bc3cd9c220c64fc99f12b86e712e52ef5de
e9e3a88e872f00174691407f18cf8fceaafbd27c43d053a23bccd4baa9c52b76
e5add0d3d4bf5febcedb38309bd086e7e9ec8d8bf673cf1abe45594d79d5d4f8
91f114b2a65449678142f42cc10347ad4f7d4bc19be5b46d9f309a671e00b4ed
c47069578bf764e4af7b458d5a339a97f14f9c4b8d62abafdff7c2072ed05669
a5ee868feebfe14c9f4a44d99c09cbb1fff918b4c8a9cfd91ffd04cbcebcaee6
afc0a7ef20cb83ea78cd1772c712060b5e23268907c3fac6510940bf88931a14
f1644ba0bccddcddb488b7d47780e9ded6495fd15b074cbed1491169b7ea4065
a92bfccde3df7d3727dcc5de5b829f6440f25b21a842c57f694315643fd442dd
3d5f644707430547d311269ac697858524f6b1b1526ccaf1b36296ed581d3c42
ef7552fd763c66bade4fb5c49213f1e8f949c574c7e672925f1b82227e9165d2
06c1cd3d7309d3824aec46de2edd80690115e5d05039ad2e7efcd0fe3cddf48c
40b942405e54e75d81e70b5d0fa797c3274390752b6ff69932df981f3968f237
3c9083d85f5309a5926908ba3b17dd7a9b6311f1156110755736c83907e847d2
e74ee2ce2098bd297a5e5a1a59f6b5643af84dfdef5f98c7cf002b1ef1ca99fc
0254b7b0303eacbd78cc7bb4ebbf0e19ed287abc201cb9b9b7796bf85dffa056
5c2b36431e53497c344be5d6a0ba3751091548af688a924ff3c8212a730eeb88
7df75b5c96402604ffba7b6cc0e9e409c34672d4948ba8526d78b7dc4de92c2b
80f0e146aa84bf60e2adb3bc4ef6dc0cd0be7afc07fdc1933c7eeae273ef04b0
ef454f0b259ec2b3612395466565b510f0ade8a3a01b06f8b8aa162d09732f27
718c464a3323f4e31e32f1109af952f7257fe3def5844d1c85f03bc806973eb4
cc3bbdac849a699d730e3edec8033a35ede369e7f2e04f3f89183ebc69684de3
da09be9a34901fd95f22a85a406bc71fa6f06e234622070cff006d1d97889d96
db04f2ef0c320402cad985e4fe08998a2789b7432c7e70e70218b0bc37bf3641
47b032bb5b1ffaabd9c48dcf6c41c8f462777444334ce9033a9576544d408933
ed3fe461636f999ba2b46855aa5ae3abc203e5d57d36e8438805c972810c0f9e
93e14817d1ec6bcecf53ca57bec7e58259fab01681bc3b40b3914b3d6ce7223e
8436d1bdaa8b666a293f44e387d7d4bf5de37a49609f04efdc901d3051e1e489
2ee92e624e49f069428f5996110c8430c02a5d4f1c9ecd63b3edf1969a896f31
3acbc84af62b84f1cf921e5e7de6a7b17ba200d5b3fb1ae557c77f8e1115095d
e75d98b77537dd4cab8ad9ac6b09b72570c4bfe9e0f753f05f75e446b251bab2
a70d1781a3af2fbb21ed1f52f98da704651ae4fcf311a8adbe5ac8bd150231bf
3f313b4e63446c3f2fb235afc161134df4ab36df36b7f4d4ad3f02e8b035efdf
f650923e5dc9e20370e7845a5e1418c5c9c00f6f9d2ae711f7d9d3e6a33bd4a1
56eb7a24dc71d5271587a6636511a41b011d2352f6e9a1bb0fe958124ce18cc4
12c5076c3d969bc3ce8fed0ce536f47dd8ce7e3aebaccd2961cc0d928b106ec4
ece577f579febe5b7f976fdbd24d5f38e8a7dcccc910bbbf18101b5f23c8956c
ab2b28cfc72c24640da4ea0e8180324ca03ab2d68ac3e864b02b806f322ee292
dea9a7a9e6bf0eb44b26a5c29be9c85296c7c62e6153fa93aefaa74add1e8b47
63c8a699d50d35e689c3b42c3c04b8ea4f932eb395f6eaafe9b5be5f38d340fe
7407afb664af167acdc4992b888516bb64d913f337a53995396c43899fd0a40d
9c58d8df4185b2c064c3a4853f82935db307c198465cf7a932074f80ac8d55d8
add143ca34dcf6dd6cd72d0e99ba9a1096fd7166a59f1c9e6141653db82da04e
81d1db3109b3ba207f436e1c2e40f76ebae09e1a746bc7863a15a6bd7323856f
5b0ecfdc500bbb883cc806c3632ba4225a7a04c882f0e60e16ebed09b67eceb3
fdd0c2dd9a3a3cf24d6f27b770fbcc12fd3bd83750644a19b1ffd67142d35d86
b7d4345a8c8aee0838f078748ad8de224008deb81afc42312ff7df0e21608a8e
b751f77fbb98aad817d1b3ad657161b867faf3dc16e04b6215e97fb80e056a38
4bfc4f04da8650a06c0dabce3be15c3a02aeb0ecf135b6da1660a9569ac79a35
7b9ecb382f134bb4955cac347ca9373b277287ddd6924c572d20400805efd355
aed56dd6490a2f356074be265895aeba87807d2716b146d12d400175d46b4780
a880571a18715fd61ec031865520403e577f9e5dceae76fd16c487bdc9e08b46
1707a57ac496857f7df1cb1d5839987df5cc04918532b2500819def69ed74f3f
a8c6b82a8b377ede7ad62cb7fad10af50175157fec6621a536bf8d55841884bd
40e87d20406224733cf1116e5bea917e9ad11c80d6eee382b5ef6a76b1dd3fe9
d7bc0437bda6355fc8249f01fe0e92ab0b981d777bb9d73166d9c13a2a7a4fb7
d6fff59f688c79b755f585822734c769b51a7e0fc41ce36983d4de37a3de1e10
af4a61c9b4cb887d874fc74646433624267ceefaccca527b86f009909a12104b
1112a438cf0fe6f8ce3e82d514a12cf91edcb15b59228304df2783de8106b94b
2867f27ffd5239c7f5d6c179ade68933b9d04cc53c1e9a28047fba9d38b9f364
008c8b329701880cb0665d26d63d4cf941f72bc97a9ec6ecb6ad97711c939edf
9c0f35d27ca55c64ab68c02d1c025b949720887aa98170be1232e6da4c105a98
ace1f5a3696d0c91e7e6806d9bce3089ba2b78e1db895375b8f8dd3b6b09aa4d
ad3106657e67bbeaeabd5c53801ed0c00ca80d22a6b966ae9a5b1db0309860bf
4a197fa8451bda995e3e9307075cb0c4c15a81ccbd0bdde423c224fe5299567c
db6cf34e6c35165b6b358d6ab05220b0f2cd4d901204b06f4e0befeca0d5141f
ecb27fe59032eb03a4de96e113ade4227f65503a9cc32a0db7bfa7113784eae1
08521413f45ae2105283327263d530ebc9e04c8691b6ca75a9828269b9f5b4af
97d94043389122f64a00fa7766c2a068f6c6c8eefc347eb0eab482c1526ec188
0cd465f5eb1a46e34fd360f5e4f6d0b34f004263badcc6a27f0b7ffa22696c98
ba36bfd07abe54fc46fc01fe35413f7bf240e2617eba89a749d21bde7593385f
5dbe86bdde10b8374b59d1dfcb40ee5acf802455f3c29fdeb491527822dd5d23
fb5e79fe19a2b34059e9e43d29788de95f3ab5aeed7a9e1b8dd7dfd2d317c3f2
ad0911a656ca4c9711ba1d1566811b4d3b9c6429081a1162bb8cf3009a1ca666
b7d9d92ca2004ecc4b9904da94921b9792e4a57646ecc073527bfcd0deaafb9b
a23e7c1dabc4eb9980240378d1d8ca4eb68376ffd9b13217035b2450c4f17b51
4c2d1fc56bf82b1654576f2e6f1f5dfeda78d1075a15c1eea320de3ffc472594
0dfa53a4d843958c518692fadd3c7eaed723b9aa35a74bd7cc5c8d9907ce3f58
a0f1ed851030393dee79ceb8a706aa1563f33375af93ad2e9730ac12710de0fd
7b20b4c10c5c93f8c88c191fb4831e1d99a2ea0cf80f4d375dfded2c6394e107
c4015a1f0d73c09d45df5f1d4c0195bb456c2e1bf427b97f65f5b7c5b2fcf2a4
60d041f4119374fd2f9956a18fbd4b7979b3dfade71086d275731ad5d8eff9cc
5f44a175c68ba203eae25d7f01ea60d7da4d28f634faf5c33164ef4abe2797bb
5419c07abfe1220670dfd574d586a0e9da61b986987d1a090e74a6be3425f8a1
2aea3449cbaef9f130e65f0a0d119e5acd7607be7a1231465e2ab73b4833ecc4
72629aa643dfa6dcb9ad6b9c76f1f01a9f5efce8e3b138d00f68d569e058917f
c0ab36d7d6106f8e21da51461ebe5da1e031c3afacb842e02f8300d683d928f2
6b8f26fa0e4ac44097c4a305418696383ec2a861716816525b63a794cb07698b
a368123cd1153d5d20db389605ca28d1905d3ac6477b9f832b89388adeaa08dc
c38169c40681a54c3efd4e6cc1a2123def67e1d0116bd6a96e9934c4fa02163a
5162c29d29dfb064edd83b9d6c6d6b5427bca896c5814e9b2f8395d733a35b81
2dd35b82b9e0cfe3af0f3af65abdd3d447aecefc9988da70bb3fecadb34b2727
131871d189a32676a96144dfb4d629fd89215e231635097d69827b9dac298747
97d1d6cfbb3668cc39ddee7f9e3e801c9c4d9baa8a7a2227d05633c984c4c316
b7009ea4fc5e9bec6683e0cc75443db901c6f39c97ab81a710a2eba74175dfbc
a55208dcdb744f88e347de12027352efa3714de8b38374e8bb680dfff5d26b09
3b31ad04a3236f955a60c195a16907792669de755bf0ebf8d31f04cd37a72d4d
3b1e65b509cc4be57c46013a73090b553abe9cbebe1bc8e69fec2da4cb3e6f4e
d8c19601c70806b7fed58fce59c6bb974f1803164a239531adef63fe3b8b268f
3b66e0b5ea8d2a2249aa184c15cb9231549dd097c27a40101eada769f6385ad6
e27672eff237e8440bff343f41d18e5a48622596c823530b0d6618743df9973b
d7a08654221e744b07f5a26bd2db1b397427ca46508c76faf802912c5b7a2422
11f8ac7fe5ab1da1923da48321a54a2fa6a5732b83b9727842ec09fe105069bb
64de4cdefecba44f9deafd35a00ee45e9d073697b59b1a403916311c32d5bd15
a126d63f47ffbd2c556f3410749afca68eb691eb8f1bb0ac954ed45d5e95b3bc
af9a41f23f88a8044916e1a7ec668aebce9deded5b5d6629b4767fdd7d12dd44
d7a67eed2904153dbf49c651094c3bce043096608c98fc7b57085f3353db84ef
a2992b1e8b98b6b871952e9cd35c3454b909336624f27cab90120775a57f11a5
e081372fa26001eda212d03207e7d0c1ff4262ae5955d31b7c5e7892ab3c5159
5239b5e0545c393e28195ec163952a9590aea90ab0e717178666f3d17c16503a
feac5dbf83aec27b4e20693861f854a4682c256d5e867a15e91a675851040551
aa51b7df4000a928d0346cb31cbd241aca3f38363596c8b7342c1c703825726a
d3d0f1b9e7714ad17e4e5ee6cab281ce3a9fd502e06c586b6fafe430672eb7c5
dde0e54e7d47939d8d25d951fe5063c6f668d2e3944642df3a521ac738d5b85a
5850198475fcf6f8a90707e3cd17273bf998a011cbcaf2d9be242dc2d8ff3930
3458ead2690dcfda42eb0792f2fd57a386e8600bbc1d901efa5362402e3a52f0
1aaeba1c8be0af8bd2bcfc91bb33cb0924ffce7616ca418d5d571a5ccbbcd77b
d68f4486ca4df374c8e7a63bbbd66a066fffbcc93a1abaf111ed55c5720d8eee
66ef1d37a8be18e2fc66f70027e461477ce103acc76e1ed0e50e40d82b0f2ac8
bf06ced35a2699c9592fd25f170ad277a1843eca576b3d0673436f2407bfa65a
98e415fd7b70518e34d12b2a0ab2c3787dec6cb9bc80fb9f5cfe333871af13a4
2320e0aa7b1efff17e2e9f1d8f35a903535ea5b42ee40c09418ed8285f0d8120
bef85c6cd7429bc14e8428b0f598885078366d0210606737976d0b0999eb9dce
0ee02fec344655f80d7774995c66bf753ab34c147afd0442fba8d0ff72a14f5a
f59d4e2432ea5dd69f3735a4ee6c575218b1f4453f4356aa69983070334730ee
8fc746a1e0779e5e2c502b794bc4ff1f381c671d644927530604dd6261afc2b7
f2ecb851c63433fce01616ab08f93613658f3af23f08171796d0a30044be9d58
713d354d51a8933c343dfb491d7463996cdafd508f4802d3fa71940545ad78af
1d1992286bd7a0e65e86c16c6449da934258a19f47d9388095d8002d954a0167
165b2e48510ce786c5ae2abd70cd2844e5ce7ef3aeb1c580c0fd406352949995
e1585f858eabe9fea7705f4fb44358b500ff3c96a2ba7d0b28be03941f2b4fec
efdc5b2c7b334ad7a0db18b50e26f9a6866f2bff8ebbf188cdd55334df80605e
1ae6a971518fff41696e55b0f93b566195baf050a565fffe019bf2de2ebf349c
01c16bb64729608f1a97aedf6a6f671ce1c7105a0963ed196616a72dc718e269
48e467a3b2f78189f6f1d522add450176c277e4a42b96724ae43ea947ea39efc
f2fb1718213e500ea564328fe4115bed7790bf864782d86f32d58e8b
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 67 /C put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 82 /R put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueXX 5000794 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486858b2a4b5a0cc2e1bf4e2a4a0e748483c3bcf
5de47cc5260a3a967cac70a7a35b88b54315191d0423b4065c7a432987938c6b
edad3b72ad63c2918b6e5a2017457e0d4ebc204a520640fd7c4d05e35ea5486f
a43d0e970787203855daccb1ed0b16325828b13b7c767a1a58c87902f0546ea5
404440fa6526975783c2d7a9572b8e5d5176bac598b8960609f49016aebf3763
89c1adfe6a1ffc0c53b3acd9d168ec3a278fd4f1d9b085dc2df701346c9d0887
3d230a161692b42a45bb5da343b4edd839dd60685a59aaa49fc65cd8e2ad2a9c
5cab953495172a1a9f40d5f38e922443a519dd96f667201a408bd1d89e35f4ab
98e2f68c3366efc14b5afe1018d9c845d808d4f8e07ea8168518a171ab4d6e21
70eeac099eb7ef46eb9781384da1fac3b3133bb718bc80082eaea88759745188
f266b31d0c7e791d633f16ed94e05517a32163e74cbd96dc5db066f2a5313d6d
7f09465608cb404613e0f058073af000e5bdfafbbf9da0c0d5c02a3447f2cdc1
f56481901e34265c26d331ac3f85bdcbc7c51ef9eddf2b9c189c5253f8e74282
d6f053d7d183ae17ea175e5ebc401e67d21a9fea139cbbf3bb1358c713a75843
b39a69aa2b1a7b975f53ff22d1dc3bdf7acd17afa1da21568310c68241b31d3d
03bf404bd30baf9cc19c75b958bce7155f03cb0cfe2cae0327aad4b603284a51
7c26de75b8c6f6aaa9debe4aec08ca4b646d787bab1e702054272909211e814c
1d2c33152bda973de70ec02436551ff9be604d16ffa29b93380b5a04a493f00a
c1d3c429bd6c92508652f7ab7347e9dab047409e478b59e22a73993a96ad13f7
3a58f110ca20a1d65e0577f470498b6faed25a690fcb92f9f19bac5ac431c893
607dfdc528e7d7ccd1a953ffda264220271f146682ae3af7b7d80807576dcb76
0e5c25929b3a4ac45cc6fa965b8ba72eb5f411d089e080b28c17e3345b0fdcf9
0d650ccd293bc07c337be445315ec8952cb19206ac7203e6594bc75181a42e11
9a3fe8fad6fc90af188a6626f9693da0cdba1961e7af6eafeac4c39c48ee5b12
8e02b37c95c76fa06692338cc0c925882e3dc253690cece3ea454a0759f94801
f35b0d9c04fad758a0fa0dbb1d37846ffe467a9c5b552d88f85dc0889f9e7784
f9badce02d5c72ba7c196e83e8520baf1b504dd713d325e826f4c1c68c9451fd
211b6c29c328d987db85b5861d996ab425c81ea755dcab20fdc95a2768999249
dfd6c8b6682067c271de0ef32f0cc490495e8fc734885ecbdaf4273cbbd763b2
920f336617fe2c0f8c012587132e7bf1e16487caf99d266451963d371bced602
6d3f26f87fb65935fd2100e82012d75c184033332add7a57dd1ee3b18ae479f9
70432d120aecab0e684e616d24abc554ae70c9a5f2e511f57731f4abfc5ac154
9228d1f3d25322d437e30ed8f2aa8b9efcb24f34320ed85a2e357abdb89fc8b9
cea61ebf87f71da81d90db356d42e16ca2e87b2ba8f8b88c5dc81d74143e7513
b64591133892c4e7e3a7e76a00f5cfbad11b51b4fc77c1761c1f01a1978ea551
a044d5f20b510da5bd9771030ac15c1c5eb3dff335bc2d94db39b416351c60e6
03607c5556139d07c27921112a76b04c6bb450c77d70d0c768ff5bcce49b963f
73918374592ed663ec18b5730ae82d2329bbd6b83f1d7eef0d7390539d83a446
e747dfd603e74992aca04fdaafe174e42a843c3e04ecb6a1f35b01dd22610c1f
a7663de654e66ee446df448907ce144d3436f15a569c5337698bd60afb0febc9
294b3fac437587fe117f56c2c7dc80871aac295628409f07f72eef1934daa51a
c93c36461a47de05c8072d0dc2dde8ab8b03264c35ad48f3938633ca7edf79f9
02e34553ee90ce793ae789d5ae810f8675273ea4eab4d51848fb85a9e2270299
92afbf329dfe1c6cf7d57c385344017ba67e7197a7a220c9f7b483f3e173f15e
730b7eb479d60e3c809756f1489b753c9f433d48b021b72a5a7d743baba59d25
78b4908f25a1175e37886a5ca0d6d87bdf904dc500a6d32f5945d2753791a297
192a0e2d8a6925b3189d69cb56cac31206dd0d215906b0e28007910776a4810e
b4fb511a615ec46cdf7d4fe2659c992f7285ae3d8330291ca98da362a1f6d3ca
7f88b9e79f233ef5bb6603e4446bb1502a3636a24a3efef0501a4d9031bfec84
ea02d56bc994a26864039b4e63474e5bedfd4dc66a7551fb8ce538af8a585396
37c9550bb4700a6f692eded85424750c986d9995c3a2fb50e036fdda88bf14c4
1290541e2dd9bd254c56edfc991efc0ccaf3519fc1a47e16330b889c24efbf1b
b75e5753b4a9ae7ce800658e8bcaa30587009242f5f3dc6eb9e9aafb6e9e0c46
15aaf3c5aee1834bdd84e0a38628e1802cd01e2faaebdb1d87a9b7985e4d64d4
d1bc04f2d9337f12376a7ce99c30ce75e017dd80001dfcef7ea6a54a5b0b6ab7
d0353d1b3c4cf16d786e993ca6b2bf3a14799fbae2e555785d52d56eeb05b9b5
c7b0e97a379ba0be76abe94d021ffa69dd4522a8b74bcacbba3bd3b1a8bcb268
33efbd1e531b2c7db12cb3060ce180dd6a4e80b08ee719397c80b29fab9ab2ff
79e8567777acce236deab6f731abbadac80d82a6ab3d43e82464c833623abd7c
c1a2ddaf8040dec180bfb488810023dc5e677c46a48157889fe4285440136097
d88f1363aa40404bbf4dc3f8446d52a8065abdaa3026fc240488d35a25fbf775
b903d01e844bab14d7360f392b5e8f168113eb6a2165fd1e73aac74676c22e14
e46d4788c2903c789482be51ddf3979b02e8609a69b7a7934397a4f61b77a584
f7e64b4912c26a749a66305dab0255854e084f29573efdb2a1a6b5697e0cc24c
ac695320408844f76681969c969e0275d52e6cb2963d14a04be4142add2eb5cc
4fbe3c36ab3ba8118424cd1b5ee454755f74a7dc9ff824e8f40eece2262d828c
f9f0e3bf22d9dab0bf876228f70558b89b7c79ab9bc64086cbe25903b0e9421a
98dec3d1b48ab8d980ef460fe592d2ff8abf66759d3f7810b480c31754ef8bfc
3eac6aeb6c0f23abc26279227886c50e1d96044d917a1f2fb8d55784bb92c8af
d829979763b94e21c71dc4c275b3cf21d83932e6e5b90862881794513cebb985
0ff0ab49eb500b799de3205840f2d197de0cf27b7da619cc288f720aba45b29f
a943fb4e5525a272d9a34c056539310e438d6409c8a0958027933b07f0a02c91
7cefe92d31e653461bd8de0a299b4149d027bbea9dec6ed10aae2cf9e19e9092
b652aca68ace4124e72866ef25362a44cd73202cf4f9322c672d853058685341
2189a0d4ad6d650b9aea041b8148febb8471d2e9fcc7417f5b0720030dd48e41
dd09a1b456ba64fe236d64c154457435d600443ccb3273d05866fe943ff5ae61
d55e98d30fee1cc4ee8f5abcd99ae05b5e2226676ae2f2f46111e7eed19022d9
73f5657c1319d92d069bc2e46d7fee169389cce9f68403641929229459eac9c6
bccb7d225d1a63813bb26b4cc5298a62eae15aba17c9b2343e65bf791cc47416
ac226cef60952a150f9f8fd23831919e08c8f34c03e4f2c6970a3ce9e6ed71e6
2ddd5a0b3fd7e72ec66ab9e661688453a734b722e7a38471466099d921e7059d
750541fd3e5fa4ac8829583658aba3f281f4b0ac639696aa2a0abc2e5d639ca8
771c3a9b649d5fe819097d78989f4f3741bf684d190814850ca47a0b8dd88d19
a941b45bc00717bac2e2e4c24af5aebc45d6b6040d71ef5bfd2bbe97b7989b93
aa2e4cdc3189962eade67b34d415e69b313bf17c37362edc73f5e05cafc187ce
e99cab1883fa503b665ba0a903784d5e24416c6ec57274d2218e61b7ab13afd2
6353805a3946a65ed70ef77e232dacc35676325807d09aaa3aa9f221bf0f01aa
72fb103dc9d08b2efd348309713cf41e522b66fca0b18653c431b4f8eac759ad
5ffdd11f564a1e216a8d66ecc7fe589b2331c30141c50151b7de3addc1347cd2
5bf1cb34a81498736c00b0d12a4f2701fb8b1dcf0a3f8c04cd8d62bc4f869b3b
744c5db0aed223bb30429797d3ed074cec189dc4dea01ddf15c617390521067a
0541193146fcf1e23b45aee61e5a32ad703cddd635c7c0ca7e55569cf541732d
2df45a7d93a2c2155ded1f027a66f54202d354dcc2938e571958f504fd38ba73
7c79632bc4a96980dc87029173d37a3d41b14fc334358ab6dfb61c8ec4564762
25a0b357b96c40809a50c6e89ad90b3bb18e040b22f32e95e5f17869aae30a98
7230b4261dbf4bfa339737150ddecbe1dc418b43cf098b3339c8e6c4fff8b1c6
4dd8f9a963d3f142ec963601e8c74c07c1d7233a7088e05a82598dc207696a4c
38f646de4b5f837a27849b4dec6f73a1ed782143b27a0ee62c2bd7c6d996857e
dcef727a52ca4965abaff2e92db5561c59a194327a52d82f9050de9b40d99289
27b7d4dffaae6065f1689b0f4797c697b0ab4fb79a41ddff7cd876dd9eab168b
8cec9a184691855e638ed87292c01c47815eaaf8307f05bd904f6762a17b548d
72edeff7d3bcb6e7eeec092290d2b0be8371153551340ffa126e3b9eb0a64b52
4b2e4f37a2b5183617a8aea49faa47fe2a62d006175b82919906a962b8fbbcf1
ecba88843c51abdfaf61606c1baa1045c1fb7b5efd8706c754265e994ea12b02
a6a90a1b205b209f3bcc92c87ba767ff95872f9255d505e3cbeb430641d38016
2b085e1c52f673a837654d170331883a6668830a308d8af54256667021deaf12
21600902b54b62a0766086558b4581e87aae27de92a0066dcadd837fdfd789fc
aaaea3e29f8ad359fc5ed0c19f5b17ed85d0c0119d1f6a55dfd0b7e243402dd1
f73660fa58df15f545b57226d871832a0efff04a28a8ee66ade17a55d8409c9f
97ad1dcd14b19949ad19fe57dc8b2e358fb687d6e03a88d205fa4018471fe3a4
9b96a20df19ccf8a23cb1af241c8fab31194884abcd64c439ec010dfa426c00a
d286e6c604bccde46c34de5a05bf80715dddd2c27e69580a7911166477a93fc1
618db3139da3fab6738b37a4f6e5c03b338b
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 39158280 55380996 1000 8000 8000 (readycardis.dvi)
@start /Fa 134[537 2[509 594 368 453 467 1[566 566 622
905 283 509 1[339 566 509 339 509 566 509 509 566 9[1106
2[792 622 807 1[751 2[993 3[427 823 856 723 1[836 792
1[823 8[566 3[566 1[566 1[566 1[339 396 3[453 453 40[{}42
1106.96 /CMTI10 rf /Fb 240[553 15[{}1 1106.96 /CMSY10
rf /Fc 132[636 1[672 2[672 707 495 502 524 2[636 707
1061 354 672 1[354 707 636 389 583 707 566 1[619 11[979
1[707 14[976 14[636 636 636 636 636 2[354 46[{}29 1106.96
/CMBX10 rf /Fd 134[789 1[1079 1[830 581 589 610 1[830
747 830 1245 415 789 1[415 830 747 457 682 830 664 830
726 13[830 1115 1[1021 6[557 5[1079 1[1128 10[747 747
747 747 747 747 3[498 45[{}34 1328.35 /CMBX12 rf /Fe
134[736 1[1007 736 774 542 550 574 1[774 697 774 1162
387 736 1[387 774 697 426 639 774 620 774 678 11[1072
970 774 11[1096 2[1069 1007 992 1054 12[697 697 697 697
2[387 465 387 44[{}37 1212.12 /CMBX10 rf /Ff 131[1107
1[492 584 584 799 584 615 430 437 434 584 615 553 615
922 307 584 338 307 615 553 338 492 615 492 615 553 307
2[307 553 307 2[830 1138 830 830 799 615 815 861 753
861 830 1015 1[861 569 400 830 869 723 753 846 799 784
830 861 4[307 307 553 553 553 553 553 553 553 553 553
553 553 307 369 307 2[430 430 307 861 3[553 19[922 615
615 646 11[{}80 1106.96 /CMR10 rf /Fg 134[631 1[863 598
697 432 531 548 1[664 664 731 1063 332 2[399 2[399 598
664 598 1[664 8[966 1298 1[966 930 731 948 5[815 999
1[501 966 1005 1[881 18[664 1[664 1[399 1[399 44[{}34
1328.35 /CMTI12 rf /Fh 138[723 506 513 506 2[650 723
1[361 2[361 723 2[578 723 578 1[650 14[957 4[1192 813
1[668 6[939 20[361 46[{}19 1328.35 /CMR12 rf /Fi 134[946
3[996 697 707 732 2[897 996 1494 498 2[498 996 1[548
818 996 797 996 872 13[996 83[{}18 1594.02 /CMBX12 rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 109 4206 a Fi(Securit)-50 b(y)600 b(analysis)f(of)e(smartcard)j
(to)d(card)i(reader)g(comm)-50 b(unications)599 b(for)11681
6199 y(biometric)g(cardholder)g(authen)-50 b(tication)15906
9409 y Fh(Luciano)434 b(Rila)h(and)e(Chris)g(J.)h(Mitc)-36
b(hell)17899 10959 y Fg(Information)462 b(Se)-66 b(curity)464
b(Gr)-66 b(oup)14945 12509 y(R)g(oyal)465 b(Hol)66 b(loway,)465
b(University)e(of)i(L)-66 b(ondon)18845 14058 y(Surr)g(ey)465
b(TW20)f(0EX,)h(UK.)13880 15608 y Ff(luciano.rila@rh)-31
b(ul.ac.uk)374 b(and)c(c.mitc)-31 b(hell@rh)g(ul.ac.uk)0
19947 y Fe(Abstract)0 23939 y Ff(The)287 b(use)f(of)h(biometrics,)305
b(and)287 b(\014ngerprin)-31 b(t)287 b(recognition)i(in)0
25267 y(particular,)471 b(for)450 b(cardholder)g(authen)-31
b(tication)453 b(in)d(smart-)0 26596 y(card)640 b(systems)f(is)h(gro)
-31 b(wing)642 b(in)e(p)31 b(opularit)-31 b(y)-92 b(.)1307
b(In)639 b(suc)-31 b(h)0 27924 y(a)565 b(biometrics-based)h(cardholder)
f(authen)-31 b(tication)569 b(sys-)0 29252 y(tem,)365
b(sensitiv)-31 b(e)364 b(data)h(ma)-31 b(y)364 b(b)31
b(e)362 b(transferred)h(b)31 b(et)-31 b(w)g(een)364 b(the)0
30581 y(smartcard)500 b(and)h(the)f(card)g(reader.)884
b(In)499 b(this)i(pap)31 b(er)499 b(w)-31 b(e)0 31909
y(iden)g(tify)338 b(and)e(classify)h(p)31 b(ossible)336
b(threats)g(to)h(the)f(comm)-31 b(u-)0 33237 y(nications)379
b(link)f(b)31 b(et)-31 b(w)g(een)378 b(card)f(and)h(card)f(reader)g
(during)0 34566 y(cardholder)369 b(authen)-31 b(tication.)496
b(W)-92 b(e)368 b(also)i(analyse)g(the)f(im-)0 35894
y(pact)378 b(of)f(these)g(threats.)516 b(W)-92 b(e)377
b(consider)g(\014v)-31 b(e)377 b(di\013eren)-31 b(t)377
b(ar-)0 37222 y(c)-31 b(hitectures)456 b(and)f(use)f(the)h(threat)h
(analysis)g(to)g(indicate)0 38551 y(the)305 b(relativ)-31
b(e)307 b(securit)-31 b(y)305 b(of)g(the)g(v)-61 b(arious)305
b(p)31 b(ossible)305 b(arc)-31 b(hitec-)0 39879 y(tures.)0
45420 y Fd(1)1495 b(In)-42 b(tro)42 b(duction)0 49412
y Fe(1.1)1394 b(Biometrics)464 b(and)h(smartcards)0 53403
y Ff(Biometrics)419 b(has)e(b)31 b(een)416 b(widely)j(recognised)f(as)f
(a)g(p)31 b(o)-31 b(w)g(er-)0 54731 y(ful)470 b(to)31
b(ol)472 b(for)d(problems)i(requiring)f(p)31 b(ersonal)470
b(iden)-31 b(ti\014ca-)0 56060 y(tion.)704 b(Most)439
b(automated)j(iden)-31 b(tit)g(y)442 b(authen)-31 b(tication)443
b(sys-)0 57388 y(tems)367 b(in)g(use)f(to)31 b(da)-31
b(y)368 b(rely)e(on)h(either)g(the)f(p)31 b(ossession)366
b(of)i(a)0 58716 y(tok)-31 b(en)306 b(\(magnetic)i(card,)318
b(USB)305 b(tok)-31 b(en\))307 b(or)e(the)h(kno)-31 b(wledge)0
60045 y(of)485 b(a)f(secret)g(\(passw)-31 b(ord,)514
b(PIN\))484 b(to)h(establish)g(the)g(iden-)0 61373 y(tit)-31
b(y)364 b(of)e(an)g(individual.)492 b(The)362 b(main)h(problem)g(with)g
(these)0 62702 y(traditional)390 b(approac)-31 b(hes)388
b(to)g(iden)-31 b(tit)g(y)390 b(authen)-31 b(tication)391
b(is)0 64030 y(that)475 b(tok)-31 b(ens)474 b(or)g(PIN/passw)-31
b(ords)474 b(can)g(b)31 b(e)473 b(lost,)501 b(stolen,)0
65358 y(forgotten,)427 b(misplaced,)f(guessed,)f(or)413
b(willingly)k(giv)-31 b(en)415 b(to)0 66687 y(an)d(unauthorised)h(p)31
b(erson.)620 b(Biometric)413 b(authen)-31 b(tication,)0
68015 y(on)398 b(the)h(other)f(hand,)407 b(is)398 b(based)g(on)g(ph)-31
b(ysiological)402 b(or)c(b)31 b(e-)0 69343 y(ha)-31 b(vioural)457
b(c)-31 b(haracteristics)456 b(of)g(the)f(individual,)479
b(suc)-31 b(h)455 b(as)0 70672 y(\014ngerprin)-31 b(ts,)403
b(and)397 b(therefore)f(do)31 b(es)395 b(not)i(su\013er)e(from)i(the)0
72000 y(disadv)-61 b(an)-31 b(tages)371 b(of)f(the)f(traditional)k
(metho)31 b(ds.)26800 19947 y(In)445 b(parallel,)467
b(smartcards)446 b(ha)-31 b(v)g(e)446 b(steadily)h(b)31
b(ecome)446 b(more)26800 21276 y(p)31 b(opular.)479 b(Their)327
b(increasing)h(storage)f(capacit)-31 b(y)329 b(and)e(pro-)26800
22604 y(cessing)467 b(capabilities)i(ha)-31 b(v)g(e)467
b(enabled)h(their)e(deplo)-31 b(ymen)g(t)26800 23932
y(in)505 b(a)h(widening)g(range)g(of)f(applications,)542
b(v)-61 b(arying)506 b(from)26800 25261 y(supp)31 b(ort)402
b(for)h(PKI)g(to)g(decen)-31 b(tralised)404 b(systems)e(requiring)26800
26589 y(o\013-line)574 b(transactions)h([1)q(,)e(2,)h(3].)1105
b(Generally)574 b(an)-31 b(y)574 b(ap-)26800 27918 y(plication)k(using)
e(smartcards)f(requires)g(a)g(metho)31 b(d)577 b(for)26800
29246 y(cardholder)247 b(authen)-31 b(tication,)275 b(and)247
b(biometrics-based)h(au-)26800 30574 y(then)-31 b(tication)300
b(has)c(emerged)h(as)g(an)g(appropriate)g(tec)-31 b(hnol-)26800
31903 y(ogy)-92 b(.)26800 34559 y(Com)-31 b(bining)389
b(the)e(securit)-31 b(y)387 b(of)g(biometrics)h(and)e(the)h(com-)26800
35888 y(puting)485 b(p)31 b(o)-31 b(w)g(er)484 b(of)g(a)h(smartcard)f
(is)f(a)h(v)-31 b(ery)484 b(elegan)-31 b(t)486 b(so-)26800
37216 y(lution)568 b(to)f(cardholder)g(authen)-31 b(tication.)1089
b(On)566 b(the)h(one)26800 38544 y(hand)549 b(biometrics)h(can)e(pro)
-31 b(vide)550 b(the)f(lev)-31 b(el)549 b(of)g(securit)-31
b(y)26800 39873 y(required)416 b(b)-31 b(y)417 b(applications)i(using)e
(smartcards.)635 b(On)417 b(the)26800 41201 y(other)382
b(hand,)j(smartcards)d(enable)g(the)g(biometrics)h(tec)-31
b(h-)26800 42529 y(nology)285 b(b)-31 b(y)283 b(o\013ering)g(a)g
(secure)f(and)h(p)31 b(ortable)284 b(w)-31 b(a)g(y)284
b(of)g(stor-)26800 43858 y(ing)338 b(the)f(biometrics)h(template,)346
b(whic)-31 b(h)338 b(w)-31 b(ould)339 b(otherwise)26800
45186 y(need)315 b(to)i(b)31 b(e)315 b(stored)h(in)f(a)h(cen)-31
b(tral)317 b(database.)476 b(Fingerprin)-31 b(t)26800
46514 y(recognition)325 b(app)31 b(ears)322 b(particularly)j
(appropriate)f(for)e(use)26800 47843 y(in)369 b(biometric)i(systems)e
(using)h(smartcards.)26800 50500 y(A)761 b(smartcard)h(system)g(is)g
(comp)31 b(osed)762 b(of)g(t)-31 b(w)g(o)764 b(main)26800
51828 y(ph)-31 b(ysical)541 b(units:)835 b(the)540 b(smartcard)g
(itself)i(and)e(the)g(card)26800 53156 y(reader.)1132
b(In)582 b(biometrics-based)i(cardholder)f(authen)-31
b(ti-)26800 54485 y(cation,)515 b(transmission)486 b(of)f(sensitiv)-31
b(e)485 b(data)h(b)31 b(et)-31 b(w)g(een)486 b(the)26800
55813 y(smartcard)272 b(and)f(the)h(card)f(reader)g(ma)-31
b(y)272 b(o)31 b(ccur)271 b(dep)31 b(ending)26800 57141
y(on)337 b(ho)-31 b(w)337 b(the)g(biometric)h(system)e(is)h
(distributed)g(b)31 b(et)-31 b(w)g(een)26800 58470 y(these)302
b(t)-31 b(w)g(o)304 b(units.)471 b(In)302 b(this)h(pap)31
b(er,)316 b(w)-31 b(e)302 b(consider)h(the)f(secu-)26800
59798 y(rit)-31 b(y)361 b(issues)e(asso)31 b(ciated)362
b(with)f(the)f(comm)-31 b(unications)364 b(link)26800
61126 y(b)31 b(et)-31 b(w)g(een)417 b(the)g(smartcard)g(and)f(the)h
(card)f(reader)g(during)26800 62455 y(the)283 b(biometrics-based)h
(cardholder)f(authen)-31 b(tication)286 b(pro-)26800
63783 y(cess.)26800 66440 y(Before)538 b(w)-31 b(e)537
b(set)h(out)g(the)f(ob)61 b(jectiv)-31 b(es)540 b(of)e(this)g(pap)31
b(er)537 b(in)26800 67768 y(detail,)283 b(it)260 b(is)f(imp)31
b(ortan)-31 b(t)261 b(to)f(clarify)g(the)f(biometrics-based)26800
69096 y(cardholder)369 b(authen)-31 b(tication)373 b(pro)31
b(cess.)p eop
%%Page: 2 2
2 1 bop 0 1107 a Fe(1.2)1394 b(General)936 b(mo)39 b(del)936
b(for)g(biometric)g(au-)3175 2435 y(then)-39 b(tication)0
6387 y Ff(According)314 b(to)f([4)q(],)324 b(a)313 b(general)h
(biometric)g(system)f(is)f(com-)0 7716 y(p)31 b(osed)369
b(of)h(the)f(follo)-31 b(wing)373 b(logical)f(mo)31 b(dules:)799
11192 y(1.)555 b(Data)370 b(collection)i(subsystem;)799
13373 y(2.)555 b(Signal)371 b(pro)31 b(cessing)369 b(subsystem;)799
15554 y(3.)555 b(Matc)-31 b(hing)371 b(subsystem;)799
17735 y(4.)555 b(Storage)370 b(subsystem;)799 19916 y(5.)555
b(Decision)370 b(subsystem;)799 22097 y(6.)555 b(T)-92
b(ransmission)370 b(subsystem.)0 25574 y(The)522 b(data)h(collection)h
(subsystem)d(con)-31 b(tains)523 b(the)f(input)0 26902
y(device)437 b(or)g(sensor)f(that)i(captures)f(the)h(biometric)g
(infor-)0 28230 y(mation)511 b(from)e(the)g(user.)911
b(It)508 b(is)h(the)g(link)h(b)31 b(et)-31 b(w)g(een)510
b(the)0 29559 y(ph)-31 b(ysical)460 b(domain)g(and)f(the)f(logical)k
(domain.)762 b(The)458 b(sig-)0 30887 y(nal)452 b(pro)31
b(cessing)451 b(subsystem)g(receiv)-31 b(es)452 b(the)f(ra)-31
b(w)452 b(biomet-)0 32215 y(ric)341 b(data)i(from)e(the)h(data)g
(collection)i(subsystem)d(and)h(ex-)0 33544 y(tracts)283
b(the)g(distinguishing)i(features)e(from)h(the)f(ra)-31
b(w)283 b(data,)0 34872 y(transforming)510 b(it)g(in)-31
b(to)510 b(the)e(form)i(required)e(for)g(matc)-31 b(h-)0
36200 y(ing.)463 b(The)278 b(matc)-31 b(hing)280 b(subsystem)d(receiv)
-31 b(es)278 b(the)g(pro)31 b(cessed)0 37529 y(data)292
b(from)f(the)g(signal)h(pro)31 b(cessing)291 b(subsystem)f(and)h(com-)0
38857 y(pares)363 b(it)i(with)h(the)e(biometric)i(template)g(retriev)
-31 b(ed)364 b(from)0 40185 y(the)545 b(storage)h(subsystem.)1020
b(The)546 b(matc)-31 b(hing)547 b(subsystem)0 41514 y(measures)412
b(the)h(similarit)-31 b(y)415 b(of)e(the)f(submitted)i(biometric)0
42842 y(sample)468 b(with)h(an)e(enrolled)h(reference)f(template.)789
b(Eac)-31 b(h)0 44170 y(comparison)360 b(yields)g(a)f(score,)i(whic)-31
b(h)360 b(is)f(a)h(n)-31 b(umeric)359 b(v)-61 b(alue)0
45499 y(indicating)266 b(ho)-31 b(w)265 b(closely)f(the)g(submitted)h
(sample)f(and)g(the)0 46827 y(reference)414 b(template)k(matc)-31
b(h.)633 b(The)416 b(decision)g(subsystem)0 48156 y(receiv)-31
b(es)265 b(the)g(score)f(from)h(the)g(matc)-31 b(hing)267
b(subsystem)e(and,)0 49484 y(using)329 b(a)f(con\014dence)g(v)-61
b(alue)329 b(based)f(on)g(securit)-31 b(y)329 b(risks)f(and)0
50812 y(risk)470 b(p)31 b(olicy)-92 b(,)498 b(in)-31
b(terprets)470 b(the)h(result)g(of)g(the)g(score,)496
b(th)-31 b(us)0 52141 y(reac)g(hing)387 b(an)e(authen)-31
b(tication)390 b(decision.)542 b(The)386 b(transmis-)0
53469 y(sion)497 b(subsystem)g(pro)-31 b(vides)497 b(the)g(system)g
(the)g(abilit)-31 b(y)499 b(to)0 54797 y(exc)-31 b(hange)300
b(information)h(b)31 b(et)-31 b(w)g(een)300 b(all)g(other)f
(subsystems.)0 56126 y(Figure)346 b(1)g(sho)-31 b(ws)347
b(a)f(blo)31 b(c)-31 b(k)347 b(diagram)h(for)e(the)g(general)h(bio-)0
57454 y(metric)370 b(authen)-31 b(tication)373 b(mo)31
b(del.)0 60111 y(Note)442 b(that)f(these)g(are)f(logical)j(mo)31
b(dules,)460 b(and)441 b(therefore)0 61439 y(some)313
b(systems)g(ma)-31 b(y)313 b(in)-31 b(tegrate)315 b(sev)-31
b(eral)313 b(of)g(these)g(comp)31 b(o-)0 62767 y(nen)-31
b(ts)369 b(in)-31 b(to)371 b(one)e(ph)-31 b(ysical)371
b(unit.)0 66720 y Fe(1.3)1394 b(Scop)39 b(e)465 b(and)g(purp)39
b(ose)0 70672 y Ff(In)443 b(this)h(pap)31 b(er)443 b(w)-31
b(e)444 b(fo)31 b(cus)443 b(on)h(the)f(securit)-31 b(y)444
b(issues)f(asso-)0 72000 y(ciated)531 b(with)g(the)f(comm)-31
b(unications)533 b(link)e(b)31 b(et)-31 b(w)g(een)531
b(the)26800 1107 y(smartcard)485 b(and)g(the)g(card)f(reader)g(during)h
(\014ngerprin)-31 b(t-)26800 2435 y(based)463 b(cardholder)g(authen)-31
b(tication.)779 b(PIN-based)463 b(card-)26800 3764 y(holder)379
b(authen)-31 b(tication)382 b(has)d(b)31 b(een)378 b(w)-31
b(ell)380 b(researc)-31 b(hed)378 b(and)26800 5092 y(understo)31
b(o)g(d,)304 b(giving)290 b(rise)d(to)i(a)f(v)-61 b(ariet)-31
b(y)288 b(of)h(industry)e(stan-)26800 6420 y(dards,)332
b(suc)-31 b(h)323 b(as)g([5)q(,)h(6,)g(7].)478 b(Encryption)324
b(is)f(t)-31 b(ypically)326 b(used)26800 7749 y(to)542
b(pro)-31 b(vide)542 b(securit)-31 b(y)541 b(for)g(PINs)g(during)g
(transmission,)26800 9077 y(either)417 b(from)h(the)f(k)-31
b(eypad)418 b(to)g(the)g(card)f(\(for)g(lo)31 b(cal)419
b(card-)26800 10405 y(holder)h(authen)-31 b(tication\))424
b(or)419 b(from)i(the)e(k)-31 b(eypad)421 b(to)g(a)e(re-)26800
11734 y(mote)374 b(serv)-31 b(er)372 b(\(for)h(remote)h(authen)-31
b(tication)377 b(of)c(the)g(card-)26800 13062 y(holder\).)26800
15719 y(Ho)-31 b(w)g(ev)g(er,)312 b(for)295 b(the)h(purp)31
b(oses)294 b(of)i(our)f(analysis,)312 b(w)-31 b(e)295
b(do)h(not)26800 17047 y(mak)-31 b(e)532 b(an)-31 b(y)533
b(assumptions)f(ab)31 b(out)532 b(encryption)g(or)f(other)26800
18376 y(cryptographic)603 b(protection)h(of)e(the)g(card/card)g(reader)
26800 19704 y(comm)-31 b(unications)251 b(link.)453 b(This)249
b(is)e(b)31 b(ecause,)272 b(whereas)248 b(PINs)26800
21032 y(are)508 b(v)-31 b(ery)508 b(short,)543 b(biometric)509
b(samples,)544 b(e.g.)509 b(\014ngerprin)-31 b(t)26800
22361 y(images,)586 b(are)541 b(rather)g(large,)585 b(and)541
b(the)h(limited)h(compu-)26800 23689 y(tational)552 b(and)d(storage)h
(capabilities)i(of)e(the)f(card)g(ma)-31 b(y)26800 25017
y(sev)g(erely)369 b(limit)j(the)d(p)31 b(ossibilities)371
b(for)e(suc)-31 b(h)369 b(protection.)26800 27674 y(Giv)-31
b(en)594 b(our)f(fo)31 b(cus)594 b(on)f(card/reader)h(comm)-31
b(unications,)26800 29002 y(and)358 b(the)f(ob)61 b(jectiv)-31
b(e)360 b(of)e(assessing)f(the)g(b)31 b(est)357 b(lev)-31
b(el)359 b(of)f(in)-31 b(te-)26800 30331 y(gration)268
b(of)f(the)f(biometric)i(tec)-31 b(hnology)-92 b(,)290
b(w)-31 b(e)267 b(mak)-31 b(e)267 b(certain)26800 31659
y(other)342 b(simplifying)i(assumptions.)485 b(W)-92
b(e)341 b(assume)h(that)h(the)26800 32987 y(smartcard)420
b(is)f(a)h(tamp)31 b(er-pro)g(of)420 b(device)g(and)g(an)-31
b(y)420 b(trans-)26800 34316 y(mission)490 b(b)31 b(et)-31
b(w)g(een)489 b(biometric)i(system)e(mo)31 b(dules)489
b(taking)26800 35644 y(place)321 b(within)h(the)e(card)g(is)h
(therefore)f(secure.)475 b(W)-92 b(e)320 b(do)g(not)26800
36972 y(discuss)353 b(the)g(impact)j(of)e(using)g(fak)-31
b(e)354 b(biometrics,)359 b(suc)-31 b(h)353 b(as)26800
38301 y(plastic)441 b(\014ngers,)457 b(to)440 b(fo)31
b(ol)441 b(the)e(system,)458 b(although)442 b(it)e(w)-31
b(as)26800 39629 y(sho)g(wn)411 b(in)g([8)q(])g(that)i(this)e(is)f(a)h
(p)31 b(ossible)412 b(attac)-31 b(k)413 b(with)f(the)26800
40958 y(curren)-31 b(t)342 b(tec)-31 b(hnology)-92 b(.)486
b(W)-92 b(e)341 b(feel)i(that)g(this)g(issue)e(concerns)26800
42286 y(\014ngerprin)-31 b(t-based)560 b(biometric)h(tec)-31
b(hnology)562 b(in)e(a)f(wider)26800 43614 y(sense)407
b(and)g(is)h(therefore)f(b)31 b(ey)-31 b(ond)408 b(the)g(scop)31
b(e)407 b(of)h(our)g(dis-)26800 44943 y(cussion.)26800
47599 y(In)271 b(previous)i(related)f(w)-31 b(ork)273
b([9)q(],)292 b(a)272 b(n)-31 b(um)g(b)31 b(er)272 b(of)h(w)-31
b(eaknesses)26800 48928 y(in)339 b(the)g(biometric)h(system)f(mo)31
b(del)339 b(ha)-31 b(v)g(e)340 b(b)31 b(een)338 b(iden)-31
b(ti\014ed,)26800 50256 y(and)477 b(coun)-31 b(termeasures)478
b(suggested.)816 b(Ho)-31 b(w)g(ev)g(er,)506 b(in)478
b(that)26800 51584 y(analysis)472 b(no)g(assumptions)g(as)f(to)h(the)g
(actual)h(arc)-31 b(hitec-)26800 52913 y(ture)536 b(of)h(the)g(system)g
(are)f(made,)580 b(and)536 b(the)h(analysis)h(is)26800
54241 y(rather)284 b(general)h(in)f(nature.)464 b(By)284
b(con)-31 b(trast,)303 b(the)284 b(main)h(pur-)26800
55569 y(p)31 b(ose)493 b(of)g(this)h(pap)31 b(er)492
b(is)h(to)h(understand)f(what)h(securit)-31 b(y)26800
56898 y(gains)421 b(can)g(b)31 b(e)420 b(made)h(from)g(the)g(v)-61
b(arious)420 b(p)31 b(ossible)421 b(lev)-31 b(els)26800
58226 y(of)314 b(in)-31 b(tegration)317 b(of)e(the)f(biometric)i
(system)e(on)g(the)g(smart-)26800 59554 y(card.)26800
62211 y(Dep)31 b(ending)457 b(on)g(ho)-31 b(w)458 b(the)f(logical)j(mo)
31 b(dules)457 b(of)h(the)f(bio-)26800 63540 y(metric)510
b(system)g(are)f(distributed)h(b)31 b(et)-31 b(w)g(een)510
b(the)f(smart-)26800 64868 y(card)248 b(and)h(the)g(card)g(reader,)272
b(di\013eren)-31 b(t)249 b(threats)g(ma)-31 b(y)250 b(arise.)26800
66196 y(W)-92 b(e)373 b(consider)h(\014v)-31 b(e)375
b(scenarios)f(for)g(the)h(biometric)h(system)26800 67525
y(and,)365 b(for)e(eac)-31 b(h)364 b(scenario,)i(w)-31
b(e)363 b(iden)-31 b(tify)365 b(and)f(classify)g(p)31
b(os-)26800 68853 y(sible)365 b(threats)h(to)f(the)h(comm)-31
b(unications)368 b(link)e(and)f(assess)26800 70181 y(the)398
b(impact)i(of)f(these)f(threats.)579 b(In)398 b(all)h(scenarios)f(w)-31
b(e)399 b(as-)26800 71510 y(sume)309 b(that)h(the)f(smartcard)h(stores)
e(the)h(template)i(for)f(the)p eop
%%Page: 3 3
3 2 bop 2580 32816 a @beginspecial 0 @llx 0 @lly 842
@urx 595 @ury 4179 @rwi @setspecial
%%BeginDocument: bioautfigure1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - bioautfigure1.ppt)
%%Version: 1 3
%%Creator: (Pscript.dll Version 5.0)
%%CreationDate: (D:20020522154742+02'00')
%%For: (HORN)
%%DocumentData: Clean7Bit
%%BoundingBox: 0 0 842 595
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
0 0 moveto 842 0 lineto 842 595 lineto 0 595 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Helvetica
[/N10/Helvetica 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 842 595 rectclip
[ 0 -1 1 0 0 595 ] concat
/N11 [/DeviceRGB] /ColorSpace defineRes pop

false setSA
n
28.44 776.937 539.955 -719.94 re
1 1 1 setrgbcolor
f
n
196.546 241.542 35.877 -88.553 re
f
0 0 0  setrgbcolor
215.984 162.589 m
/N10 [0 15.9891 -15.9891 0 0 0] Tf
(Rawdata)
[11.5295 8.87554 15.7186 8.99866 8.87554 4.56009 8.87554 ] pdfys
n
183.827 440.845 48.596 -95.992 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
202.905 359.012 m
(Extracted)
[10.5591 7.55963 4.55207 5.43136 8.99704 7.91938 4.55207 8.87872 8.99704 ] pdfys
221.744 363.812 m
(features)
[4.44018 8.87875 8.99387 4.44018 8.99387 5.42819 8.99387 8.09849 ] pdfys
n
196.546 704.703 35.877 -95.992 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
215.984 623.11 m
(Template)
[9.95952 8.99869 12.7192 8.99869 3.83877 8.99869 4.4402 9.08024 ] pdfys
n
388.41 432.806 47.996 -131.749 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
407.488 316.056 m
(Authentication)
[10.559 8.99859 4.4401 8.99859 8.87867 8.99859 4.20026 3.83867 7.91933 8.99859 4.20026 
3.83867 8.87867 8.64523 ] pdfys
426.087 337.534 m
(decision)
[8.96679 8.87885 8.0714 3.83885 7.67967 3.83885 8.63901 8.96679 ] pdfys
2 J
0 j
0.959 w
10 M
[] 0 d
n
211.305 61.197 m
196.906 153.589 l
268.18 153.589 l
268.18 61.197 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
228.703 90.5946 m
(Data)
[11.5278 8.99855 4.42887 8.87384 ] pdfys
247.301 73.9163 m
(collection)
[8.08726 8.98265 3.47896 3.83872 8.98265 7.91938 4.20031 3.83872 8.63888 8.98265 ] pdfys
n
164.628 308.736 m
292.178 220.424 l
292.178 397.049 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
242.862 286.298 m
(Signal)
[10.5592 3.83883 8.99875 8.99875 8.639 3.65815 ] pdfys
261.341 269.74 m
(processing)
[8.89311 5.51929 8.89311 7.99772 8.99864 7.91938 7.67954 3.83872 8.99864 8.89311 ] pdfys
n
184.427 532.638 m
232.663 456.564 l
281.019 532.638 l
232.663 608.711 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
225.823 500 m
(Matching)
[13.079 8.99867 4.44018 8.03933 8.99867 3.83875 8.87876 8.65011 ] pdfys
n
183.827 736.741 m
184.067 728.701 l
184.427 721.022 l
185.387 714.063 l
186.347 708.303 l
187.907 703.144 l
188.626 701.224 l
189.226 699.664 l
190.186 698.344 l
191.746 696.784 l
192.706 696.424 l
247.422 696.424 l
248.381 696.784 l
249.341 697.384 l
249.941 698.344 l
250.901 699.664 l
251.621 701.224 l
252.221 703.144 l
253.781 708.303 l
254.741 714.063 l
255.701 721.022 l
256.061 728.701 l
256.421 736.741 l
256.061 744.66 l
255.701 752.339 l
254.741 759.059 l
253.781 764.818 l
252.221 769.978 l
251.621 771.898 l
250.901 773.458 l
249.941 774.778 l
249.341 775.738 l
248.381 776.337 l
247.422 776.697 l
192.706 776.697 l
191.746 776.337 l
190.186 774.778 l
189.226 773.458 l
188.626 771.898 l
187.907 769.978 l
186.347 764.818 l
185.387 759.059 l
184.427 752.339 l
184.067 744.66 l
183.827 736.741 l
1 1 1  setrgbcolor
eofill
n
192.706 696.424 m
193.666 696.784 l
194.626 697.384 l
195.586 698.344 l
196.306 699.664 l
197.266 701.224 l
197.866 703.144 l
199.426 708.303 l
200.385 714.063 l
201.345 721.022 l
201.705 728.701 l
201.945 736.741 l
201.705 744.66 l
201.345 752.339 l
200.385 759.059 l
199.426 764.818 l
197.866 769.978 l
197.266 771.898 l
196.306 773.458 l
195.586 774.778 l
194.626 775.738 l
193.666 776.337 l
192.706 776.697 l
191.746 776.337 l
190.186 774.778 l
189.226 773.458 l
188.626 771.898 l
187.907 769.978 l
186.347 764.818 l
185.387 759.059 l
184.427 752.339 l
184.067 744.66 l
183.827 736.741 l
184.067 728.701 l
184.427 721.022 l
185.387 714.063 l
186.347 708.303 l
187.907 703.144 l
188.626 701.224 l
189.226 699.664 l
190.186 698.344 l
191.746 696.784 l
192.706 696.424 l
eofill
q
n
174.828 687.425 90.712 89.513 re
W
n
n
183.827 736.741 m
184.067 728.701 l
184.427 721.022 l
185.387 714.063 l
186.347 708.303 l
187.907 703.144 l
188.626 701.224 l
189.226 699.664 l
190.186 698.344 l
191.746 696.784 l
192.706 696.424 l
247.422 696.424 l
248.381 696.784 l
249.341 697.384 l
249.941 698.344 l
250.901 699.664 l
251.621 701.224 l
252.221 703.144 l
253.781 708.303 l
254.741 714.063 l
255.701 721.022 l
256.061 728.701 l
256.421 736.741 l
256.061 744.66 l
255.701 752.339 l
254.741 759.059 l
253.781 764.818 l
252.221 769.978 l
251.621 771.898 l
250.901 773.458 l
249.941 774.778 l
249.341 775.738 l
248.381 776.337 l
247.422 776.697 l
192.706 776.697 l
191.746 776.337 l
190.186 774.778 l
189.226 773.458 l
188.626 771.898 l
187.907 769.978 l
186.347 764.818 l
185.387 759.059 l
184.427 752.339 l
184.067 744.66 l
183.827 736.741 l
h
0 0 0  setrgbcolor
S
Q
q
n
183.707 687.425 27.358 89.513 re
W
n
n
192.706 696.424 m
193.666 696.784 l
194.626 697.384 l
195.586 698.344 l
196.306 699.664 l
197.266 701.224 l
197.866 703.144 l
199.426 708.303 l
200.385 714.063 l
201.345 721.022 l
201.705 728.701 l
201.945 736.741 l
201.705 744.66 l
201.345 752.339 l
200.385 759.059 l
199.426 764.818 l
197.866 769.978 l
197.266 771.898 l
196.306 773.458 l
195.586 774.778 l
194.626 775.738 l
193.666 776.337 l
192.706 776.697 l
0 0 0  setrgbcolor
S
Q
0 0 0  setrgbcolor
219.104 708.543 m
(Storage)
[10.5592 4.56018 8.87883 5.39949 8.99875 8.99875 8.99875 ] pdfys
n
304.297 540.917 36.117 -71.874 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
323.735 478.642 m
(Score)
[10.5734 7.90331 8.99856 5.39929 8.79869 ] pdfys
n
364.172 501.92 m
364.412 500 l
364.772 498.441 l
365.732 496.761 l
367.052 495.201 l
368.611 493.881 l
370.171 492.921 l
371.851 492.681 l
373.771 492.321 l
410.848 492.321 l
412.768 492.681 l
414.328 492.921 l
415.888 493.881 l
417.567 495.201 l
419.487 498.441 l
419.727 500 l
420.087 501.92 l
420.087 575.474 l
419.727 577.394 l
419.487 579.074 l
417.567 582.194 l
414.328 584.114 l
412.768 584.473 l
410.848 584.833 l
373.771 584.833 l
371.851 584.473 l
370.171 584.114 l
367.052 582.194 l
365.732 580.634 l
364.772 579.074 l
364.412 577.394 l
364.172 575.474 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
386.37 507.68 m
(Decision)
[11.4927 8.9986 7.94332 3.83867 7.6795 3.83867 8.9986 8.8387 ] pdfys
n
364.412 136.671 59.995 104.511 re
q
1 1 1  setrgbcolor
eofill
Q
S
384.21 149.39 m
(Application)
[10.559 8.99862 8.99862 3.47894 3.83869 8.03927 8.8787 4.20029 3.83869 8.99862 9.17929 
] pdfys
n
232.423 443.365 m
232.423 357.092 l
S
n
237.822 442.765 m
232.663 452.964 l
227.263 442.765 l
eofill
n
232.423 152.989 m
232.423 251.501 l
S
n
237.822 250.781 m
232.663 261.1 l
227.263 250.781 l
eofill
n
280.299 536.837 m
354.573 536.837 l
S
n
353.853 531.678 m
364.412 536.837 l
353.853 542.237 l
eofill
n
232.423 692.944 m
232.423 618.311 l
S
n
227.263 619.271 m
232.663 609.071 l
237.822 619.271 l
eofill
n
388.17 488.841 m
388.17 258.461 l
S
n
383.01 259.421 m
388.17 248.861 l
393.569 259.421 l
eofill
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Helvetica
%%EOF

%%EndDocument
 @endspecial 12714 35252 a Ff(Figure)369 b(1:)493 b(General)369
b(mo)31 b(del)370 b(for)g(biometric)g(authen)-31 b(tication.)0
38788 y(cardholder)380 b(\014ngerprin)-31 b(t.)525 b(W)-92
b(e)379 b(also)i(assume)f(throughout)0 40116 y(that)419
b(\014ngerprin)-31 b(t)418 b(recognition)i(is)e(used)f(as)h(a)g(metho)
31 b(d)418 b(of)0 41445 y(cardholder)369 b(authen)-31
b(tication)373 b(to)d(the)g(smartcard.)0 44101 y(In)437
b(Section)h(2)g(w)-31 b(e)438 b(describ)31 b(e)436 b(the)i(\014v)-31
b(e)437 b(biometric)j(system)0 45430 y(arc)-31 b(hitectures)487
b(considered)g(in)f(this)h(pap)31 b(er.)845 b(In)486
b(Section)0 46758 y(3,)589 b(w)-31 b(e)544 b(discuss)f(the)i(sources)e
(of)h(comm)-31 b(unications)548 b(link)0 48086 y(threats)464
b(and)f(then)h(iden)-31 b(tify)465 b(and)f(classify)g(the)g(p)31
b(ossible)0 49415 y(threats.)743 b(In)451 b(Section)j(4,)474
b(w)-31 b(e)453 b(assess)e(the)i(impact)h(of)f(the)0
50743 y(threats)478 b(iden)-31 b(ti\014ed)479 b(in)f(the)g(previous)g
(section.)819 b(Finally)-92 b(,)0 52071 y(w)-31 b(e)370
b(presen)-31 b(t)369 b(our)g(conclusions)h(in)f(Section)h(5.)0
58051 y Fd(2)1495 b(P)-42 b(ossible)683 b(biometric)f(system)g(scenar-)
2242 59600 y(ios)0 64030 y Ff(Fiv)-31 b(e)297 b(di\013eren)-31
b(t)297 b(scenarios)f(are)h(considered,)311 b(and)297
b(the)f(rela-)0 65358 y(tiv)-31 b(e)261 b(risks)e(asso)31
b(ciated)260 b(with)h(eac)-31 b(h)260 b(scenario)g(are)f(analysed.)0
66687 y(The)355 b(scenarios)g(co)-31 b(v)g(er)355 b(v)-61
b(arious)355 b(p)31 b(ossibilities)357 b(for)e(the)g(dis-)0
68015 y(tribution)289 b(of)f(the)g(mo)31 b(dules)288
b(of)g(the)f(biometric)j(system)d(b)31 b(e-)0 69343 y(t)-31
b(w)g(een)298 b(the)g(smartcard)f(and)h(the)f(card)g(reader.)468
b(Note)299 b(that)0 70672 y(in)337 b(all)h(cases)e(w)-31
b(e)337 b(assume)g(that)h(the)e(\014ngerprin)-31 b(t)338
b(template)0 72000 y(is)369 b(stored)g(in)h(the)f(smartcard.)26800
38788 y(The)g(scenarios)h(are)f(as)g(follo)-31 b(ws:)26800
42430 y Fc(S1.)554 b Ff(The)582 b(\014ngerprin)-31 b(t)582
b(sensor)e(is)i(built)g(in)-31 b(to)583 b(the)f(card)29014
43759 y(reader.)691 b(The)435 b(user)g(template)i(is)f(transferred)e
(from)29014 45087 y(card)560 b(to)g(reader.)1065 b(The)560
b(reader)f(tak)-31 b(es)561 b(the)f(image)29014 46415
y(pro)-31 b(vided)367 b(b)-31 b(y)366 b(its)h(built-in)h(\014ngerprin)
-31 b(t)366 b(sensor,)h(p)31 b(er-)29014 47744 y(forms)377
b(the)h(feature)f(extraction,)382 b(and)c(also)g(matc)-31
b(hes)29014 49072 y(the)515 b(features)g(to)g(the)g(template)i(pro)-31
b(vided)516 b(b)-31 b(y)515 b(the)29014 50401 y(card.)455
b(The)256 b(reader)g(then)g(informs)h(the)g(card)f(whether)29014
51729 y(or)369 b(not)h(authen)-31 b(tication)373 b(has)c(b)31
b(een)369 b(successful.)26800 53894 y Fc(S2.)554 b Ff(The)538
b(\014ngerprin)-31 b(t)538 b(sensor)e(is)i(built)h(in)-31
b(to)539 b(the)e(card.)29014 55223 y(The)548 b(\014ngerprin)-31
b(t)549 b(image)h(and)e(user)g(template)i(are)29014 56551
y(transferred)543 b(from)h(card)g(to)h(reader.)1015 b(The)544
b(reader)29014 57879 y(p)31 b(erforms)590 b(feature)g(extraction)i(and)
f(matc)-31 b(hing)592 b(of)29014 59208 y(features)441
b(to)h(the)f(template.)711 b(The)441 b(reader)f(then)i(in-)29014
60536 y(forms)471 b(the)h(card)f(whether)h(or)f(not)h(authen)-31
b(tication)29014 61864 y(has)369 b(b)31 b(een)369 b(successful.)26800
64030 y Fc(S3.)554 b Ff(The)582 b(\014ngerprin)-31 b(t)582
b(sensor)e(is)i(built)g(in)-31 b(to)583 b(the)f(card)29014
65358 y(reader.)859 b(The)492 b(reader)f(tak)-31 b(es)492
b(the)g(image)h(pro)-31 b(vided)29014 66687 y(b)g(y)372
b(the)f(built-in)i(\014ngerprin)-31 b(t)372 b(sensor)f(and)g(p)31
b(erforms)29014 68015 y(the)413 b(feature)g(extraction.)626
b(The)413 b(extracted)h(features)29014 69343 y(are)435
b(sen)-31 b(t)435 b(to)h(the)g(card,)452 b(whic)-31 b(h)436
b(then)g(p)31 b(erforms)435 b(the)29014 70672 y(matc)-31
b(hing)481 b(pro)31 b(cess)477 b(and)h(reac)-31 b(hes)478
b(the)g(authen)-31 b(tica-)29014 72000 y(tion)370 b(decision.)p
eop
%%Page: 4 4
4 3 bop 0 1107 a Fc(S4.)554 b Ff(The)538 b(\014ngerprin)-31
b(t)538 b(sensor)e(is)i(built)h(in)-31 b(to)539 b(the)e(card.)2214
2435 y(The)402 b(\014ngerprin)-31 b(t)403 b(image)h(is)e(transferred)f
(from)i(card)2214 3764 y(to)376 b(reader.)509 b(The)376
b(reader)e(p)31 b(erforms)375 b(feature)g(extrac-)2214
5092 y(tion)432 b(only)-92 b(,)447 b(and)432 b(transfers)e(the)h
(extracted)h(features)2214 6420 y(bac)-31 b(k)413 b(to)f(the)h(card.)
621 b(The)412 b(card)g(then)g(p)31 b(erforms)412 b(the)2214
7749 y(matc)-31 b(hing)372 b(pro)31 b(cess.)0 9812 y
Fc(S5.)554 b Ff(All)572 b(\014ngerprin)-31 b(t)572 b(pro)31
b(cessing)571 b(tak)-31 b(es)572 b(place)g(on)g(the)2214
11141 y(card.)0 14529 y(Figure)299 b(2)g(sho)-31 b(ws)299
b(the)g(\014rst)g(four)g(scenarios)g(and)g(their)g(cor-)0
15857 y(resp)31 b(onding)528 b(data)h(\015o)-31 b(w)529
b(during)g(biometric)h(cardholder)0 17186 y(authen)-31
b(tication.)467 b(T)-92 b(able)283 b(1)g(b)31 b(elo)-31
b(w)283 b(de\014nes)e(all)i(the)f(scenar-)0 18514 y(ios)355
b(in)f(terms)g(of)h(the)g(lo)31 b(cation)356 b(of)f(the)g(v)-61
b(arious)354 b(biometric)0 19842 y(mo)31 b(dules.)0 25227
y Fd(3)1495 b(Securit)-42 b(y)499 b(threats)0 29062 y
Ff(The)472 b(fo)31 b(cus)471 b(of)h(this)g(pap)31 b(er)471
b(is)h(on)g(the)f(comm)-31 b(unications)0 30390 y(link)360
b(b)31 b(et)-31 b(w)g(een)361 b(smartcard)e(and)h(card)f(reader,)i(and)
f(hence)0 31718 y(w)-31 b(e)278 b(only)g(consider)f(threats)g(that)h
(relate,)297 b(directly)278 b(or)f(indi-)0 33047 y(rectly)-92
b(,)299 b(to)282 b(this)f(link.)464 b(The)281 b(main)h(threats)f(to)h
(this)f(link)h(can)0 34375 y(b)31 b(e)276 b(divided)h(in)-31
b(to)278 b(threats)e(to)i(the)e(up-link)h(\(i.e.)h(smartcard)0
35704 y(to)342 b(reader\))g(and)g(do)-31 b(wn-link)344
b(\(i.e.)f(reader)e(to)h(smartcard\).)0 37032 y(The)369
b(threats)h(also)g(v)-61 b(ary)369 b(dep)31 b(ending)370
b(on)f(the)h(scenario.)0 39689 y(Note)423 b(that,)437
b(b)31 b(efore)421 b(iden)-31 b(tifying)425 b(the)d(threats)g(to)h(the)
f(up)0 41017 y(and)609 b(do)-31 b(wn)610 b(links,)670
b(w)-31 b(e)610 b(brie\015y)f(consider)f(the)i(p)31 b(ossible)0
42345 y(source)498 b(of)h(these)g(threats.)881 b(Also,)532
b(as)498 b(w)-31 b(ell)500 b(as)f(iden)-31 b(tify-)0
43674 y(ing)359 b(threats)f(to)h(the)f(up-link)g(and)h(do)-31
b(wn-link,)362 b(w)-31 b(e)359 b(brie\015y)0 45002 y(consider)292
b(threats)g(to)h(the)f(card)f(reader)g(itself.)468 b(This)293
b(is)e(b)31 b(e-)0 46330 y(cause)294 b(the)h(threats)g(to)g(the)f(card)
g(reader)g(indirectly)i(relate)0 47659 y(to)370 b(comm)-31
b(unications)373 b(link)d(protection)h(\(see)e(b)31 b(elo)-31
b(w\).)0 51494 y Fe(3.1)1394 b(Sources)1268 b(of)h(comm)-39
b(unications)1267 b(link)3175 52822 y(threats)0 56657
y Ff(There)311 b(w)-31 b(ould)313 b(app)31 b(ear)311
b(to)h(b)31 b(e)311 b(three)g(main)h(w)-31 b(a)g(ys)312
b(in)g(whic)-31 b(h)0 57985 y(an)330 b(attac)-31 b(k)g(er)331
b(could)f(in)-31 b(tercept)330 b(and/or)h(manipulate)h(data)0
59313 y(b)31 b(eing)370 b(transferred)e(b)31 b(et)-31
b(w)g(een)370 b(card)f(and)h(card)f(reader.)1107 62702
y Fb(\017)554 b Ff(The)388 b(card)h(reader)e(\(and/or)j(smartcard\))f
(ma)-31 b(y)390 b(emit)2214 64030 y(electromagnetic)433
b(signals)f(whic)-31 b(h)431 b(are)f(data)h(dep)31 b(en-)2214
65358 y(den)-31 b(t,)289 b(and)268 b(whic)-31 b(h)268
b(can)g(b)31 b(e)267 b(in)-31 b(tercepted)269 b(using)f(an)g(an-)2214
66687 y(tenna)389 b(lo)31 b(cated)389 b(close)g(to)f(the)h(reader.)548
b(Suc)-31 b(h)388 b(an)h(ap-)2214 68015 y(proac)-31 b(h)271
b(w)-31 b(ould)272 b(only)f(enable)g(passiv)-31 b(e)271
b(\(in)-31 b(terception\))2214 69343 y(rather)320 b(than)h(activ)-31
b(e)322 b(\(manipulation/replacemen)-31 b(t\))2214 70672
y(attac)g(ks.)481 b(The)329 b(seriousness)e(of)i(this)g(threat)g(dep)31
b(ends)2214 72000 y(on)369 b(the)h(design)f(of)h(smartcard)g(and)f
(card)g(reader.)27907 1107 y Fb(\017)554 b Ff(A)374 b(sp)31
b(ecial)374 b(in)-31 b(terception)376 b(device)f(could)f(b)31
b(e)374 b(inserted)29014 2435 y(in)-31 b(to)463 b(the)g(read)f(slot)g
(of)h(the)f(card)g(reader,)485 b(and)463 b(the)29014
3764 y(device)438 b(w)-31 b(ould)439 b(then)e(b)31 b(e)437
b(lo)31 b(cated)439 b(b)31 b(et)-31 b(w)g(een)438 b(an)-31
b(y)439 b(in-)29014 5092 y(serted)392 b(smartcard)h(and)g(the)f(card)h
(reader.)562 b(By)392 b(this)29014 6420 y(means,)537
b(and)503 b(without)i(an)-31 b(y)503 b(mo)31 b(di\014cations)505
b(to)f(the)29014 7749 y(card)569 b(reader,)619 b(b)31
b(oth)569 b(passiv)-31 b(e)570 b(and)f(activ)-31 b(e)571
b(attac)-31 b(ks)29014 9077 y(ma)g(y)596 b(b)31 b(e)595
b(realised.)1171 b(The)595 b(seriousness)f(of)i(suc)-31
b(h)594 b(a)29014 10405 y(threat)501 b(will)g(dep)31
b(end)500 b(on)g(a)g(v)-61 b(ariet)-31 b(y)501 b(of)g(factors)g(in-)
29014 11734 y(cluding)459 b(the)f(design)g(of)g(the)g(card)g(reader)f
(and)h(the)29014 13062 y(en)-31 b(vironmen)g(t)577 b(in)e(whic)-31
b(h)576 b(the)f(reader)f(itself)i(is)f(lo-)29014 14390
y(cated.)930 b(Observ)-31 b(e)514 b(that,)553 b(giv)-31
b(en)515 b(that)h(the)f(primary)29014 15719 y(threat)422
b(w)-31 b(ould)422 b(app)31 b(ear)422 b(to)g(arise)f(from)g(an)h(attac)
-31 b(k)g(er)29014 17047 y(equipp)31 b(ed)398 b(with)h(a)f(lost,)406
b(stolen)399 b(or)e(b)31 b(orro)-31 b(w)g(ed)398 b(card,)29014
18376 y(the)678 b(seriousness)e(of)j(this)f(threat)g(will)i(relate)e
(to)29014 19704 y(whether)367 b(or)g(not)g(use)g(of)g(the)g(card)g
(reader)f(is)h(sup)31 b(er-)29014 21032 y(vised)465 b(b)-31
b(y)466 b(trusted)f(p)31 b(ersonnel)465 b(\(who)h(migh)-31
b(t)467 b(detect)29014 22361 y(the)369 b(use)g(of)h(additional)i
(devices\).)27907 24991 y Fb(\017)554 b Ff(The)302 b(card)g(reader)g
(could)h(b)31 b(e)302 b(mo)31 b(di\014ed.)471 b(A)-31
b(t)303 b(the)f(sim-)29014 26319 y(plest)503 b(lev)-31
b(el)505 b(this)e(could)h(mean)g(the)f(insertion)h(of)f(a)29014
27647 y(`bug')390 b(designed)g(to)g(monitor)h(and)f(p)31
b(erhaps)388 b(mo)31 b(dify)29014 28976 y(data)313 b(comm)-31
b(unications.)478 b(\(See)312 b(also)h(Section)h(3.4)f(b)31
b(e-)29014 30304 y(lo)-31 b(w\).)26800 34380 y(W)-92
b(e)470 b(do)h(not)h(discuss)d(the)j(magnitude)g(of)g(these)e(threats)
26800 35708 y(further)449 b(here,)468 b(since)449 b(all)i(three)e
(threats)g(are)g(v)-31 b(ery)449 b(m)-31 b(uc)g(h)26800
37036 y(implemen)g(tation-dep)31 b(enden)-31 b(t)598
b(and)d(therefore)f(an)-31 b(y)594 b(fur-)26800 38365
y(ther)564 b(analysis)i(w)-31 b(ould)566 b(b)31 b(e)564
b(highly)i(sp)31 b(eculativ)-31 b(e.)1081 b(Ho)-31 b(w-)26800
39693 y(ev)g(er,)316 b(it)304 b(is)f(clear)g(that,)318
b(wherev)-31 b(er)302 b(p)31 b(ossible,)317 b(card)303
b(readers)26800 41021 y(should)422 b(b)31 b(e)421 b(designed)h(to)g
(minimise)h(these)f(threats,)435 b(par-)26800 42350 y(ticularly)485
b(if)f(sensitiv)-31 b(e)484 b(information)i(is)d(transferred)f(b)31
b(e-)26800 43678 y(t)-31 b(w)g(een)387 b(smartcard)g(and)f(reader)f
(without)j(cryptographic)26800 45006 y(protection.)26800
49200 y Fe(3.2)1394 b(Up-link)466 b(threats)26800 53393
y Ff(The)369 b(main)i(up-link)f(threats)g(are)f(as)g(follo)-31
b(ws:)26800 57468 y Fc(U1.)554 b Ff(\()p Fc(S1)281 b
Ff(and)f Fc(S2)g Ff(only\).)464 b(In)-31 b(terception)281
b(\(leading)h(to)f(loss)29014 58797 y(of)452 b(con\014den)-31
b(tialit)g(y\))455 b(of)d(the)g(user)e(\014ngerprin)-31
b(t)452 b(tem-)29014 60125 y(plate.)26800 62755 y Fc(U2.)554
b Ff(\()p Fc(S1)443 b Ff(and)f Fc(S2)g Ff(only\).)712
b(Manipulation)444 b(\(or)f(replace-)29014 64083 y(men)-31
b(t\))371 b(of)e(the)h(user)e(\014ngerprin)-31 b(t)370
b(template.)26800 66713 y Fc(U3.)554 b Ff(\()p Fc(S2)281
b Ff(and)f Fc(S4)g Ff(only\).)464 b(In)-31 b(terception)281
b(\(leading)h(to)f(loss)29014 68042 y(of)370 b(con\014den)-31
b(tialit)g(y\))373 b(of)d(the)f(\014ngerprin)-31 b(t)370
b(image.)26800 70672 y Fc(U4.)554 b Ff(\()p Fc(S2)443
b Ff(and)f Fc(S4)g Ff(only\).)712 b(Manipulation)444
b(\(or)f(replace-)29014 72000 y(men)-31 b(t\))371 b(of)e(the)h
(\014ngerprin)-31 b(t)369 b(image.)p eop
%%Page: 5 5
5 4 bop 0 22897 a @beginspecial 70 @llx 460 @lly 450
@urx 800 @ury 2275 @rwi @clip @setspecial
%%BeginDocument: scenario1b.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (\376\377)
%%Version: 1 2
%%Creator: (\376\377)
%%CreationDate: (D:20020919101820)
%%For: (\376\377)
%%DocumentData: Clean7Bit
%%BoundingBox: 0 0 596 842
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
0 0 moveto 596 0 lineto 596 842 lineto 0 842 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Arial,Bold
[/N10/Arial,Bold 1 TZ
%%IncludeResource Arial
[/N8/Arial 1 TZ
%%IncludeResource TimesNewRoman
[/N6/TimesNewRoman 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 596 842 rectclip
n
243.75 501 133.5 233.25 re
1 1 1 setrgbcolor
f
0.75 w
1 J
1 j
n
243 501 134.25 234 re
0 0 0  setrgbcolor
S
n
111 734.25 m
106.5 734.25 l
102.75 732.75 l
99 730.5 l
96 728.25 l
93.75 725.25 l
91.5 721.5 l
90.75 717.75 l
90 713.25 l
90 521.25 l
90.75 516.75 l
91.5 513 l
93.75 509.25 l
96 506.25 l
99 504 l
102.75 501.75 l
106.5 501 l
111 500.25 l
195 500.25 l
199.5 501 l
203.25 501.75 l
207 504 l
210 506.25 l
212.25 509.25 l
214.5 513 l
215.25 516.75 l
216 521.25 l
216 713.25 l
215.25 717.75 l
214.5 721.5 l
212.25 725.25 l
210 728.25 l
207 730.5 l
203.25 732.75 l
199.5 734.25 l
195 734.25 l
h
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
126 464.25 63 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
141.75 474 m
/N10 13.92 Tf
(Card)
[10.1851 7.87462 5.54987 8.64011 ] pdfxs
n
279 464.25 72 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
291 474 m
(Reader)
[10.0602 7.74971 7.74971 8.51521 7.74971 5.42496 ] pdfxs
q
n
338.25 471 5.25 16.5 re
h
W
n
Q
n
189 608.25 72 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
198 618 m
/N8 13.92 Tf
(template)
[3.85316 7.72291 11.5787 7.72291 3.07343 7.72291 3.85316 7.72291 ] pdfxs
q
n
251.25 615 2.25 16.5 re
h
W
n
Q
n
198 509.25 63 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
208.5 519 m
(yes/no)
[7.1253 7.90481 7.1253 4.03506 7.90481 7.90481 ] pdfxs
q
n
249.75 516 3.75 16.5 re
h
W
n
Q
q
n
288 644.25 81 27 re
1 1 1  setrgbcolor
f
Q
n
288 671.25 m
288 644.25 l
369 644.25 l
369 671.25 l
h
1 1 1  setrgbcolor
S
q
n
288 644.25 81 27 re
f
Q
q
n
308.25 651 53.25 16.5 re
h
W
n
0 0 0  setrgbcolor
308.25 654 m
(raw data)
[4.63335 7.73761 10.0481 3.75005 7.73761 7.73761 3.86785 7.73761 ] pdfxs
Q
n
297 572.25 72 27 re
f
0 0 0  setrgbcolor
307.5 582 m
(features)
[3.86436 7.73411 7.73411 3.86436 7.73411 4.62985 7.73411 6.9546 ] pdfxs
q
n
358.5 579 3 16.5 re
h
W
n
Q
n
90 743.25 108 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
96.75 753 m
/N10 13.92 Tf
(SCENARIO 1)
[9.34463 10.1101 9.34463 10.1101 10.1101 10.1101 3.92986 10.8899 3.75007 7.79962 ] pdfxs
n
261.75 681 79.5 43.5 re
1 1 1  setrgbcolor
f
n
261 681 80.25 44.25 re
0 0 0  setrgbcolor
S
288 707.25 m
/N8 13.92 Tf
(data)
[7.71742 7.71742 3.84766 7.71742 ] pdfxs
272.25 691.5 m
(collection)
[6.9331 7.71261 3.06313 3.06313 7.71261 6.9331 3.84286 3.06313 7.71261 7.71261 ] pdfxs
q
n
330.75 688.5 3.75 16.5 re
h
W
n
Q
n
261.75 600 79.5 34.5 re
1 1 1  setrgbcolor
f
n
261 600 80.25 35.25 re
0 0 0  setrgbcolor
S
273 617.25 m
(sig. proc.)
[7.11511 3.24513 7.89462 4.02486 3.74996 7.89462 4.79036 7.89462 7.11511 4.02486 ] pdfxs
q
n
330 614.25 4.5 16.5 re
h
W
n
Q
n
261.75 519 79.5 43.5 re
1 1 1  setrgbcolor
f
n
261 519 80.25 44.25 re
0 0 0  setrgbcolor
S
273 545.25 m
(matching)
[11.6611 7.80531 3.93555 7.02579 7.80531 3.15582 7.80531 7.80531 ] pdfxs
269.25 529.5 m
(& decision)
[9.41302 3.74995 7.86801 7.86801 7.08849 3.21852 7.08849 3.21852 7.86801 7.86801 ] pdfxs
q
n
333.75 526.5 0.75 16.5 re
h
W
n
Q
n
126.75 645 61.5 34.5 re
1 1 1  setrgbcolor
f
n
126 645 62.25 35.25 re
0 0 0  setrgbcolor
S
134.25 663 m
(storage)
[6.86379 3.77355 7.64331 4.53905 7.64331 7.64331 7.64331 ] pdfxs
q
n
180.75 660 0.75 16.5 re
h
W
n
Q
n
299.25 676.5 0.75 3.75 re
f
n
299.25 672.75 0.75 0.75 re
f
n
299.25 666 0.75 3.75 re
f
n
299.25 662.25 0.75 0.75 re
f
n
299.25 655.5 0.75 3.75 re
f
n
299.25 651.75 0.75 0.75 re
f
n
299.25 645 0.75 3.75 re
f
n
295.5 644.25 m
300 635.25 l
304.5 644.25 l
h
eofill
n
299.25 595.5 0.75 3.75 re
f
n
299.25 591.75 0.75 0.75 re
f
n
299.25 585 0.75 3.75 re
f
n
299.25 581.25 0.75 0.75 re
f
n
299.25 574.5 0.75 3.75 re
f
n
299.25 571.5 0.75 0.23999 re
f
n
295.5 571.5 m
300 563.25 l
304.5 571.5 l
h
eofill
n
261 536.25 m
160.5 536.25 l
S
n
161.25 540 m
153 536.25 l
161.25 531.75 l
h
eofill
n
162 644.25 m
255.75 551.25 l
S
n
252 548.25 m
261 545.25 l
258 554.25 l
h
eofill
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Arial,Bold
%%+ font TimesNewRoman
%%+ font Arial
%%EOF

%%EndDocument
 @endspecial 26316 w @beginspecial 70 @llx 460 @lly 450
@urx 800 @ury 2275 @rwi @clip @setspecial
%%BeginDocument: scenario2b.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (\376\377)
%%Version: 1 2
%%Creator: (\376\377)
%%CreationDate: (D:20020919101950)
%%For: (\376\377)
%%DocumentData: Clean7Bit
%%BoundingBox: 0 0 596 842
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
0 0 moveto 596 0 lineto 596 842 lineto 0 842 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Arial,Bold
[/N12/Arial,Bold 1 TZ
%%IncludeResource Arial
[/N8/Arial 1 TZ
%%IncludeResource TimesNewRoman
[/N6/TimesNewRoman 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 596 842 rectclip
n
243.75 501 133.5 233.25 re
1 1 1 setrgbcolor
f
0.75 w
1 J
1 j
n
243 501 134.25 234 re
0 0 0  setrgbcolor
S
n
111 734.25 m
106.5 734.25 l
102.75 732.75 l
99 730.5 l
96 728.25 l
93.75 725.25 l
91.5 721.5 l
90.75 717.75 l
90 713.25 l
90 521.25 l
90.75 516.75 l
91.5 513 l
93.75 509.25 l
96 506.25 l
99 504 l
102.75 501.75 l
106.5 501 l
111 500.25 l
195 500.25 l
199.5 501 l
203.25 501.75 l
207 504 l
210 506.25 l
212.25 509.25 l
214.5 513 l
215.25 516.75 l
216 521.25 l
216 713.25 l
215.25 717.75 l
214.5 721.5 l
212.25 725.25 l
210 728.25 l
207 730.5 l
203.25 732.75 l
199.5 734.25 l
195 734.25 l
h
h
q
1 1 1  setrgbcolor
eofill
Q
S
q
n
102.75 510 7.5 14.25 re
h
W
n
Q
n
126 464.25 63 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
141.75 474 m
/N12 13.92 Tf
(Card)
[10.1851 7.87462 5.54987 8.64011 ] pdfxs
n
279 464.25 72 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
291 474 m
(Reader)
[10.0602 7.74971 7.74971 8.51521 7.74971 5.42496 ] pdfxs
q
n
338.25 471 5.25 16.5 re
h
W
n
Q
n
207 581.25 72 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
213.75 591 m
/N8 13.92 Tf
(template)
[4.04066 7.91041 11.7662 7.91041 3.26093 7.91041 4.04066 7.91041 ] pdfxs
q
n
213.75 585 8.25 3 re
h
W
n
213.75 574.5 m
(e) show
Q
q
n
222 585 7.5 3 re
h
W
n
Q
n
198 509.25 63 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
208.5 519 m
(yes/no)
[7.1253 7.90481 7.1253 4.03506 7.90481 7.90481 ] pdfxs
q
n
249.75 516 3.75 16.5 re
h
W
n
Q
q
n
183 671.25 81 27 re
1 1 1  setrgbcolor
f
Q
n
183 698.25 m
183 671.25 l
264 671.25 l
264 698.25 l
h
1 1 1  setrgbcolor
S
q
n
183 671.25 81 27 re
f
Q
q
n
203.25 678 53.25 16.5 re
h
W
n
0 0 0  setrgbcolor
203.25 681 m
(raw data)
[4.63335 7.73761 10.0481 3.75005 7.73761 7.73761 3.86785 7.73761 ] pdfxs
Q
n
297 599.25 72 27 re
f
0 0 0  setrgbcolor
307.5 609 m
(features)
[3.86436 7.73411 7.73411 3.86436 7.73411 4.62985 7.73411 6.9546 ] pdfxs
q
n
358.5 606 3 16.5 re
h
W
n
Q
n
90 743.25 108 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
96.75 753 m
/N12 13.92 Tf
(SCENARIO 2)
[9.34463 10.1101 9.34463 10.1101 10.1101 10.1101 3.92986 10.8899 3.75007 7.79962 ] pdfxs
n
117.75 645 79.5 43.5 re
1 1 1  setrgbcolor
f
n
117 645 80.25 44.25 re
0 0 0  setrgbcolor
S
144 671.25 m
/N8 13.92 Tf
(data)
[7.71742 7.71742 3.84766 7.71742 ] pdfxs
128.25 655.5 m
(collection)
[6.9331 7.71261 3.06313 3.06313 7.71261 6.9331 3.84286 3.06313 7.71261 7.71261 ] pdfxs
q
n
186.75 652.5 3.75 16.5 re
h
W
n
Q
n
261.75 645 79.5 34.5 re
1 1 1  setrgbcolor
f
n
261 645 80.25 35.25 re
0 0 0  setrgbcolor
S
273 663 m
(sig. proc.)
[7.11511 3.24513 7.89462 4.02486 3.74996 7.89462 4.79036 7.89462 7.11511 4.02486 ] pdfxs
q
n
330 660 4.5 16.5 re
h
W
n
Q
n
261.75 519 79.5 43.5 re
1 1 1  setrgbcolor
f
n
261 519 80.25 44.25 re
0 0 0  setrgbcolor
S
273 545.25 m
(matching)
[11.6611 7.80531 3.93555 7.02579 7.80531 3.15582 7.80531 7.80531 ] pdfxs
269.25 529.5 m
(& decision)
[9.41302 3.74995 7.86801 7.86801 7.08849 3.21852 7.08849 3.21852 7.86801 7.86801 ] pdfxs
q
n
333.75 526.5 0.75 16.5 re
h
W
n
Q
n
126.75 582 61.5 34.5 re
1 1 1  setrgbcolor
f
n
126 582 62.25 35.25 re
0 0 0  setrgbcolor
S
134.25 599.25 m
(storage)
[6.86379 3.77355 7.64331 4.53905 7.64331 7.64331 7.64331 ] pdfxs
q
n
180.75 596.25 0.75 16.5 re
h
W
n
Q
n
261 536.25 m
160.5 536.25 l
S
n
161.25 540 m
153 536.25 l
161.25 531.75 l
h
eofill
n
296.25 640.5 1.5 3.75 re
f
n
296.25 636.75 1.5 0.75 re
f
n
296.25 630 1.5 3.75 re
f
n
296.25 626.25 1.5 0.75 re
f
n
296.25 619.5 1.5 3.75 re
f
n
296.25 615.75 1.5 0.75 re
f
n
296.25 609 1.5 3.75 re
f
n
296.25 604.5 1.5 1.5 re
f
n
296.25 598.5 1.5 3.75 re
f
n
296.25 594 1.5 1.5 re
f
n
296.25 587.25 1.5 4.5 re
f
n
296.25 583.5 1.5 1.5 re
f
n
296.25 576.75 1.5 3.75 re
f
n
296.25 573 1.5 1.5 re
f
n
292.5 571.5 m
297 563.25 l
301.5 571.5 l
h
eofill
n
198 662.25 m
252.75 662.25 l
S
n
252.75 657.75 m
261 662.25 l
252.75 666 l
h
eofill
n
189 599.25 m
254.25 558 l
S
n
251.25 555 m
261 554.25 l
255.75 562.5 l
h
eofill
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Arial,Bold
%%+ font TimesNewRoman
%%+ font Arial
%%EOF

%%EndDocument
 @endspecial 0 48957 a @beginspecial 70 @llx 460 @lly
450 @urx 850 @ury 2275 @rwi @clip @setspecial
%%BeginDocument: scenario3b.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (\376\377)
%%Version: 1 2
%%Creator: (\376\377)
%%CreationDate: (D:20020919102019)
%%For: (\376\377)
%%DocumentData: Clean7Bit
%%BoundingBox: 0 0 596 842
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
0 0 moveto 596 0 lineto 596 842 lineto 0 842 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Arial,Bold
[/N10/Arial,Bold 1 TZ
%%IncludeResource Arial
[/N8/Arial 1 TZ
%%IncludeResource TimesNewRoman
[/N6/TimesNewRoman 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 596 842 rectclip
n
243.75 501 133.5 233.25 re
1 1 1 setrgbcolor
f
0.75 w
1 J
1 j
n
243 501 134.25 234 re
0 0 0  setrgbcolor
S
n
111 734.25 m
106.5 734.25 l
102.75 732.75 l
99 730.5 l
96 728.25 l
93.75 725.25 l
91.5 721.5 l
90.75 717.75 l
90 713.25 l
90 521.25 l
90.75 516.75 l
91.5 513 l
93.75 509.25 l
96 506.25 l
99 504 l
102.75 501.75 l
106.5 501 l
111 500.25 l
195 500.25 l
199.5 501 l
203.25 501.75 l
207 504 l
210 506.25 l
212.25 509.25 l
214.5 513 l
215.25 516.75 l
216 521.25 l
216 713.25 l
215.25 717.75 l
214.5 721.5 l
212.25 725.25 l
210 728.25 l
207 730.5 l
203.25 732.75 l
199.5 734.25 l
195 734.25 l
h
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
126 464.25 63 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
141.75 474 m
/N10 13.92 Tf
(Card)
[10.1851 7.87462 5.54987 8.64011 ] pdfxs
n
279 464.25 72 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
291 474 m
(Reader)
[10.0602 7.74971 7.74971 8.51521 7.74971 5.42496 ] pdfxs
q
n
338.25 471 5.25 16.5 re
h
W
n
Q
n
95.25 608.25 72 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
105 618 m
/N8 13.92 Tf
(template)
[3.94686 7.81662 11.6724 7.81662 3.16713 7.81662 3.94686 7.81662 ] pdfxs
q
n
158.25 615 2.25 16.5 re
h
W
n
Q
n
95.25 509.25 63.75 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
106.5 519 m
(yes/no)
[7.1253 7.90481 7.1253 4.03506 7.90481 7.90481 ] pdfxs
q
n
147.75 516 3.75 16.5 re
h
W
n
Q
q
n
288 608.25 81 27 re
1 1 1  setrgbcolor
f
Q
n
288 635.25 m
288 608.25 l
369 608.25 l
369 635.25 l
h
1 1 1  setrgbcolor
S
q
n
288 608.25 81 27 re
f
Q
q
n
308.25 615 53.25 16.5 re
h
W
n
0 0 0  setrgbcolor
308.25 618 m
(raw data)
[4.63335 7.73761 10.0481 3.75005 7.73761 7.73761 3.86785 7.73761 ] pdfxs
Q
n
195 527.25 72 27 re
f
0 0 0  setrgbcolor
205.5 537 m
(features)
[3.86436 7.73411 7.73411 3.86436 7.73411 4.62985 7.73411 6.9546 ] pdfxs
q
n
255.75 534 3.75 16.5 re
h
W
n
Q
n
90 743.25 108 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
96.75 753 m
/N10 13.92 Tf
(SCENARIO 3)
[9.34463 10.1101 9.34463 10.1101 10.1101 10.1101 3.92986 10.8899 3.75007 7.79962 ] pdfxs
n
261.75 645 79.5 43.5 re
1 1 1  setrgbcolor
f
n
261 645 80.25 44.25 re
0 0 0  setrgbcolor
S
288 671.25 m
/N8 13.92 Tf
(data)
[7.71742 7.71742 3.84766 7.71742 ] pdfxs
272.25 655.5 m
(collection)
[6.9331 7.71261 3.06313 3.06313 7.71261 6.9331 3.84286 3.06313 7.71261 7.71261 ] pdfxs
q
n
330.75 652.5 3.75 16.5 re
h
W
n
Q
n
261.75 546 79.5 34.5 re
1 1 1  setrgbcolor
f
n
261 546 80.25 35.25 re
0 0 0  setrgbcolor
S
273 563.25 m
(sig. proc.)
[7.11511 3.24513 7.89462 4.02486 3.74996 7.89462 4.79036 7.89462 7.11511 4.02486 ] pdfxs
q
n
330 560.25 4.5 16.5 re
h
W
n
Q
n
117.75 546 79.5 43.5 re
1 1 1  setrgbcolor
f
n
117 546 80.25 44.25 re
0 0 0  setrgbcolor
S
129 573 m
(matching)
[11.6611 7.80531 3.93555 7.02579 7.80531 3.15582 7.80531 7.80531 ] pdfxs
125.25 556.5 m
(& decision)
[9.41302 3.74995 7.86801 7.86801 7.08849 3.21852 7.08849 3.21852 7.86801 7.86801 ] pdfxs
q
n
189.75 553.5 0.75 16.5 re
h
W
n
Q
n
126.75 663 61.5 34.5 re
1 1 1  setrgbcolor
f
n
126 663 62.25 35.25 re
0 0 0  setrgbcolor
S
134.25 681 m
(storage)
[6.86379 3.77355 7.64331 4.53905 7.64331 7.64331 7.64331 ] pdfxs
q
n
180.75 678 0.75 16.5 re
h
W
n
Q
n
161.25 658.5 1.5 3.75 re
f
n
161.25 654.75 1.5 0.75 re
f
n
161.25 648 1.5 3.75 re
f
n
161.25 644.25 1.5 0.75 re
f
n
161.25 637.5 1.5 3.75 re
f
n
161.25 633.75 1.5 0.75 re
f
n
161.25 627 1.5 3.75 re
f
n
161.25 622.5 1.5 1.5 re
f
n
161.25 616.5 1.5 3.75 re
f
n
161.25 612 1.5 1.5 re
f
n
161.25 605.25 1.5 4.5 re
f
n
161.25 601.5 1.5 1.5 re
f
n
161.25 598.5 1.5 0.23999 re
f
n
158.25 598.5 m
162 590.25 l
166.5 598.5 l
h
eofill
n
161.25 541.5 1.5 3.75 re
f
n
161.25 537.75 1.5 0.75 re
f
n
158.25 535.5 m
162 527.25 l
166.5 535.5 l
h
eofill
n
296.25 640.5 1.5 3.75 re
f
n
296.25 636.75 1.5 0.75 re
f
n
296.25 630 1.5 3.75 re
f
n
296.25 626.25 1.5 0.75 re
f
n
296.25 619.5 1.5 3.75 re
f
n
296.25 615.75 1.5 0.75 re
f
n
296.25 609 1.5 3.75 re
f
n
296.25 604.5 1.5 1.5 re
f
n
296.25 598.5 1.5 3.75 re
f
n
296.25 594 1.5 1.5 re
f
n
296.25 589.5 1.5 2.25 re
f
n
292.5 589.5 m
297 581.25 l
301.5 589.5 l
h
eofill
n
261 563.25 m
206.25 563.25 l
S
n
207 567.75 m
198 563.25 l
207 558.75 l
h
eofill
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Arial,Bold
%%+ font TimesNewRoman
%%+ font Arial
%%EOF

%%EndDocument
 @endspecial 26316 w @beginspecial 70 @llx 460 @lly 450
@urx 850 @ury 2275 @rwi @clip @setspecial
%%BeginDocument: scenario4b.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (\376\377)
%%Version: 1 2
%%Creator: (\376\377)
%%CreationDate: (D:20020919102042)
%%For: (\376\377)
%%DocumentData: Clean7Bit
%%BoundingBox: 0 0 596 842
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
0 0 moveto 596 0 lineto 596 842 lineto 0 842 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Arial,Bold
[/N10/Arial,Bold 1 TZ
%%IncludeResource Arial
[/N8/Arial 1 TZ
%%IncludeResource TimesNewRoman
[/N6/TimesNewRoman 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 596 842 rectclip
n
243.75 501 133.5 233.25 re
1 1 1 setrgbcolor
f
0.75 w
1 J
1 j
n
243 501 134.25 234 re
0 0 0  setrgbcolor
S
n
111 734.25 m
106.5 734.25 l
102.75 732.75 l
99 730.5 l
96 728.25 l
93.75 725.25 l
91.5 721.5 l
90.75 717.75 l
90 713.25 l
90 521.25 l
90.75 516.75 l
91.5 513 l
93.75 509.25 l
96 506.25 l
99 504 l
102.75 501.75 l
106.5 501 l
111 500.25 l
195 500.25 l
199.5 501 l
203.25 501.75 l
207 504 l
210 506.25 l
212.25 509.25 l
214.5 513 l
215.25 516.75 l
216 521.25 l
216 713.25 l
215.25 717.75 l
214.5 721.5 l
212.25 725.25 l
210 728.25 l
207 730.5 l
203.25 732.75 l
199.5 734.25 l
195 734.25 l
h
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
126 464.25 63 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
141.75 474 m
/N10 13.92 Tf
(Card)
[10.1851 7.87462 5.54987 8.64011 ] pdfxs
n
279 464.25 72 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
291 474 m
(Reader)
[10.0602 7.74971 7.74971 8.51521 7.74971 5.42496 ] pdfxs
q
n
338.25 471 5.25 16.5 re
h
W
n
Q
n
144 590.25 72 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
153 600 m
/N8 13.92 Tf
(template)
[3.85316 7.72291 11.5787 7.72291 3.07343 7.72291 3.85316 7.72291 ] pdfxs
q
n
206.25 597 2.25 16.5 re
h
W
n
Q
n
95.25 509.25 63.75 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
106.5 519 m
(yes/no)
[7.1253 7.90481 7.1253 4.03506 7.90481 7.90481 ] pdfxs
q
n
147.75 516 3.75 16.5 re
h
W
n
Q
q
n
207 680.25 72 27 re
1 1 1  setrgbcolor
f
Q
n
207 707.25 m
207 680.25 l
279 680.25 l
279 707.25 l
h
1 1 1  setrgbcolor
S
q
n
207 680.25 72 27 re
f
Q
0 0 0  setrgbcolor
216 690 m
(raw data)
[4.63335 7.73761 10.0481 3.75005 7.73761 7.73761 3.86785 7.73761 ] pdfxs
q
n
269.25 687 2.25 16.5 re
h
W
n
Q
n
195 527.25 72 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
205.5 537 m
(features)
[3.86436 7.73411 7.73411 3.86436 7.73411 4.62985 7.73411 6.9546 ] pdfxs
q
n
255.75 534 3.75 16.5 re
h
W
n
Q
n
90 743.25 108 27 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
96.75 753 m
/N10 13.92 Tf
(SCENARIO 4)
[9.34463 10.1101 9.34463 10.1101 10.1101 10.1101 3.92986 10.8899 3.75007 7.79962 ] pdfxs
n
117.75 672 79.5 43.5 re
1 1 1  setrgbcolor
f
n
117 672 80.25 44.25 re
0 0 0  setrgbcolor
S
144 699 m
/N8 13.92 Tf
(data)
[7.71742 7.71742 3.84766 7.71742 ] pdfxs
128.25 682.5 m
(collection)
[6.9331 7.71261 3.06313 3.06313 7.71261 6.9331 3.84286 3.06313 7.71261 7.71261 ] pdfxs
q
n
186.75 679.5 3.75 16.5 re
h
W
n
Q
n
261.75 546 79.5 34.5 re
1 1 1  setrgbcolor
f
n
261 546 80.25 35.25 re
0 0 0  setrgbcolor
S
273 563.25 m
(sig. proc.)
[7.11511 3.24513 7.89462 4.02486 3.74996 7.89462 4.79036 7.89462 7.11511 4.02486 ] pdfxs
q
n
330 560.25 4.5 16.5 re
h
W
n
Q
n
117.75 546 79.5 43.5 re
1 1 1  setrgbcolor
f
n
117 546 80.25 44.25 re
0 0 0  setrgbcolor
S
129 573 m
(matching)
[11.6611 7.80531 3.93555 7.02579 7.80531 3.15582 7.80531 7.80531 ] pdfxs
125.25 556.5 m
(& decision)
[9.41302 3.74995 7.86801 7.86801 7.08849 3.21852 7.08849 3.21852 7.86801 7.86801 ] pdfxs
q
n
189.75 553.5 0.75 16.5 re
h
W
n
Q
n
96 618 62.25 34.5 re
1 1 1  setrgbcolor
f
n
95.25 618 63 35.25 re
0 0 0  setrgbcolor
S
103.5 635.25 m
(storage)
[6.971 3.88076 7.75052 4.64626 7.75052 7.75052 7.75052 ] pdfxs
q
n
150 632.25 0.75 16.5 re
h
W
n
Q
n
161.25 541.5 1.5 3.75 re
f
n
161.25 537.75 1.5 0.75 re
f
n
158.25 535.5 m
162 527.25 l
166.5 535.5 l
h
eofill
n
261 563.25 m
206.25 563.25 l
S
n
207 567.75 m
198 563.25 l
207 558.75 l
h
eofill
n
126.75 617.25 m
126 616.5 l
129 615 l
129.75 615.75 l
h
f
n
132 613.5 m
131.25 612.75 l
132 612 l
132.75 612.75 l
h
f
n
135 611.25 m
134.25 610.5 l
137.25 608.25 l
138 609 l
h
f
n
140.25 607.5 m
139.5 606.75 l
140.25 606 l
141 606.75 l
h
f
n
143.25 604.5 m
142.5 604.5 l
145.5 602.25 l
146.25 603 l
h
f
n
148.5 600.75 m
147.75 600 l
148.5 599.25 l
149.25 600 l
h
f
n
151.5 598.5 m
150.75 597.75 l
153.75 595.5 l
154.5 596.25 l
h
f
n
153 591.75 m
162 590.25 l
158.25 598.5 l
h
eofill
n
198 698.25 m
300.75 587.25 l
S
n
297 585 m
306 581.25 l
303.75 590.25 l
h
eofill
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font TimesNewRoman
%%+ font Arial,Bold
%%+ font Arial
%%EOF

%%EndDocument
 @endspecial 1038 51392 a Ff(Figure)369 b(2:)493 b(F)-92
b(our)368 b(di\013eren)-31 b(t)370 b(scenarios)f(and)g(their)h(corresp)
31 b(onding)369 b(data)i(\015o)-31 b(w)370 b(during)f(cardholder)h
(authen)-31 b(tication.)p 3988 53086 43624 45 v 3966
54414 45 1329 v 11052 54414 V 11739 54016 a Fc(System)424
b(mo)35 b(dules)426 b(in)e(smartcard)p 28939 54414 V
1329 w(System)h(mo)35 b(dules)425 b(in)g(card)f(reader)p
47589 54414 V 3988 54458 43624 45 v 3988 54680 V 3966
58665 45 3986 v 4653 56949 a(Scenario)h(1)p 11052 58665
V 12403 56938 a Ff(T)-92 b(emplate)371 b(storage)p 28939
58665 V 30289 55610 a(Data)f(collection)30289 56938 y(Signal)h(pro)31
b(cessing)30289 58266 y(Matc)-31 b(hing)371 b(and)e(Decision)p
47589 58665 V 3988 58709 43624 45 v 3966 61366 45 2657
v 4653 60314 a Fc(Scenario)425 b(2)p 11052 61366 V 12403
59639 a Ff(T)-92 b(emplate)371 b(storage)12403 60967
y(Data)f(collection)p 28939 61366 V 30289 59639 a(Signal)h(pro)31
b(cessing)30289 60967 y(Matc)-31 b(hing)371 b(and)e(Decision)p
47589 61366 V 3988 61410 43624 45 v 3966 64067 45 2657
v 4653 63015 a Fc(Scenario)425 b(3)p 11052 64067 V 12403
62340 a Ff(T)-92 b(emplate)371 b(storage)12403 63668
y(Matc)-31 b(hing)371 b(and)e(Decision)p 28939 64067
V 30289 62340 a(Data)h(collection)30289 63668 y(Signal)h(pro)31
b(cessing)p 47589 64067 V 3988 64111 43624 45 v 3966
68096 45 3986 v 4653 66380 a Fc(Scenario)425 b(4)p 11052
68096 V 12403 65041 a Ff(T)-92 b(emplate)371 b(storage)12403
66369 y(Data)f(collection)12403 67698 y(Matc)-31 b(hing)371
b(and)e(Decision)p 28939 68096 V 30289 66369 a(Signal)i(pro)31
b(cessing)p 47589 68096 V 3988 68140 43624 45 v 3966
69480 45 1340 v 4653 69081 a Fc(Scenario)425 b(5)p 11052
69480 V 12403 69070 a Ff(All)370 b(mo)31 b(dules)p 28939
69480 V 12100 w(No)370 b(mo)31 b(dules)p 47589 69480
V 3988 69524 43624 45 v 0 71510 a(T)-92 b(able)265 b(1:)441
b(Fiv)-31 b(e)265 b(di\013eren)-31 b(t)264 b(biometric)j(system)d
(scenarios)h(in)f(increasing)i(order)e(of)h(in)-31 b(tegration)267
b(of)e(the)g(biometric)h(mo)31 b(dules.)p eop
%%Page: 6 6
6 5 bop 0 1107 a Ff(Threats)302 b Fc(U1)h Ff(and)f Fc(U3)h
Ff(could)g(b)31 b(e)301 b(addressed)g(b)-31 b(y)303 b(encrypt-)0
2435 y(ing)529 b(the)g(comm)-31 b(unications)531 b(path,)569
b(although)531 b(the)d(e\013ec-)0 3764 y(tiv)-31 b(eness)560
b(of)h(suc)-31 b(h)559 b(a)i(measure)f(w)-31 b(ould)561
b(dep)31 b(end)559 b(on)i(the)0 5092 y(ph)-31 b(ysical)353
b(securit)-31 b(y)351 b(of)h(the)f(card)h(reader)e(\(since)i(k)-31
b(eys)351 b(nec-)0 6420 y(essary)274 b(to)i(decrypt)e(the)h
(transferred)f(data)i(w)-31 b(ould)277 b(need)d(to)0
7749 y(b)31 b(e)317 b(a)-31 b(v)-61 b(ailable)321 b(to)e(the)f(card)f
(reader\).)476 b(Addressing)317 b(threats)0 9077 y Fc(U2)577
b Ff(and)g Fc(U4)g Ff(w)-31 b(ould)578 b(require)e(the)h(pro)-31
b(vision)578 b(of)f(data)0 10405 y(in)-31 b(tegrit)g(y)442
b(and)e(origin)h(authen)-31 b(tication)443 b(services)c(for)h(the)0
11734 y(data)384 b(transfer)e(b)31 b(et)-31 b(w)g(een)384
b(card)f(and)g(reader)f(\(e.g.)i(as)f(pro-)0 13062 y(vided)326
b(b)-31 b(y)326 b(a)f(Message)g(Authen)-31 b(tication)329
b(Co)31 b(de)326 b(\(MA)-31 b(C\))327 b(or)0 14390 y(a)369
b(digital)j(signature)e(|)f(see,)g(for)h(example,)h([2]\).)0
18539 y Fe(3.3)1394 b(Do)-39 b(wn-link)465 b(threats)0
22687 y Ff(The)369 b(main)i(do)-31 b(wn-link)371 b(threats)f(are)f(as)g
(follo)-31 b(ws:)0 26695 y Fc(D1.)554 b Ff(\()p Fc(S1)318
b Ff(and)e Fc(S2)i Ff(only\).)476 b(Mo)31 b(di\014cation)319
b(of)e(the)g(authen-)2214 28024 y(tication)372 b(decision.)0
30564 y Fc(D2.)554 b Ff(\()p Fc(S3)281 b Ff(and)g Fc(S4)f
Ff(only\).)465 b(In)-31 b(terception)281 b(\(leading)i(to)e(loss)2214
31893 y(of)370 b(con\014den)-31 b(tialit)g(y\))373 b(of)d(the)f
(\014ngerprin)-31 b(t)370 b(features.)0 34433 y Fc(D3.)554
b Ff(\()p Fc(S3)443 b Ff(and)f Fc(S4)h Ff(only\).)713
b(Manipulation)445 b(\(or)e(replace-)2214 35761 y(men)-31
b(t\))371 b(of)e(the)h(\014ngerprin)-31 b(t)369 b(features.)0
39770 y(Threat)517 b Fc(D2)f Ff(could)h(b)31 b(e)515
b(addressed)g(b)-31 b(y)516 b(encrypting)h(the)0 41098
y(comm)-31 b(unications)390 b(path,)i(although)c(the)f(e\013ectiv)-31
b(eness)386 b(of)0 42426 y(suc)-31 b(h)330 b(a)h(measure)f(w)-31
b(ould)332 b(dep)31 b(end)329 b(on)i(the)g(means)f(used)g(to)0
43755 y(protect)252 b(the)f(necessary)f(k)-31 b(ey\(s\).)454
b(Addressing)251 b(threats)g Fc(D1)0 45083 y Ff(and)268
b Fc(D3)f Ff(w)-31 b(ould)269 b(require)e(the)g(pro)-31
b(vision)269 b(of)f(data)g(in)-31 b(tegrit)g(y)0 46411
y(and)249 b(origin)h(authen)-31 b(tication)252 b(services)c(for)g(the)h
(data)h(trans-)0 47740 y(fer)416 b(b)31 b(et)-31 b(w)g(een)417
b(reader)f(and)h(card)f(\(e.g.)i(as)f(pro)-31 b(vided)417
b(b)-31 b(y)417 b(a)0 49068 y(MA)-31 b(C)370 b(or)f(a)g(digital)j
(signature\).)0 53216 y Fe(3.4)1394 b(Threats)464 b(to)h(card)f(reader)
0 57365 y Ff(Three)430 b(main)h(t)-31 b(yp)31 b(es)430
b(of)h(threat)g(to)g(the)f(card)g(reader)g(can)0 58693
y(b)31 b(e)529 b(iden)-31 b(ti\014ed.)975 b(Although)532
b(these)d(threats)h(are)f(not)i(di-)0 60021 y(rectly)258
b(relev)-61 b(an)-31 b(t)259 b(to)g(smartcard/reader)f(comm)-31
b(unications)0 61350 y(securit)g(y)-92 b(,)290 b(they)269
b(do)g(ha)-31 b(v)g(e)270 b(indirect)g(relev)-61 b(ance)269
b(\(see)g(b)31 b(elo)-31 b(w\).)0 62678 y(The)369 b(three)g(main)i
(classes)e(of)g(threat)h(are)f(as)g(follo)-31 b(ws.)1107
66687 y Fb(\017)554 b Fa(Manipulation)586 b Ff(of)502
b(a)f(gen)-31 b(uine)502 b(card)f(reader.)888 b(This)2214
68015 y(includes)386 b(the)h(insertion)f(of)h(a)f(`bug')h(\(as)g(men)
-31 b(tioned)2214 69343 y(in)341 b(Section)h(3.1\),)349
b(but)341 b(also)h(includes)f(threats)g(where)2214 70672
y(the)373 b(op)31 b(eration)375 b(of)e(the)h(reader)e(is)h(mo)31
b(di\014ed,)375 b(e.g.)g(b)-31 b(y)2214 72000 y(c)g(hanging)371
b(stored)e(soft)-31 b(w)g(are.)27907 1107 y Fb(\017)554
b Fa(R)-57 b(eplac)g(ement)489 b Ff(of)382 b(the)g(card)g(reader.)531
b(This)382 b(refers)f(to)29014 2435 y(the)492 b(substitution)i(of)e
(the)g(gen)-31 b(uine)493 b(reader)e(with)i(a)29014 3764
y(fraudulen)-31 b(t)440 b(replacemen)-31 b(t.)704 b(\(Whether)439
b(or)g(not)h(this)29014 5092 y(could)525 b(b)31 b(e)524
b(ac)-31 b(hiev)g(ed)526 b(without)g(prev)-31 b(en)g(ting)526
b(correct)29014 6420 y(op)31 b(eration)488 b(of)g(the)f(system)h(dep)31
b(ends)486 b(on)h(b)31 b(oth)488 b(the)29014 7749 y(card)549
b(reader)f(design)h(and)g(the)g(design)g(of)g(the)g(re-)29014
9077 y(mainder)370 b(of)g(the)f(system\).)27907 11329
y Fb(\017)554 b Fa(Theft)618 b Ff(and/or)514 b Fa(r)-57
b(everse)529 b(engine)-57 b(ering)614 b Ff(of)514 b(the)f(card)29014
12658 y(reader.)691 b(Suc)-31 b(h)436 b(a)g(threat)h(could)f(b)31
b(e)435 b(v)-31 b(ery)436 b(serious)f(if)29014 13986
y(the)291 b(reader)g(con)-31 b(tains)292 b(secrets)f(on)g(whic)-31
b(h)292 b(the)g(system)29014 15314 y(securit)-31 b(y)369
b(dep)31 b(ends.)26800 20868 y Fd(4)1495 b(Impact)499
b(of)f(securit)-42 b(y)499 b(threats)26800 24873 y Ff(W)-92
b(e)386 b(next)i(consider)f(the)g(impact)h(of)g(the)f(v)-61
b(arious)387 b(threats)26800 26201 y(iden)-31 b(ti\014ed)510
b(in)f(the)g(previous)g(section.)912 b(W)-92 b(e)508
b(divide)h(this)26800 27529 y(discussion)369 b(in)-31
b(to)371 b(the)e(follo)-31 b(wing)373 b(sub-categories:)27907
31322 y Fb(\017)554 b Ff(threats)534 b(arising)g(from)h(attempted)g
(use)e(of)h(a)g(lost,)29014 32650 y(stolen)370 b(or)f(b)31
b(orro)-31 b(w)g(ed)370 b(card;)27907 34903 y Fb(\017)554
b Ff(threats)370 b(to)f(in)-31 b(tegrit)g(y)372 b(of)e(card)f
(transactions;)27907 37155 y Fb(\017)554 b Ff(threats)370
b(to)f(cardholder)h(priv)-61 b(acy)-92 b(.)26800 41159
y Fe(4.1)1394 b(Use)316 b(of)f(lost,)346 b(stolen)316
b(or)g(b)39 b(orro)-39 b(w)g(ed)317 b(cards)26800 45164
y Ff(As)539 b(a)g(basis)g(of)h(this)f(discussion)h(w)-31
b(e)539 b(assume)g(that)i(the)26800 46492 y(p)31 b(ossessor)392
b(of)h(a)h(misappropriated)g(\(lost,)401 b(stolen)394
b(or)f(b)31 b(or-)26800 47820 y(ro)-31 b(w)g(ed\))359
b(card)f(wishes)g(to)h(mak)-31 b(e)359 b(use)e(of)i(this)f(card,)j
(e.g.)e(to)26800 49149 y(p)31 b(erform)475 b(some)i(kind)f(of)g
(transaction.)814 b(In)475 b(order)g(to)i(do)26800 50477
y(so,)527 b(he/she)495 b(will)i(need)e(to)h(\014nd)f(some)h(w)-31
b(a)g(y)497 b(of)f(`fo)31 b(oling')26800 51805 y(the)369
b(cardholder)h(authen)-31 b(tication)373 b(pro)31 b(cess.)26800
54462 y(There)392 b(are)h(a)f(v)-61 b(ariet)-31 b(y)394
b(of)f(w)-31 b(a)g(ys)394 b(this)f(could)g(b)31 b(e)392
b(ac)-31 b(hiev)g(ed,)26800 55790 y(as)317 b(follo)-31
b(ws.)478 b(Note)318 b(that)h(in)e(eac)-31 b(h)318 b(case)f(w)-31
b(e)318 b(indicate)h(whic)-31 b(h)26800 57119 y(threat)370
b(iden)-31 b(ti\014ed)370 b(in)f(Section)h(3)g(ab)31
b(o)-31 b(v)g(e)370 b(is)f(giving)i(rise)d(to)26800 58447
y(the)h(issue.)27907 62240 y Fb(\017)554 b Ff(Arising)370
b(from)f Fc(U2)p 29014 62632 8086 45 v 622 w Ff(\(and)621
b(hence)f(applying)j(to)e Fc(S1)29014 63568 y Ff(and)380
b Fc(S2)h Ff(only\):)517 b(replace)380 b(the)h(\014ngerprin)-31
b(t)381 b(template)29014 64896 y(as)442 b(sen)-31 b(t)442
b(on)g(the)g(up-link)h(with)g(a)g(\014ngerprin)-31 b(t)442
b(tem-)29014 66225 y(plate)425 b(b)31 b(elonging)426
b(to)e(the)g(p)31 b(ossessor)423 b(of)h(the)g(misap-)29014
67553 y(propriated)370 b(card.)29014 69343 y(F)-92 b(or)486
b(suc)-31 b(h)487 b(an)g(attac)-31 b(k)490 b(to)d(b)31
b(e)487 b(viable,)518 b(the)488 b(attac)-31 b(k)g(er)29014
70672 y(will)613 b(need)f(to)h(ha)-31 b(v)g(e)612 b(a)g(\014ngerprin)
-31 b(t)613 b(template)h(for)29014 72000 y(his/her)442
b(o)-31 b(wn)444 b(\014ngerprin)-31 b(t)443 b(in)g(the)g(format)h(used)
f(b)-31 b(y)p eop
%%Page: 7 7
7 6 bop 2214 1107 a Ff(the)525 b(sc)-31 b(heme.)961 b(There)525
b(are)f(a)i(n)-31 b(um)g(b)31 b(er)525 b(of)h(p)31 b(ossible)2214
2435 y(w)-31 b(a)g(ys)370 b(in)g(whic)-31 b(h)370 b(this)f(could)h(b)31
b(e)369 b(obtained.)3459 5086 y Fc({)554 b Ff(If)396
b(the)h(attac)-31 b(k)g(er)399 b(has)d(his/her)g(o)-31
b(wn)398 b(card,)403 b(this)4649 6414 y(could)263 b(easily)g(b)31
b(e)261 b(obtained)i(b)-31 b(y)262 b(monitoring)j(the)4649
7742 y(output)371 b(from)e(the)h(attac)-31 b(k)g(er's)371
b(o)-31 b(wn)370 b(card.)3459 9599 y Fc({)554 b Ff(If)483
b(the)g(attac)-31 b(k)g(er)486 b(kno)-31 b(ws)483 b(the)h(t)-31
b(yp)31 b(e)483 b(of)h(\014nger-)4649 10928 y(prin)-31
b(t)487 b(reader)f(in)h(use)f(\(either)i(built)f(in)-31
b(to)489 b(the)4649 12256 y(card)581 b(reader)f(\()p
Fc(S1)p Ff(\))i(or)e(built)i(in)-31 b(to)582 b(the)f(card)4649
13585 y(\()p Fc(S2)p Ff(\)\))400 b(and)d(the)h(metho)31
b(d)398 b(used)f(to)h(obtain)i(the)4649 14913 y(template,)491
b(then)464 b(the)h(attac)-31 b(k)g(er)466 b(could)f(obtain)4649
16241 y(a)482 b(\014ngerprin)-31 b(t)482 b(reader)e(of)i(this)g(t)-31
b(yp)31 b(e)482 b(and)f(use)4649 17570 y(it,)425 b(together)413
b(with)h(appropriate)g(soft)-31 b(w)g(are,)425 b(to)4649
18898 y(compute)371 b(a)e(template.)3459 20755 y Fc({)554
b Ff(The)355 b(attac)-31 b(k)g(er)357 b(could)e(use)f(a)h
(misappropriated)4649 22083 y(card)369 b(to)h(obtain)g(a)f(cop)-31
b(y)370 b(\(or)f(man)-31 b(y)371 b(copies\))e(of)4649
23412 y(a)275 b(\014ngerprin)-31 b(t)274 b(image)i(\(from)g(threat)f
Fc(U3)g Ff(|)f(i.e.)4649 24740 y Fc(S2)255 b Ff(only\))g(for)f(his/her)
g(o)-31 b(wn)255 b(\014ngerprin)-31 b(t.)455 b(With)4649
26068 y(kno)-31 b(wledge)284 b(of)e(the)g(metho)31 b(d)282
b(used)f(to)h(extract)h(a)4649 27397 y(template,)443
b(together)427 b(with)g(appropriate)g(soft-)4649 28725
y(w)-31 b(are,)464 b(the)443 b(attac)-31 b(k)g(er)446
b(could)e(compute)h(a)f(tem-)4649 30054 y(plate.)2214
32704 y(If)385 b Fc(U2)300 b Ff(is)g(realisable,)315
b(then)300 b(this)g(risk)f(has)g(to)h(b)31 b(e)299 b(clas-)2214
34032 y(si\014ed)268 b(as)g Fc(high)p Ff(,)289 b(since,)f(for)268
b(man)-31 b(y)269 b(systems,)289 b(protect-)2214 35361
y(ing)443 b(one)g(cardholder)g(against)h(another)g(fraudulen)-31
b(t)2214 36689 y(cardholder)369 b(is)g(a)h(necessary)e(requiremen)-31
b(t.)1107 39075 y Fb(\017)554 b Ff(Arising)370 b(from)g
Fc(U4)p 2214 39467 8086 45 v 621 w Ff(\(and)621 b(hence)f(applying)j
(to)e Fc(S2)2214 40403 y Ff(and)386 b Fc(S4)g Ff(only\):)528
b(replace)386 b(the)g(\014ngerprin)-31 b(t)386 b(image)i(as)2214
41731 y(sen)-31 b(t)301 b(on)f(the)h(up-link)h(with)f(a)g(\014ngerprin)
-31 b(t)301 b(image)h(b)31 b(e-)2214 43060 y(longing)371
b(to)f(the)g(legitimate)j(cardholder.)2214 44917 y(F)-92
b(or)486 b(suc)-31 b(h)487 b(an)g(attac)-31 b(k)490 b(to)d(b)31
b(e)487 b(viable,)518 b(the)488 b(attac)-31 b(k)g(er)2214
46245 y(will)522 b(need)d(to)i(ha)-31 b(v)g(e)521 b(a)f(\014ngerprin)
-31 b(t)521 b(image)g(for)g(the)2214 47574 y(gen)-31
b(uine)272 b(cardholder.)460 b(There)271 b(are)h(a)f(n)-31
b(um)g(b)31 b(er)271 b(of)h(p)31 b(os-)2214 48902 y(sible)369
b(w)-31 b(a)g(ys)371 b(in)e(whic)-31 b(h)370 b(this)g(could)g(b)31
b(e)369 b(obtained.)3459 51552 y Fc({)554 b Ff(F)-92
b(rom)498 b(threat)g Fc(U3)g Ff(\(and)h(hence)e(applying)j(to)4649
52881 y Fc(S2)i Ff(and)g Fc(S4)g Ff(only\).)891 b(Note)503
b(that)f(this)g(w)-31 b(ould)4649 54209 y(require)282
b(threat)g Fc(U3)g Ff(to)h(b)31 b(e)281 b(realised)h(b)31
b(efore)282 b(the)4649 55537 y(time)484 b(of)e(misappropriation.)835
b(This)483 b(ma)-31 b(y)483 b(not)4649 56866 y(b)31 b(e)369
b(easy)g(to)h(arrange.)3459 58723 y Fc({)554 b Ff(If)409
b(the)h(attac)-31 b(k)g(er)411 b(kno)-31 b(ws)410 b(ho)-31
b(w)411 b(the)e(\014ngerprin)-31 b(t)4649 60051 y(reader)310
b(in)g(use)g(op)31 b(erates,)322 b(and)311 b(has)f(access)g(to)h(a)4649
61380 y(\014ngerprin)-31 b(t)277 b(image)h(of)f(some)f(kind)h(for)f
(the)h(gen-)4649 62708 y(uine)304 b(user)f(\(e.g.)i(b)-31
b(y)304 b(taking)h(an)f(image)h(from)g(an)4649 64036
y(ob)61 b(ject)298 b(touc)-31 b(hed)297 b(b)-31 b(y)296
b(the)h(gen)-31 b(uine)297 b(cardholder\))4649 65365
y(then)402 b(it)g(ma)-31 b(y)403 b(b)31 b(e)401 b(p)31
b(ossible)401 b(to)h(transform)g(this)4649 66693 y(latter)540
b(image)h(in)-31 b(to)541 b(one)e(conforming)i(to)f(the)4649
68021 y(sc)-31 b(heme)370 b(in)f(use.)2214 70672 y(If)430
b Fc(U4)346 b Ff(and)f Fc(U3)g Ff(are)g(realisable)h(for)e(the)h(same)g
(card,)2214 72000 y(then)303 b(this)g(risk)g(has)g(to)g(b)31
b(e)303 b(classi\014ed)g(as)g Fc(high)p Ff(.)471 b(Note)29014
1107 y(that)295 b(ev)-31 b(en)293 b(if)h(b)31 b(oth)294
b(threats)g(are)f(realisable,)310 b(success-)29014 2435
y(fully)367 b(taking)g(adv)-61 b(an)-31 b(tage)367 b(of)f(b)31
b(oth)366 b(threats)g(with)g(re-)29014 3764 y(sp)31 b(ect)365
b(to)h(the)g(same)g(card)f(ma)-31 b(y)367 b(b)31 b(e)365
b(m)-31 b(uc)g(h)366 b(more)g(dif-)29014 5092 y(\014cult.)486
b(If)433 b Fc(U4)347 b Ff(is)g(realisable)i(but)e(not)h
Fc(U3)p Ff(,)k(then)c(the)29014 6420 y(risk)399 b(is)g(lo)-31
b(w)g(er)400 b(|)f(sa)-31 b(y)414 b Fc(medium)399 b Ff(|)g(dep)31
b(ending)400 b(on)29014 7749 y(the)457 b(details)h(of)g(the)f
(\014ngerprin)-31 b(t)458 b(imaging)h(tec)-31 b(hnol-)29014
9077 y(ogy)370 b(b)31 b(eing)370 b(used.)27907 11373
y Fb(\017)554 b Ff(Arising)370 b(from)f Fc(D1)p 29014
11765 8083 45 v 622 w Ff(\(and)622 b(hence)f(applying)i(to)f
Fc(S1)29014 12701 y Ff(and)518 b Fc(S2)g Ff(only\):)792
b(c)-31 b(hange)518 b(the)g(authen)-31 b(tication)522
b(de-)29014 14029 y(cision)336 b(sen)-31 b(t)335 b(from)h(reader)e(to)i
(card)f(from)h(`Reject')g(to)29014 15358 y(`Accept'.)29014
17170 y(This)574 b(is)g(trivially)j(easy)d(to)h(p)31
b(erform)574 b(\(giv)-31 b(en)576 b(that)29014 18498
y(threat)326 b Fc(D1)f Ff(is)g(realised\).)479 b(If)411
b Fc(D1)325 b Ff(is)g(realisable,)336 b(then)29014 19826
y(this)369 b(risk)g(has)g(to)h(b)31 b(e)369 b(classi\014ed)h(as)f
Fc(v)-35 b(ery)424 b(high)p Ff(.)27907 22122 y Fb(\017)554
b Ff(Arising)370 b(from)f Fc(D3)p 29014 22514 V 622 w
Ff(\(and)622 b(hence)f(applying)i(to)f Fc(S3)29014 23450
y Ff(and)445 b Fc(S4)g Ff(only\):)646 b(replace)445 b(the)g
(\014ngerprin)-31 b(t)446 b(features)29014 24779 y(sen)-31
b(t)456 b(on)g(the)g(do)-31 b(wn-link)459 b(with)e(features)f
(extracted)29014 26107 y(from)370 b(the)f(cardholder's)h(\014ngerprin)
-31 b(t.)29014 27919 y(F)-92 b(or)486 b(suc)-31 b(h)487
b(an)g(attac)-31 b(k)490 b(to)d(b)31 b(e)487 b(viable,)518
b(the)488 b(attac)-31 b(k)g(er)29014 29248 y(will)371
b(need)e(to)h(ha)-31 b(v)g(e)370 b(a)g(cop)-31 b(y)370
b(of)g(\014ngerprin)-31 b(t)370 b(features)29014 30576
y(for)501 b(a)g(\014ngerprin)-31 b(t)502 b(of)g(the)f(gen)-31
b(uine)502 b(cardholder)g(in)29014 31904 y(the)c(format)h(used)e(b)-31
b(y)499 b(the)f(sc)-31 b(heme.)878 b(There)498 b(are)f(a)29014
33233 y(n)-31 b(um)g(b)31 b(er)337 b(of)g(p)31 b(ossible)338
b(w)-31 b(a)g(ys)338 b(in)f(whic)-31 b(h)338 b(this)g(could)f(b)31
b(e)29014 34561 y(obtained.)30259 37098 y Fc({)554 b
Ff(F)-92 b(rom)498 b(threat)h Fc(D2)g Ff(\(and)g(hence)f(applying)i(to)
31449 38427 y Fc(S3)i Ff(and)g Fc(S4)g Ff(only\).)891
b(Note)503 b(that)f(this)g(w)-31 b(ould)31449 39755 y(require)282
b(threat)h Fc(D2)g Ff(to)f(b)31 b(e)282 b(realised)h(b)31
b(efore)282 b(the)31449 41083 y(time)484 b(of)e(misappropriation.)835
b(This)483 b(ma)-31 b(y)483 b(not)31449 42412 y(b)31
b(e)369 b(easy)g(to)h(arrange.)30259 44224 y Fc({)554
b Ff(If)409 b(the)h(attac)-31 b(k)g(er)411 b(kno)-31
b(ws)410 b(ho)-31 b(w)411 b(the)e(\014ngerprin)-31 b(t)31449
45552 y(feature)288 b(extraction)h(metho)31 b(d)288 b(in)f(use)f(op)31
b(erates,)31449 46881 y(and)504 b(has)f(access)g(to)h(a)f(\014ngerprin)
-31 b(t)504 b(image)h(of)31449 48209 y(some)322 b(kind)g(for)g(the)g
(gen)-31 b(uine)323 b(user)d(\(e.g.)k(b)-31 b(y)321 b(re-)31449
49537 y(alising)420 b(threat)f Fc(U3)g Ff(b)31 b(efore)418
b(the)h(time)h(of)e(mis-)31449 50866 y(appropriation,)317
b(or)299 b(b)-31 b(y)301 b(taking)g(an)g(image)g(from)31449
52194 y(an)566 b(ob)61 b(ject)566 b(touc)-31 b(hed)566
b(b)-31 b(y)566 b(the)f(gen)-31 b(uine)566 b(card-)31449
53522 y(holder\))304 b(then)f(it)g(ma)-31 b(y)304 b(b)31
b(e)303 b(p)31 b(ossible)303 b(to)g(deriv)-31 b(e)303
b(a)31449 54851 y(w)-31 b(ork)-61 b(able)328 b(set)e(of)h(features)f
(conforming)i(to)g(the)31449 56179 y(sc)-31 b(heme)369
b(in)h(use.)29014 58716 y(If)435 b Fc(D3)350 b Ff(and)f
Fc(D2)h Ff(are)e(realisable)j Fa(for)377 b(the)h(same)f(c)-57
b(ar)g(d)p Ff(,)29014 60045 y(then)303 b(this)g(risk)g(has)g(to)g(b)31
b(e)303 b(classi\014ed)g(as)g Fc(high)p Ff(.)471 b(Note)29014
61373 y(that)295 b(ev)-31 b(en)293 b(if)h(b)31 b(oth)294
b(threats)g(are)f(realisable,)310 b(success-)29014 62702
y(fully)367 b(taking)g(adv)-61 b(an)-31 b(tage)367 b(of)f(b)31
b(oth)366 b(threats)g(with)g(re-)29014 64030 y(sp)31
b(ect)365 b(to)h(the)g(same)g(card)f(ma)-31 b(y)367 b(b)31
b(e)365 b(m)-31 b(uc)g(h)366 b(more)g(dif-)29014 65358
y(\014cult.)1000 b(If)624 b Fc(D3)539 b Ff(is)f(realisable)i(but)e(not)
h Fc(D2)p Ff(,)582 b(then)29014 66687 y(the)353 b(risk)g(is)f(lo)-31
b(w)g(er)355 b(|)d(sa)-31 b(y)369 b Fc(medium)353 b Ff(|)f(dep)31
b(ending)29014 68015 y(on)519 b(the)h(details)g(of)g(the)f
(\014ngerprin)-31 b(t)520 b(imaging)i(and)29014 69343
y(feature)328 b(extraction)h(tec)-31 b(hnology)331 b(b)31
b(eing)328 b(used.)478 b(Note)29014 70672 y(also)300
b(that)g(threat)f Fc(D3)g Ff(could)h(b)31 b(e)298 b(reduced)g(if)h(a)g
(secret)29014 72000 y(feature)372 b(extraction)i(tec)-31
b(hnique)373 b(is)f(used)g(|)f(for)h(this)p eop
%%Page: 8 8
8 7 bop 2214 1107 a Ff(to)519 b(b)31 b(e)518 b(e\013ectiv)-31
b(e)519 b(the)g(card)f(readers)g(in)h(use)e(w)-31 b(ould)2214
2435 y(need)444 b(to)i(p)31 b(ossess)443 b(ph)-31 b(ysical)446
b(securit)-31 b(y)445 b(features)g(\(see)2214 3764 y(Section)364
b(3.4\).)492 b(Threat)364 b Fc(D3)f Ff(could)h(also)f(b)31
b(e)363 b(reduced)2214 5092 y(\(if)284 b(not)f(eliminated\))j(if)e(it)f
(w)-31 b(as)284 b(p)31 b(ossible)283 b(for)g(the)g(card)2214
6420 y(to)379 b(v)-31 b(erify)380 b(that)f(the)g(\014ngerprin)-31
b(t)379 b(features)g(pro)-31 b(vided)2214 7749 y(b)g(y)389
b(the)h(card)f(reader)g(indeed)g(b)31 b(elong)390 b(to)h(the)e(image)
2214 9077 y(pro)-31 b(vided)370 b(to)g(the)f(card)g(reader.)0
12362 y(Note)251 b(that)g(none)f(of)g(these)f(threats)i(apply)f(to)h
(scenario)f Fc(S5)p Ff(,)0 13690 y(whic)-31 b(h)309 b(is)e(not)i(prone)
f(to)g(attac)-31 b(k)310 b(on)e(the)g(comm)-31 b(unications)0
15019 y(path)419 b(since)g(this)f(path)i(is)e(not)h(used)f(for)h(the)g
(cardholder)0 16347 y(authen)-31 b(tication)373 b(pro)31
b(cess.)0 19004 y(W)-92 b(e)442 b(summarise)h(the)g(results)f(of)i(the)
f(ab)31 b(o)-31 b(v)g(e)444 b(analysis)g(in)0 20332 y(T)-92
b(able)370 b(2.)0 24126 y Fe(4.2)1394 b(Card)465 b(transaction)f(in)-39
b(tegrit)g(y)0 27919 y Ff(Whilst)399 b(there)g(ma)-31
b(y)400 b(b)31 b(e)398 b(man)-31 b(y)400 b(risks)e(to)h(the)g(in)-31
b(tegrit)g(y)401 b(of)0 29248 y(card)f(transactions,)410
b(w)-31 b(e)401 b(restrict)f(our)g(atten)-31 b(tion)403
b(here)d(to)0 30576 y(the)387 b(impact)h(of)f(threats)g(to)g(the)g
(card/reader)f(comm)-31 b(uni-)0 31904 y(cations)371
b(link.)0 34561 y(The)314 b(only)g(impact)i(whic)-31
b(h)314 b(results)f(from)h(the)g(analysis)h(de-)0 35889
y(scrib)31 b(ed)334 b(here)g(is)g(an)h(indirect)h(one.)481
b(If)335 b(an)-31 b(y)335 b(of)g(the)g(threats)0 37218
y(relev)-61 b(an)-31 b(t)593 b(to)g(the)g(particular)g(scenario)g(are)f
(realisable,)0 38546 y(then)438 b(this)f(ma)-31 b(y)439
b(giv)-31 b(e)438 b(a)g(cardholder)f(the)h(abilit)-31
b(y)440 b(to)e(dis-)0 39874 y(pute)499 b(transactions)h(after)g(they)f
(ha)-31 b(v)g(e)500 b(o)31 b(ccurred.)881 b(That)0 41203
y(is,)346 b(if)341 b(a)f(fraudulen)-31 b(t)342 b(cardholder)e(kno)-31
b(ws)341 b(of)g(the)f(existence)0 42531 y(of)406 b(certain)h(threats)f
(whic)-31 b(h)407 b(w)-31 b(ould)407 b(allo)-31 b(w)408
b(successful)d(use)0 43859 y(of)492 b(a)f(lost,)523 b(stolen)491
b(or)g(b)31 b(orro)-31 b(w)g(ed)492 b(card,)522 b(then)491
b(the)g(card-)0 45188 y(holder)338 b(could,)345 b(after)338
b(completion)j(of)d(a)g(gen)-31 b(uine)338 b(transac-)0
46516 y(tion,)310 b(claim)294 b(that)f(the)g(transaction)h(had)f(b)31
b(een)292 b(p)31 b(erformed)0 47844 y(b)-31 b(y)549 b(someone)h(else)f
(using)g(a)g(lost,)596 b(stolen)549 b(or)g(b)31 b(orro)-31
b(w)g(ed)0 49173 y(card.)0 52966 y Fe(4.3)1394 b(Cardholder)465
b(priv)-77 b(acy)464 b(threats)0 56760 y Ff(The)311 b(other)h(main)g
(area)g(of)g(impact)h(of)e(the)h(threats)f(iden)-31 b(ti-)0
58088 y(\014ed)347 b(in)i(Section)f(3)h(is)e(to)i(the)f(priv)-61
b(acy)348 b(of)g(the)g(cardholder.)0 59417 y(That)382
b(is,)i(the)d(cardholder)g(ma)-31 b(y)382 b(ha)-31 b(v)g(e)382
b(concerns)e(relating)0 60745 y(to)412 b(who)h(has)e(access)h(to)g
(information)j(relating)e(to)f(his)g(or)0 62073 y(her)508
b(\014ngerprin)-31 b(t.)913 b(Note)510 b(that)g(w)-31
b(e)510 b(are)f(concerned)f(here)0 63402 y(purely)341
b(with)h(priv)-61 b(acy)341 b(concerns,)346 b(unrelated)c(to)g(an)-31
b(y)341 b(p)31 b(os-)0 64730 y(sible)370 b(threat)g(of)f(fraud.)0
67387 y(The)728 b(follo)-31 b(wing)731 b(impacts)e(arise)e(from)i(the)e
(iden)-31 b(ti\014ed)0 68715 y(threats.)1107 72000 y
Fb(\017)554 b Ff(Arising)370 b(from)g Fc(U1)p 2214 72392
8086 45 v 621 w Ff(\(and)621 b(hence)f(applying)j(to)e
Fc(S1)29014 1107 y Ff(and)321 b Fc(S2)g Ff(only\):)470
b(loss)320 b(of)h(con\014den)-31 b(tialit)g(y)324 b(of)e(user)d(\014n-)
29014 2435 y(gerprin)-31 b(t)370 b(template.)27907 4662
y Fb(\017)554 b Ff(Arising)370 b(from)f Fc(U3)p 29014
5054 V 622 w Ff(\(and)621 b(hence)f(applying)j(to)e Fc(S2)29014
5990 y Ff(and)321 b Fc(S3)g Ff(only\):)470 b(loss)320
b(of)h(con\014den)-31 b(tialit)g(y)324 b(of)e(user)d(\014n-)29014
7319 y(gerprin)-31 b(t)370 b(image.)27907 9545 y Fb(\017)554
b Ff(Arising)370 b(from)f Fc(D2)p 29014 9938 8083 45
v 622 w Ff(\(and)622 b(hence)f(applying)i(to)f Fc(S3)29014
10874 y Ff(and)321 b Fc(S4)g Ff(only\):)470 b(loss)320
b(of)h(con\014den)-31 b(tialit)g(y)324 b(of)e(user)d(\014n-)29014
12202 y(gerprin)-31 b(t)370 b(features.)26800 15975 y(The)291
b(three)f(impacts)i(are)e(rather)h(similar)h(to)f(one)g(another,)26800
17303 y(and)373 b(all)g(ha)-31 b(v)g(e)374 b(an)e(impact)i(on)f(user)e
(priv)-61 b(acy)-92 b(.)502 b(The)373 b(c)-31 b(hoice)26800
18632 y(of)534 b(scenario)g(\(apart)h(from)f(the)g(fact)h(that)g
Fc(S5)f Ff(is)f(unaf-)26800 19960 y(fected\))470 b(has)e(little)j(b)31
b(earing)469 b(on)g(the)g(degree)g(of)g(the)g(im-)26800
21289 y(pact.)26800 26830 y Fd(5)1495 b(Conclusions)26800
30821 y Ff(The)330 b(main)i(purp)31 b(ose)329 b(of)i(the)g(analysis)g
(in)f(this)h(pap)31 b(er)330 b(is)g(to)26800 32149 y(understand)503
b(ho)-31 b(w)505 b(to)f(in)-31 b(tegrate)505 b(biometric)g(cardholder)
26800 33478 y(authen)-31 b(tication)295 b(with)e(a)e(smartcard)h(in)f
(the)h(most)g(cost)g(ef-)26800 34806 y(fectiv)-31 b(e)333
b(manner.)480 b(In)331 b(particular)i(w)-31 b(e)332 b(ha)-31
b(v)g(e)333 b(sough)-31 b(t)333 b(to)f(un-)26800 36134
y(derstand)h(what)h(is)f(to)h(b)31 b(e)333 b(gained)h(from)g(the)f(v)
-61 b(arious)333 b(p)31 b(os-)26800 37463 y(sible)429
b(lev)-31 b(els)429 b(of)h(in)-31 b(tegration)431 b(of)e(biometric)i
(system)e(with)26800 38791 y(the)369 b(smartcard.)26800
41448 y(First)316 b(and)h(foremost)h(it)g(is)e(clear)h(that)h(scenario)
f Fc(S5)g Ff(is)g(un-)26800 42776 y(a\013ected)c(b)-31
b(y)312 b(the)h(securit)-31 b(y)312 b(of)h(the)f(comm)-31
b(unications)316 b(path)26800 44105 y(since)434 b(in)h(that)h(scenario)
e(the)h(card/reader)f(comm)-31 b(unica-)26800 45433 y(tions)460
b(path)h(is)e(not)h(used)f(\(at)i(least)f(for)g(the)f(cardholder)26800
46761 y(authen)-31 b(tication)313 b(pro)31 b(cess\).)471
b(Th)-31 b(us)309 b(scenario)h Fc(S5)f Ff(is)g(clearly)26800
48090 y(the)438 b(b)31 b(est)437 b(in)h(an)g(absolute)g(sense)f(|)g(ho)
-31 b(w)g(ev)g(er)439 b(it)f(is)g(also)26800 49418 y(lik)-31
b(ely)445 b(to)f(b)31 b(e)442 b(the)i(most)g(costly)g(to)g(deplo)-31
b(y)-92 b(.)715 b(It)443 b(is)g(there-)26800 50746 y(fore)508
b(in)-31 b(teresting)510 b(to)f(understand)f(ho)-31 b(w)509
b(the)f(other)h(four)26800 52075 y(scenarios)482 b(compare,)512
b(b)31 b(earing)483 b(in)g(mind)g(that,)513 b(of)483
b(these)26800 53403 y(four,)356 b(scenario)c Fc(S1)g
Ff(is)g(lik)-31 b(ely)354 b(to)f(b)31 b(e)351 b(the)h(c)-31
b(heap)31 b(est)352 b(option)26800 54731 y(and)325 b(scenario)h
Fc(S4)g Ff(the)f(most)h(exp)31 b(ensiv)-31 b(e,)335 b(since)325
b(they)g(rep-)26800 56060 y(resen)-31 b(t)295 b(the)g(lo)-31
b(w)g(est)297 b(and)e(the)h(highest)g(lev)-31 b(el)296
b(of)g(in)-31 b(tegration)26800 57388 y(resp)31 b(ectiv)-31
b(ely)-92 b(.)26800 60045 y(F)g(or)341 b(the)h(other)g(four)g
(scenarios,)348 b(the)341 b(cardholder)i(priv)-61 b(acy)26800
61373 y(threat)290 b(is)f(v)-31 b(ery)289 b(similar)i(regardless)e(of)h
(the)f(scenario.)467 b(The)26800 62702 y(main)554 b(issue)e(w)-31
b(ould)554 b(app)31 b(ear)553 b(to)g(b)31 b(e)552 b(fraudulen)-31
b(t)554 b(use)e(of)26800 64030 y(misappropriated)371
b(cards.)26800 66687 y(Of)651 b(scenarios)f Fc(S1)p Ff(,)722
b Fc(S2)p Ff(,)g Fc(S3)651 b Ff(and)g Fc(S4)p Ff(,)722
b(it)651 b(w)-31 b(ould)653 b(ap-)26800 68015 y(p)31
b(ear)630 b(that)i(scenarios)f Fc(S1)g Ff(and)g Fc(S2)g
Ff(are)g(v)-31 b(ery)630 b(similar)26800 69343 y(with)339
b(resp)31 b(ect)337 b(to)i(their)f(vulnerabilit)-31 b(y)340
b(to)f(attac)-31 b(ks)339 b(on)g(the)26800 70672 y(card/reader)496
b(comm)-31 b(unications)500 b(path.)874 b(The)497 b(degree)f(to)26800
72000 y(whic)-31 b(h)359 b(scenarios)f Fc(S3)g Ff(and)g
Fc(S4)g Ff(reduce)f(the)h(risk)g(dep)31 b(ends)p eop
%%Page: 9 9
9 8 bop 9258 44 33085 45 v 9236 1373 45 1329 v 9922 974
a Fc(Scenario)p 15261 1373 V 1329 w(Degree)427 b(of)e(risk)p
42320 1373 V 9258 1417 33085 45 v 9258 1638 V 9236 4295
45 2657 v 9922 3243 a(S1)p 15261 4295 V 16611 2568 a
Ff(V)-92 b(ery)369 b(high)h(\(if)456 b Fc(D1)370 b Ff(realisable\).)
16611 3896 y(High)h(\(if)456 b Fc(U2)370 b Ff(realisable\).)p
42320 4295 V 9258 4339 33085 45 v 9236 9653 45 5314 v
9922 7273 a Fc(S2)p 15261 9653 V 16611 5269 a Ff(V)-92
b(ery)369 b(high)h(\(if)456 b Fc(D1)370 b Ff(realisable\).)16611
6597 y(High)h(\(if)456 b Fc(U2)370 b Ff(realisable\).)16611
7926 y(High)h(\(if)456 b Fc(U3)370 b Ff(and)f Fc(U4)h
Ff(realisable)h(for)e(the)g(same)h(card)p 31808 8103
8469 45 v(\).)16611 9254 y(Medium)g(\(if)456 b Fc(U4)370
b Ff(realisable\).)p 42320 9653 45 5314 v 9258 9697 33085
45 v 9236 12354 45 2657 v 9922 11302 a Fc(S3)p 15261
12354 V 16611 10627 a Ff(High)h(\(if)456 b Fc(D2)370
b Ff(and)f Fc(D3)h Ff(realisable)g(for)g(the)f(same)h(card)p
31801 10804 8469 45 v(\).)16611 11955 y(Medium)g(\(if)456
b Fc(D3)370 b Ff(realisable\).)p 42320 12354 45 2657
v 9258 12398 33085 45 v 9236 16383 45 3986 v 9922 14667
a Fc(S4)p 15261 16383 V 16611 13328 a Ff(High)h(\(if)456
b Fc(U3)370 b Ff(and)f Fc(U4)h Ff(realisable)h(for)e(the)g(same)h(card)
p 31808 13505 8469 45 v(\).)16611 14656 y(High)h(\(if)456
b Fc(D2)370 b Ff(and)f Fc(D3)h Ff(realisable)g(for)g(the)f(same)h(card)
p 31801 14833 V(\).)16611 15984 y(Medium)g(\(if)456 b
Fc(D3)370 b Ff(realisable\).)p 42320 16383 45 3986 v
9258 16427 33085 45 v 9236 17767 45 1340 v 9922 17368
a Fc(S5)p 15261 17767 V 16611 17357 a Ff(None.)p 42320
17767 V 9258 17811 33085 45 v 12224 19797 a(T)-92 b(able)370
b(2:)493 b(Summary)371 b(of)e(impacts)i(of)f(misappropriated)h(cards.)0
23333 y(partly)311 b(on)g(tec)-31 b(hnical)312 b(issues)d(relating)j
(to)f(the)f(format)i(and)0 24662 y(use)378 b(of)g(\014ngerprin)-31
b(t)379 b(images)h(and)e(features,)j(and)e(also)g(de-)0
25990 y(p)31 b(ending)505 b(on)g(ho)-31 b(w)506 b(easy)f(it)h(w)-31
b(ould)506 b(b)31 b(e)505 b(to)g(b)31 b(oth)506 b(steal)g(a)0
27319 y(card)369 b(and)g(monitor)i(its)f(use)f(prior)g(to)h(its)f
(theft.)0 29975 y Fc(S4)274 b Ff(represen)-31 b(ts)273
b(a)h(higher)f(lev)-31 b(el)275 b(of)f(in)-31 b(tegration)277
b(of)d(the)g(bio-)0 31304 y(metric)455 b(system)g(with)g(the)g
(smartcard)g(than)g Fc(S3)p Ff(.)749 b(Ho)-31 b(w-)0
32632 y(ev)g(er)486 b(the)g(in)-31 b(tegration)490 b(of)c(the)h
(\014ngerprin)-31 b(t)486 b(sensor)g(with)0 33960 y(the)474
b(smartcard)g(in)f Fc(S4)h Ff(mak)-31 b(es)474 b(the)g(system)g
(vulnerable)0 35289 y(to)514 b(threats)g Fc(U3)g Ff(and)f
Fc(U4)h Ff(in)f(the)h(uplink.)926 b(F)-92 b(rom)513 b(that)0
36617 y(p)31 b(oin)-31 b(t)260 b(of)g(view,)283 b Fc(S4)260
b Ff(w)-31 b(ould)260 b(app)31 b(ear)260 b(to)g(b)31
b(e)258 b(an)i(arc)-31 b(hitecture)0 37945 y(more)354
b(op)31 b(en)353 b(to)h(attac)-31 b(ks)355 b(than)f Fc(S3)p
Ff(.)488 b(Note,)358 b(ho)-31 b(w)g(ev)g(er,)359 b(that)0
39274 y(when)521 b(the)h(\014ngerprin)-31 b(t)521 b(sensor)g(is)g
(built)h(in)-31 b(to)523 b(the)e(card)0 40602 y(reader,)327
b(the)316 b(system)h(b)31 b(ecomes)317 b(vulnerable)g(to)g(threats)g
(to)0 41930 y(the)445 b(card)f(reader)f(\(see)i(Section)g(3.4\).)720
b(As)444 b(suggested)h(in)0 43259 y([9)q(],)f(a)429 b(fak)-31
b(e)430 b(card)e(reader)g(could)i(b)31 b(e)428 b(used)g(to)i(record)e
(the)0 44587 y(biometric)358 b(data)g(of)f(legitimate)k(users)355
b(in)i(an)g(attac)-31 b(k)358 b(sim-)0 45915 y(ilar)453
b(to)g(a)f(false)h(A)-92 b(TM)452 b(attac)-31 b(k,)475
b(whic)-31 b(h)453 b(ma)-31 b(y)453 b(p)31 b(oten)-31
b(tially)0 47244 y(b)31 b(e)406 b(an)i(attac)-31 b(k)409
b(more)e(easily)h(realisable)h(and)e(more)g(dam-)0 48572
y(aging)507 b(than)f(threats)g Fc(U3)g Ff(and)f Fc(U4)p
Ff(.)902 b(Moreo)-31 b(v)g(er,)540 b(giv)-31 b(en)0 49901
y(that)449 b(the)g(sensor)e(is)h(a)g(fragile)i(piece)e(of)h(equipmen)
-31 b(t,)470 b(in-)0 51229 y(tegrating)i(the)e(sensor)f(with)i(the)f
(card)f(reader)g(is)h(not)h(a)0 52557 y(viable)334 b(solution)g(for)f
(man)-31 b(y)333 b(applications)i(since)e(it)g(mak)-31
b(es)0 53886 y(the)369 b(system)h(vulnerable)g(to)g(v)-61
b(andalism.)0 56542 y(The)389 b(gain)h(to)g(b)31 b(e)388
b(deriv)-31 b(ed)390 b(from)f(in)-31 b(tegrating)392
b(the)d(\014nger-)0 57871 y(prin)-31 b(t)313 b(sensor)e(with)j(the)e
(smartcard)h(is)f(minimal)j(if)e(all)g(\014n-)0 59199
y(gerprin)-31 b(t)452 b(feature)g(extraction)h(and)f(matc)-31
b(hing)453 b(are)f(done)0 60527 y(o\013)473 b(the)g(card.)804
b(Ho)-31 b(w)g(ev)g(er,)501 b(dep)31 b(ending)474 b(on)f(the)g(en)-31
b(viron-)0 61856 y(men)g(t,)500 b(signi\014can)-31 b(t)474
b(gains)g(can)f(b)31 b(e)472 b(ac)-31 b(hiev)g(ed)474
b(as)e(long)i(as)0 63184 y(the)418 b(matc)-31 b(hing)420
b(is)e(p)31 b(erformed)417 b(on)h(card,)431 b(ev)-31
b(en)418 b(when)g(the)0 64512 y(feature)370 b(extraction)h(is)e(p)31
b(erformed)369 b(o\013-card.)0 67169 y(It)349 b(is)g(in)-31
b(teresting)351 b(to)e(note)h(that)g(almost)h(all)f(the)g(most)f(se-)0
68497 y(rious)308 b(threats)g(arise)g(from)g(an)g(assumed)g(lac)-31
b(k)309 b(of)f(in)-31 b(tegrit)g(y)0 69826 y(for)527
b(the)h(data)h(link.)968 b(If)527 b(it)h(is)f(assumed)h(that)g(the)g
(card)0 71154 y(reader)466 b(is)h(a)g(trusted)f(device)h(and)g(has)g
(not)g(b)31 b(een)466 b(in)-31 b(ter-)26800 23333 y(fered)469
b(with)h(or)f(replaced)h(\(see)f(also)h(Section)g(3.4\),)497
b(then)26800 24662 y(guaran)-31 b(teeing)474 b(the)e(in)-31
b(tegrit)g(y)474 b(of)e(the)g(link)h(b)31 b(et)-31 b(w)g(een)473
b(the)26800 25990 y(card)431 b(reader)f(and)h(the)g(card)g(w)-31
b(ould)432 b(e\013ectiv)-31 b(ely)432 b(prev)-31 b(en)g(t)26800
27319 y(all)346 b(the)f(threats,)351 b(ev)-31 b(en)345
b(in)g(the)g(absence)g(of)g(an)-31 b(y)346 b(con\014den-)26800
28647 y(tialit)-31 b(y)372 b(for)e(data)g(transferred.)26800
31304 y(Finally)435 b(note)f(that,)451 b(giv)-31 b(en)435
b(that)f(the)g(threats)g(discussed)26800 32632 y(mostly)453
b(relate)f(to)g(use)e(of)i(misappropriated)h(cards,)472
b(the)26800 33960 y(use)627 b(of)g(secure)f(auditing)j(and)f(blac)-31
b(klisting)630 b(measures)26800 35289 y(within)341 b(the)f(application)
j(can)d(help)g(to)h(minimise)g(the)f(im-)26800 36617
y(pact)370 b(of)g(suc)-31 b(h)368 b(threats.)26800 42410
y Fd(6)1495 b(Ac)-42 b(kno)g(wledgmen)g(ts)26800 46652
y Ff(The)586 b(w)-31 b(ork)587 b(describ)31 b(ed)585
b(in)i(this)f(pap)31 b(er)586 b(has)g(b)31 b(een)585
b(sup-)26800 47981 y(p)31 b(orted)509 b(b)-31 b(y)510
b(the)f(Europ)31 b(ean)510 b(Commission)i(through)e(the)26800
49309 y(IST)697 b(Programme)h(under)f(Con)-31 b(tract)698
b(IST-2000-25168)26800 50637 y(\(Finger)p 30420 50637
333 45 v 399 w(Card\).)817 b(The)478 b(information)i(in)d(this)h(do)31
b(cumen)-31 b(t)26800 51966 y(is)456 b(pro)-31 b(vided)457
b(as)g(is,)478 b(and)457 b(no)g(guaran)-31 b(tee)457
b(or)g(w)-31 b(arran)g(t)g(y)458 b(is)26800 53294 y(giv)-31
b(en)411 b(or)g(implied)h(that)f(the)g(information)i(is)d(\014t)h(for)f
(an)-31 b(y)26800 54622 y(particular)352 b(purp)31 b(ose.)485
b(The)351 b(user)e(thereof)i(uses)f(the)g(infor-)26800
55951 y(mation)371 b(at)f(its)g(sole)f(risk)g(and)h(liabilit)-31
b(y)-92 b(.)26800 58607 y(The)554 b(authors)f(w)-31 b(ould)555
b(lik)-31 b(e)555 b(to)f(thank)g(their)g(colleagues)26800
59936 y(in)339 b(the)f(Finger)p 33126 59936 V 399 w(Card)g(Pro)61
b(ject)340 b(for)e(their)h(encouragemen)-31 b(t)26800
61264 y(and)369 b(advice.)26800 67057 y Fd(References)27353
70672 y Ff([1])555 b(M.)403 b(Hendry)-92 b(,)411 b Fa(Smart)427
b(Car)-57 b(d)427 b(Se)-57 b(curity)428 b(and)f(Applic)-57
b(a-)29075 72000 y(tions)p Ff(.)370 b(Artec)-31 b(h)369
b(House,)h(1997.)p eop
%%Page: 10 10
10 9 bop 553 1107 a Ff([2])555 b(A.)325 b(Menezes,)333
b(P)-92 b(.)324 b(v)-61 b(an)324 b(Oorsc)-31 b(hot,)335
b(and)324 b(S.)g(V)-92 b(anstone,)2275 2435 y Fa(Handb)-57
b(o)g(ok)308 b(of)g(Applie)-57 b(d)307 b(Crypto)-57 b(gr)g(aphy)p
Ff(.)274 b(CR)-31 b(C)273 b(Press,)2275 3764 y(1997.)553
5978 y([3])555 b(W.)504 b(Rankl)g(and)g(W.)g(E\016ng,)538
b Fa(Smart)520 b(Car)-57 b(d)519 b(Hand-)2275 7306 y(b)-57
b(o)g(ok)p Ff(.)371 b(John)e(Wiley)h(&)f(Sons,)g(2001.)553
9520 y([4])555 b(ISO/DIS)500 b(21352:)756 b(2001,)535
b(Biometric)502 b(information)2275 10848 y(managemen)-31
b(t)316 b(and)e(securit)-31 b(y)-92 b(,)324 b(ISO/IEC)314
b(JTC)g(1/SC)2275 12177 y(27)370 b(N2949.)553 14390 y([5])555
b(ANSI)334 b(X9.8)i(|)e(1995,)343 b(Banking)336 b(|)d(P)-31
b(ersonal)336 b(iden-)2275 15719 y(ti\014cation)361 b(n)-31
b(um)g(b)31 b(er)357 b(managemen)-31 b(t)361 b(and)d(securit)-31
b(y)358 b(|)2275 17047 y(P)-31 b(art)371 b(1:)492 b(PIN)370
b(protection)h(and)e(principles.)553 19261 y([6])555
b(ISO)254 b(9564-1:)438 b(2002,)280 b(Banking)256 b(|)e(P)-31
b(ersonal)255 b(iden)-31 b(ti\014-)2275 20589 y(cation)283
b(n)-31 b(um)g(b)31 b(er)281 b(\(PIN\))h(managemen)-31
b(t)283 b(and)e(securit)-31 b(y)2275 21918 y(|)495 b(P)-31
b(art)495 b(1:)744 b(Basic)495 b(principles)g(and)f(requiremen)-31
b(ts)2275 23246 y(for)354 b(online)i(PIN)e(handling)h(in)f(A)-92
b(TM)354 b(and)g(POS)g(sys-)2275 24575 y(tems.)553 26788
y([7])555 b(EMV)258 b(2000,)282 b(In)-31 b(tegrated)258
b(circuit)g(card)f(sp)31 b(eci\014cation)2275 28117 y(for)443
b(pa)-31 b(ymen)g(t)444 b(systems,)461 b(Bo)31 b(ok)443
b(2)g(|)f(Securit)-31 b(y)443 b(and)2275 29445 y(k)-31
b(ey)370 b(managemen)-31 b(t.)373 b(V)-92 b(ersion)369
b(4.0,)i(2000.)553 31659 y([8])555 b(T.)329 b(v)-61 b(an)328
b(der)f(Putte)h(and)g(J.)g(Keuning,)337 b(\\Biometrical)2275
32987 y(\014ngerprin)-31 b(t)456 b(recognition:)668 b(don't)456
b(get)h(y)-31 b(our)455 b(\014ngers)2275 34316 y(burned",)609
b(in)562 b Fa(Pr)-57 b(o)g(c.)573 b(4th)f(IFIP)f(WG8.8)i(Working)2275
35644 y(Confer)-57 b(enc)g(e)510 b(on)e(Smart)f(Car)-57
b(d)507 b(R)-57 b(ese)g(ar)g(ch)509 b(and)e(A)-57 b(d-)2275
36972 y(vanc)g(e)g(d)586 b(Applic)-57 b(ations)584 b(\(CARDIS)g(2000\))
p Ff(,)624 b(Bristol)2275 38301 y(\(UK\),)413 b(2000,)424
b(J.)411 b(Domingo-F)-92 b(errer,)422 b(D.)412 b(Chan,)423
b(and)2275 39629 y(A.)554 b(W)-92 b(atson)554 b(\(editors\),)601
b(Klu)-31 b(w)g(er)554 b(Academic)h(Pub-)2275 40958 y(lishers,)370
b(pp.)f(273-288.)553 43171 y([9])555 b(G.)500 b(Hac)-31
b(hez,)532 b(F.)500 b(Ko)31 b(eune,)532 b(and)499 b(J.-J.)h
(Quisquater,)2275 44500 y(\\Biometrics,)719 b(access)646
b(con)-31 b(trol,)718 b(smart)647 b(cards:)1047 b(a)2275
45828 y(not)392 b(so)f(simple)h(com)-31 b(bination",)400
b(in)392 b Fa(Pr)-57 b(o)g(c.)417 b(4th)e(IFIP)2275 47156
y(WG8.8)639 b(Working)f(Confer)-57 b(enc)g(e)641 b(on)d(Smart)g(Car)-57
b(d)2275 48485 y(R)g(ese)g(ar)g(ch)339 b(and)f(A)-57
b(dvanc)g(e)g(d)339 b(Applic)-57 b(ations)338 b(\(CARDIS)2275
49813 y(2000\))p Ff(,)415 b(Bristol)407 b(\(UK\),)h(2000,)417
b(J.)407 b(Domingo-F)-92 b(errer,)2275 51142 y(D.)250
b(Chan,)275 b(and)251 b(A.)f(W)-92 b(atson)251 b(\(editors\),)275
b(Klu)-31 b(w)g(er)251 b(Aca-)2275 52470 y(demic)370
b(Publishers,)g(pp.)f(273-288.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

